PROC SQL;
   CREATE TABLE MIGRATIE.BAS_AIC_VOORTGANG AS
   SELECT t1.Tra_id,
          t1.Dos_id,
          t1.Prg_id,
          t1.Datum_indiening FORMAT=B8601DT19. AS Datum_indiening,
          t1.Datum_onvolledig FORMAT=B8601DT19. AS Datum_onvolledig,
          t1.Datum_volledig FORMAT=B8601DT19. AS Datum_volledig,
          t1.Datum_acc_afd FORMAT=B8601DT19. AS Datum_acc_afd,
          t1.Datum_acc_ol FORMAT=B8601DT19. AS Datum_acc_ol,
          t1.Datum_in_aic FORMAT=B8601DT19. AS Datum_in_aic,
          t1.Datum_steekproef FORMAT=B8601DT19. AS Datum_steekproef,
          t1.Datum_in_afd FORMAT=B8601DT19. AS Datum_in_afd,
          t1.Datum_acc_aic FORMAT=B8601DT19. AS Datum_acc_aic,
          t1.Datum_definitief FORMAT=B8601DT19. AS Datum_definitief,
          t1.Valutadatum FORMAT=B8601DT19. AS Valutadatum,
          t1.User_indiening,
          t1.User_onvolledig,
          t1.User_volledig,
          t1.User_acc_afd,
          t1.User_acc_ol,
          t1.User_in_aic,
          t1.User_steekproef,
          t1.User_in_afd,
          t1.User_acc_aic,
          t1.User_definitief,
          t1.Acc_ol_verplicht_jn,
          t1.Acc_aic_verplicht_jn,
          t1.Bewerken_jn,
          t1.Bedrag_te_verrekenen,
          t1.Acm_id,
          t1.Automatisch_afhandelen_jn,
          t1.User_acc_ink,
          t1.Datum_acc_ink FORMAT=B8601DT19. AS Datum_acc_ink,
          t1.Acc_ink_verplicht_jn
     FROM DATAQASG.AIC_VOORTGANG_TCMG t1;
QUIT;

data MIGRATIE.BAS_AIC_VOORTGANG;
  set MIGRATIE.BAS_AIC_VOORTGANG;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_AIC_VOORTGANG.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Tra_id" 
       ','
          "Dos_id" 
       ','
          "Prg_id" 
       ','
          "Datum_indiening" 
       ','
          "Datum_onvolledig" 
       ','
          "Datum_volledig" 
       ','
          "Datum_acc_afd" 
       ','
          "Datum_acc_ol" 
       ','
          "Datum_in_aic" 
       ','
          "Datum_steekproef" 
       ','
          "Datum_in_afd" 
       ','
          "Datum_acc_aic" 
       ','
          "Datum_definitief" 
       ','
          "Valutadatum" 
       ','
          "User_indiening" 
       ','
          "User_onvolledig" 
       ','
          "User_volledig" 
       ','
          "User_acc_afd" 
       ','
          "User_acc_ol" 
       ','
          "User_in_aic" 
       ','
          "User_steekproef" 
       ','
          "User_in_afd" 
       ','
          "User_acc_aic" 
       ','
          "User_definitief" 
       ','
          "Acc_ol_verplicht_jn" 
       ','
          "Acc_aic_verplicht_jn" 
       ','
          "Bewerken_jn" 
       ','
          "Bedrag_te_verrekenen" 
       ','
          "Acm_id" 
       ','
          "Automatisch_afhandelen_jn" 
       ','
          "User_acc_ink" 
       ','
          "Datum_acc_ink" 
       ','
          "Acc_ink_verplicht_jn" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_AIC_VOORTGANG   end=EFIEOD; 
       format Tra_id best12. ;
       format Dos_id best12. ;
       format Prg_id best12. ;
       format Datum_indiening B8601DT19. ;
       format Datum_onvolledig B8601DT19. ;
       format Datum_volledig B8601DT19. ;
       format Datum_acc_afd B8601DT19. ;
       format Datum_acc_ol B8601DT19. ;
       format Datum_in_aic B8601DT19. ;
       format Datum_steekproef B8601DT19. ;
       format Datum_in_afd B8601DT19. ;
       format Datum_acc_aic B8601DT19. ;
       format Datum_definitief B8601DT19. ;
       format Valutadatum B8601DT19. ;
       format User_indiening  ;
       format User_onvolledig  ;
       format User_volledig  ;
       format User_acc_afd  ;
       format User_acc_ol  ;
       format User_in_aic  ;
       format User_steekproef  ;
       format User_in_afd  ;
       format User_acc_aic  ;
       format User_definitief  ;
       format Acc_ol_verplicht_jn  ;
       format Acc_aic_verplicht_jn  ;
       format Bewerken_jn  ;
       format Bedrag_te_verrekenen best12. ;
       format Acm_id best12. ;
       format Automatisch_afhandelen_jn  ;
       format User_acc_ink  ;
       format Datum_acc_ink B8601DT19. ;
       format Acc_ink_verplicht_jn  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Tra_id)
         then put "," @;
         else put Tra_id @;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Prg_id)
         then put "," @;
         else put Prg_id @;
       if missing(Datum_indiening)
         then put "," @;
         else put Datum_indiening @;
       if missing(Datum_onvolledig)
         then put "," @;
         else put Datum_onvolledig @;
       if missing(Datum_volledig)
         then put "," @;
         else put Datum_volledig @;
       if missing(Datum_acc_afd)
         then put "," @;
         else put Datum_acc_afd @;
       if missing(Datum_acc_ol)
         then put "," @;
         else put Datum_acc_ol @;
       if missing(Datum_in_aic)
         then put "," @;
         else put Datum_in_aic @;
       if missing(Datum_steekproef)
         then put "," @;
         else put Datum_steekproef @;
       if missing(Datum_in_afd)
         then put "," @;
         else put Datum_in_afd @;
       if missing(Datum_acc_aic)
         then put "," @;
         else put Datum_acc_aic @;
       if missing(Datum_definitief)
         then put "," @;
         else put Datum_definitief @;
       if missing(Valutadatum)
         then put "," @;
         else put Valutadatum @;
       if missing(User_indiening)
         then put "," @;
         else do;
                   attrLengte_8932948179240050195=length(User_indiening);
                   aantalLF_8932948179240050195 = countc(User_indiening,'0A'x);
                   maxPassend_8932948179240050195=30-1-aantalLF_8932948179240050195;
                   if attrLengte_8932948179240050195 > max(maxPassend_8932948179240050195,1000)
                     then passend_8932948179240050195 = substr(User_indiening,1,maxPassend_8932948179240050195);
                     else passend_8932948179240050195 = User_indiening;
                   passend_8932948179240050195 = tranwrd(passend_8932948179240050195,'9D'x,'D0'x);
                   put passend_8932948179240050195 ~ @;
              end;
       if missing(User_onvolledig)
         then put "," @;
         else do;
                   attrLengte_1107236414529046248=length(User_onvolledig);
                   aantalLF_1107236414529046248 = countc(User_onvolledig,'0A'x);
                   maxPassend_1107236414529046248=30-1-aantalLF_1107236414529046248;
                   if attrLengte_1107236414529046248 > max(maxPassend_1107236414529046248,1000)
                     then passend_1107236414529046248 = substr(User_onvolledig,1,maxPassend_1107236414529046248);
                     else passend_1107236414529046248 = User_onvolledig;
                   passend_1107236414529046248 = tranwrd(passend_1107236414529046248,'9D'x,'D0'x);
                   put passend_1107236414529046248 ~ @;
              end;
       if missing(User_volledig)
         then put "," @;
         else do;
                   attrLengte_5032803394849495043=length(User_volledig);
                   aantalLF_5032803394849495043 = countc(User_volledig,'0A'x);
                   maxPassend_5032803394849495043=30-1-aantalLF_5032803394849495043;
                   if attrLengte_5032803394849495043 > max(maxPassend_5032803394849495043,1000)
                     then passend_5032803394849495043 = substr(User_volledig,1,maxPassend_5032803394849495043);
                     else passend_5032803394849495043 = User_volledig;
                   passend_5032803394849495043 = tranwrd(passend_5032803394849495043,'9D'x,'D0'x);
                   put passend_5032803394849495043 ~ @;
              end;
       if missing(User_acc_afd)
         then put "," @;
         else do;
                   attrLengte_9100170196596642313=length(User_acc_afd);
                   aantalLF_9100170196596642313 = countc(User_acc_afd,'0A'x);
                   maxPassend_9100170196596642313=30-1-aantalLF_9100170196596642313;
                   if attrLengte_9100170196596642313 > max(maxPassend_9100170196596642313,1000)
                     then passend_9100170196596642313 = substr(User_acc_afd,1,maxPassend_9100170196596642313);
                     else passend_9100170196596642313 = User_acc_afd;
                   passend_9100170196596642313 = tranwrd(passend_9100170196596642313,'9D'x,'D0'x);
                   put passend_9100170196596642313 ~ @;
              end;
       if missing(User_acc_ol)
         then put "," @;
         else do;
                   attrLengte_5920868292370862362=length(User_acc_ol);
                   aantalLF_5920868292370862362 = countc(User_acc_ol,'0A'x);
                   maxPassend_5920868292370862362=30-1-aantalLF_5920868292370862362;
                   if attrLengte_5920868292370862362 > max(maxPassend_5920868292370862362,1000)
                     then passend_5920868292370862362 = substr(User_acc_ol,1,maxPassend_5920868292370862362);
                     else passend_5920868292370862362 = User_acc_ol;
                   passend_5920868292370862362 = tranwrd(passend_5920868292370862362,'9D'x,'D0'x);
                   put passend_5920868292370862362 ~ @;
              end;
       if missing(User_in_aic)
         then put "," @;
         else do;
                   attrLengte_3831253343196299444=length(User_in_aic);
                   aantalLF_3831253343196299444 = countc(User_in_aic,'0A'x);
                   maxPassend_3831253343196299444=30-1-aantalLF_3831253343196299444;
                   if attrLengte_3831253343196299444 > max(maxPassend_3831253343196299444,1000)
                     then passend_3831253343196299444 = substr(User_in_aic,1,maxPassend_3831253343196299444);
                     else passend_3831253343196299444 = User_in_aic;
                   passend_3831253343196299444 = tranwrd(passend_3831253343196299444,'9D'x,'D0'x);
                   put passend_3831253343196299444 ~ @;
              end;
       if missing(User_steekproef)
         then put "," @;
         else do;
                   attrLengte_2391003241544114741=length(User_steekproef);
                   aantalLF_2391003241544114741 = countc(User_steekproef,'0A'x);
                   maxPassend_2391003241544114741=30-1-aantalLF_2391003241544114741;
                   if attrLengte_2391003241544114741 > max(maxPassend_2391003241544114741,1000)
                     then passend_2391003241544114741 = substr(User_steekproef,1,maxPassend_2391003241544114741);
                     else passend_2391003241544114741 = User_steekproef;
                   passend_2391003241544114741 = tranwrd(passend_2391003241544114741,'9D'x,'D0'x);
                   put passend_2391003241544114741 ~ @;
              end;
       if missing(User_in_afd)
         then put "," @;
         else do;
                   attrLengte_3832660786816945718=length(User_in_afd);
                   aantalLF_3832660786816945718 = countc(User_in_afd,'0A'x);
                   maxPassend_3832660786816945718=30-1-aantalLF_3832660786816945718;
                   if attrLengte_3832660786816945718 > max(maxPassend_3832660786816945718,1000)
                     then passend_3832660786816945718 = substr(User_in_afd,1,maxPassend_3832660786816945718);
                     else passend_3832660786816945718 = User_in_afd;
                   passend_3832660786816945718 = tranwrd(passend_3832660786816945718,'9D'x,'D0'x);
                   put passend_3832660786816945718 ~ @;
              end;
       if missing(User_acc_aic)
         then put "," @;
         else do;
                   attrLengte_9104392523968836395=length(User_acc_aic);
                   aantalLF_9104392523968836395 = countc(User_acc_aic,'0A'x);
                   maxPassend_9104392523968836395=30-1-aantalLF_9104392523968836395;
                   if attrLengte_9104392523968836395 > max(maxPassend_9104392523968836395,1000)
                     then passend_9104392523968836395 = substr(User_acc_aic,1,maxPassend_9104392523968836395);
                     else passend_9104392523968836395 = User_acc_aic;
                   passend_9104392523968836395 = tranwrd(passend_9104392523968836395,'9D'x,'D0'x);
                   put passend_9104392523968836395 ~ @;
              end;
       if missing(User_definitief)
         then put "," @;
         else do;
                   attrLengte_2873212846266840276=length(User_definitief);
                   aantalLF_2873212846266840276 = countc(User_definitief,'0A'x);
                   maxPassend_2873212846266840276=30-1-aantalLF_2873212846266840276;
                   if attrLengte_2873212846266840276 > max(maxPassend_2873212846266840276,1000)
                     then passend_2873212846266840276 = substr(User_definitief,1,maxPassend_2873212846266840276);
                     else passend_2873212846266840276 = User_definitief;
                   passend_2873212846266840276 = tranwrd(passend_2873212846266840276,'9D'x,'D0'x);
                   put passend_2873212846266840276 ~ @;
              end;
       if missing(Acc_ol_verplicht_jn)
         then put "," @;
         else do;
                   attrLengte_7169949660300105159=length(Acc_ol_verplicht_jn);
                   aantalLF_7169949660300105159 = countc(Acc_ol_verplicht_jn,'0A'x);
                   maxPassend_7169949660300105159=1-1-aantalLF_7169949660300105159;
                   if attrLengte_7169949660300105159 > max(maxPassend_7169949660300105159,1000)
                     then passend_7169949660300105159 = substr(Acc_ol_verplicht_jn,1,maxPassend_7169949660300105159);
                     else passend_7169949660300105159 = Acc_ol_verplicht_jn;
                   passend_7169949660300105159 = tranwrd(passend_7169949660300105159,'9D'x,'D0'x);
                   put passend_7169949660300105159 ~ @;
              end;
       if missing(Acc_aic_verplicht_jn)
         then put "," @;
         else do;
                   attrLengte_2682281141249504448=length(Acc_aic_verplicht_jn);
                   aantalLF_2682281141249504448 = countc(Acc_aic_verplicht_jn,'0A'x);
                   maxPassend_2682281141249504448=1-1-aantalLF_2682281141249504448;
                   if attrLengte_2682281141249504448 > max(maxPassend_2682281141249504448,1000)
                     then passend_2682281141249504448 = substr(Acc_aic_verplicht_jn,1,maxPassend_2682281141249504448);
                     else passend_2682281141249504448 = Acc_aic_verplicht_jn;
                   passend_2682281141249504448 = tranwrd(passend_2682281141249504448,'9D'x,'D0'x);
                   put passend_2682281141249504448 ~ @;
              end;
       if missing(Bewerken_jn)
         then put "," @;
         else do;
                   attrLengte_6905133348098210173=length(Bewerken_jn);
                   aantalLF_6905133348098210173 = countc(Bewerken_jn,'0A'x);
                   maxPassend_6905133348098210173=1-1-aantalLF_6905133348098210173;
                   if attrLengte_6905133348098210173 > max(maxPassend_6905133348098210173,1000)
                     then passend_6905133348098210173 = substr(Bewerken_jn,1,maxPassend_6905133348098210173);
                     else passend_6905133348098210173 = Bewerken_jn;
                   passend_6905133348098210173 = tranwrd(passend_6905133348098210173,'9D'x,'D0'x);
                   put passend_6905133348098210173 ~ @;
              end;
       if missing(Bedrag_te_verrekenen)
         then put "," @;
         else put Bedrag_te_verrekenen @;
       if missing(Acm_id)
         then put "," @;
         else put Acm_id @;
       if missing(Automatisch_afhandelen_jn)
         then put "," @;
         else do;
                   attrLengte_773279900419835309=length(Automatisch_afhandelen_jn);
                   aantalLF_773279900419835309 = countc(Automatisch_afhandelen_jn,'0A'x);
                   maxPassend_773279900419835309=1-1-aantalLF_773279900419835309;
                   if attrLengte_773279900419835309 > max(maxPassend_773279900419835309,1000)
                     then passend_773279900419835309 = substr(Automatisch_afhandelen_jn,1,maxPassend_773279900419835309);
                     else passend_773279900419835309 = Automatisch_afhandelen_jn;
                   passend_773279900419835309 = tranwrd(passend_773279900419835309,'9D'x,'D0'x);
                   put passend_773279900419835309 ~ @;
              end;
       if missing(User_acc_ink)
         then put "," @;
         else do;
                   attrLengte_6321381128088878866=length(User_acc_ink);
                   aantalLF_6321381128088878866 = countc(User_acc_ink,'0A'x);
                   maxPassend_6321381128088878866=30-1-aantalLF_6321381128088878866;
                   if attrLengte_6321381128088878866 > max(maxPassend_6321381128088878866,1000)
                     then passend_6321381128088878866 = substr(User_acc_ink,1,maxPassend_6321381128088878866);
                     else passend_6321381128088878866 = User_acc_ink;
                   passend_6321381128088878866 = tranwrd(passend_6321381128088878866,'9D'x,'D0'x);
                   put passend_6321381128088878866 ~ @;
              end;
       if missing(Datum_acc_ink)
         then put "," @;
         else put Datum_acc_ink @;
       if missing(Acc_ink_verplicht_jn)
         then put "," @;
         else do;
                   attrLengte_3303612823967380071=length(Acc_ink_verplicht_jn);
                   aantalLF_3303612823967380071 = countc(Acc_ink_verplicht_jn,'0A'x);
                   maxPassend_3303612823967380071=1-1-aantalLF_3303612823967380071;
                   if attrLengte_3303612823967380071 > max(maxPassend_3303612823967380071,1000)
                     then passend_3303612823967380071 = substr(Acc_ink_verplicht_jn,1,maxPassend_3303612823967380071);
                     else passend_3303612823967380071 = Acc_ink_verplicht_jn;
                   passend_3303612823967380071 = tranwrd(passend_3303612823967380071,'9D'x,'D0'x);
                   put passend_3303612823967380071 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_AOM_ACTIE AS
   SELECT t1.Actie_cd,
          t1.Actie_oms,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat
     FROM DATAQASG.AOM_ACTIE_TCMG t1;
QUIT;

data MIGRATIE.BAS_AOM_ACTIE;
  set MIGRATIE.BAS_AOM_ACTIE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_AOM_ACTIE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Actie_cd" 
       ','
          "Actie_oms" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_AOM_ACTIE   end=EFIEOD; 
       format Actie_cd  ;
       format Actie_oms  ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Actie_cd)
         then put "," @;
         else do;
                   attrLengte_3709574036420749824=length(Actie_cd);
                   aantalLF_3709574036420749824 = countc(Actie_cd,'0A'x);
                   maxPassend_3709574036420749824=3-1-aantalLF_3709574036420749824;
                   if attrLengte_3709574036420749824 > max(maxPassend_3709574036420749824,1000)
                     then passend_3709574036420749824 = substr(Actie_cd,1,maxPassend_3709574036420749824);
                     else passend_3709574036420749824 = Actie_cd;
                   passend_3709574036420749824 = tranwrd(passend_3709574036420749824,'9D'x,'D0'x);
                   put passend_3709574036420749824 ~ @;
              end;
       if missing(Actie_oms)
         then put "," @;
         else do;
                   attrLengte_896475843107592045=length(Actie_oms);
                   aantalLF_896475843107592045 = countc(Actie_oms,'0A'x);
                   maxPassend_896475843107592045=60-1-aantalLF_896475843107592045;
                   if attrLengte_896475843107592045 > max(maxPassend_896475843107592045,1000)
                     then passend_896475843107592045 = substr(Actie_oms,1,maxPassend_896475843107592045);
                     else passend_896475843107592045 = Actie_oms;
                   passend_896475843107592045 = tranwrd(passend_896475843107592045,'9D'x,'D0'x);
                   put passend_896475843107592045 ~ @;
              end;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_AOM_TRA_ACTIE AS
   SELECT t1.Actie_cd,
          t1.Bgt_cd,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Tra_cd
     FROM DATAQASG.AOM_TRA_ACTIE_TCMG t1;
QUIT;

data MIGRATIE.BAS_AOM_TRA_ACTIE;
  set MIGRATIE.BAS_AOM_TRA_ACTIE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_AOM_TRA_ACTIE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Actie_cd" 
       ','
          "Bgt_cd" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Tra_cd" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_AOM_TRA_ACTIE   end=EFIEOD; 
       format Actie_cd  ;
       format Bgt_cd  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Tra_cd  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Actie_cd)
         then put "," @;
         else do;
                   attrLengte_3709574036420749824=length(Actie_cd);
                   aantalLF_3709574036420749824 = countc(Actie_cd,'0A'x);
                   maxPassend_3709574036420749824=3-1-aantalLF_3709574036420749824;
                   if attrLengte_3709574036420749824 > max(maxPassend_3709574036420749824,1000)
                     then passend_3709574036420749824 = substr(Actie_cd,1,maxPassend_3709574036420749824);
                     else passend_3709574036420749824 = Actie_cd;
                   passend_3709574036420749824 = tranwrd(passend_3709574036420749824,'9D'x,'D0'x);
                   put passend_3709574036420749824 ~ @;
              end;
       if missing(Bgt_cd)
         then put "," @;
         else do;
                   attrLengte_7370879967810917187=length(Bgt_cd);
                   aantalLF_7370879967810917187 = countc(Bgt_cd,'0A'x);
                   maxPassend_7370879967810917187=1-1-aantalLF_7370879967810917187;
                   if attrLengte_7370879967810917187 > max(maxPassend_7370879967810917187,1000)
                     then passend_7370879967810917187 = substr(Bgt_cd,1,maxPassend_7370879967810917187);
                     else passend_7370879967810917187 = Bgt_cd;
                   passend_7370879967810917187 = tranwrd(passend_7370879967810917187,'9D'x,'D0'x);
                   put passend_7370879967810917187 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Tra_cd)
         then put "," @;
         else do;
                   attrLengte_6253283794989270681=length(Tra_cd);
                   aantalLF_6253283794989270681 = countc(Tra_cd,'0A'x);
                   maxPassend_6253283794989270681=3-1-aantalLF_6253283794989270681;
                   if attrLengte_6253283794989270681 > max(maxPassend_6253283794989270681,1000)
                     then passend_6253283794989270681 = substr(Tra_cd,1,maxPassend_6253283794989270681);
                     else passend_6253283794989270681 = Tra_cd;
                   passend_6253283794989270681 = tranwrd(passend_6253283794989270681,'9D'x,'D0'x);
                   put passend_6253283794989270681 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_AOM_TRANSACTIETYPE AS
   SELECT t1.Beleidsadministratie_jn,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Geldstroom_jn,
          t1.Mdw_mandaat_jn,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Tra_cd,
          t1.Tra_oms,
          t1.Tra_stop
     FROM DATAQASG.AOM_TRANSACTIETYPE_TCMG t1;
QUIT;

data MIGRATIE.BAS_AOM_TRANSACTIETYPE;
  set MIGRATIE.BAS_AOM_TRANSACTIETYPE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_AOM_TRANSACTIETYPE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Beleidsadministratie_jn" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Geldstroom_jn" 
       ','
          "Mdw_mandaat_jn" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Tra_cd" 
       ','
          "Tra_oms" 
       ','
          "Tra_stop" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_AOM_TRANSACTIETYPE   end=EFIEOD; 
       format Beleidsadministratie_jn  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Geldstroom_jn  ;
       format Mdw_mandaat_jn  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Tra_cd  ;
       format Tra_oms  ;
       format Tra_stop  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Beleidsadministratie_jn)
         then put "," @;
         else do;
                   attrLengte_5831362457227599872=length(Beleidsadministratie_jn);
                   aantalLF_5831362457227599872 = countc(Beleidsadministratie_jn,'0A'x);
                   maxPassend_5831362457227599872=1-1-aantalLF_5831362457227599872;
                   if attrLengte_5831362457227599872 > max(maxPassend_5831362457227599872,1000)
                     then passend_5831362457227599872 = substr(Beleidsadministratie_jn,1,maxPassend_5831362457227599872);
                     else passend_5831362457227599872 = Beleidsadministratie_jn;
                   passend_5831362457227599872 = tranwrd(passend_5831362457227599872,'9D'x,'D0'x);
                   put passend_5831362457227599872 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Geldstroom_jn)
         then put "," @;
         else do;
                   attrLengte_117035809429087224=length(Geldstroom_jn);
                   aantalLF_117035809429087224 = countc(Geldstroom_jn,'0A'x);
                   maxPassend_117035809429087224=1-1-aantalLF_117035809429087224;
                   if attrLengte_117035809429087224 > max(maxPassend_117035809429087224,1000)
                     then passend_117035809429087224 = substr(Geldstroom_jn,1,maxPassend_117035809429087224);
                     else passend_117035809429087224 = Geldstroom_jn;
                   passend_117035809429087224 = tranwrd(passend_117035809429087224,'9D'x,'D0'x);
                   put passend_117035809429087224 ~ @;
              end;
       if missing(Mdw_mandaat_jn)
         then put "," @;
         else do;
                   attrLengte_4062840293532491438=length(Mdw_mandaat_jn);
                   aantalLF_4062840293532491438 = countc(Mdw_mandaat_jn,'0A'x);
                   maxPassend_4062840293532491438=1-1-aantalLF_4062840293532491438;
                   if attrLengte_4062840293532491438 > max(maxPassend_4062840293532491438,1000)
                     then passend_4062840293532491438 = substr(Mdw_mandaat_jn,1,maxPassend_4062840293532491438);
                     else passend_4062840293532491438 = Mdw_mandaat_jn;
                   passend_4062840293532491438 = tranwrd(passend_4062840293532491438,'9D'x,'D0'x);
                   put passend_4062840293532491438 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Tra_cd)
         then put "," @;
         else do;
                   attrLengte_6253283794989270681=length(Tra_cd);
                   aantalLF_6253283794989270681 = countc(Tra_cd,'0A'x);
                   maxPassend_6253283794989270681=3-1-aantalLF_6253283794989270681;
                   if attrLengte_6253283794989270681 > max(maxPassend_6253283794989270681,1000)
                     then passend_6253283794989270681 = substr(Tra_cd,1,maxPassend_6253283794989270681);
                     else passend_6253283794989270681 = Tra_cd;
                   passend_6253283794989270681 = tranwrd(passend_6253283794989270681,'9D'x,'D0'x);
                   put passend_6253283794989270681 ~ @;
              end;
       if missing(Tra_oms)
         then put "," @;
         else do;
                   attrLengte_349044137099503532=length(Tra_oms);
                   aantalLF_349044137099503532 = countc(Tra_oms,'0A'x);
                   maxPassend_349044137099503532=50-1-aantalLF_349044137099503532;
                   if attrLengte_349044137099503532 > max(maxPassend_349044137099503532,1000)
                     then passend_349044137099503532 = substr(Tra_oms,1,maxPassend_349044137099503532);
                     else passend_349044137099503532 = Tra_oms;
                   passend_349044137099503532 = tranwrd(passend_349044137099503532,'9D'x,'D0'x);
                   put passend_349044137099503532 ~ @;
              end;
       if missing(Tra_stop)
         then put "," @;
         else do;
                   attrLengte_9100607069926000314=length(Tra_stop);
                   aantalLF_9100607069926000314 = countc(Tra_stop,'0A'x);
                   maxPassend_9100607069926000314=1-1-aantalLF_9100607069926000314;
                   if attrLengte_9100607069926000314 > max(maxPassend_9100607069926000314,1000)
                     then passend_9100607069926000314 = substr(Tra_stop,1,maxPassend_9100607069926000314);
                     else passend_9100607069926000314 = Tra_stop;
                   passend_9100607069926000314 = tranwrd(passend_9100607069926000314,'9D'x,'D0'x);
                   put passend_9100607069926000314 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_BTM_BETALING AS
   SELECT t1.Rel_id,
          t1.Tra_id,
          t1.Reg_cd,
          t1.Dos_cd,
          t1.Bedrag,
          t1.Bedrag_nlg,
          t1.Omschrijving,
          t1.Naam_begunstigde,
          t1.Betalingskenmerk,
          t1.Plaats,
          t1.Aanleverdatum FORMAT=B8601DT19. AS Aanleverdatum,
          t1.Status,
          t1.Betaalrun_id,
          t1.Bron,
          t1.Invoerdatum FORMAT=B8601DT19. AS Invoerdatum,
          t1.Mdw_id,
          t1.Betaling_id,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Iban,
          t1.Bic,
          t1.Beg_bic,
          t1.Beg_iban,
          t1.Sepa_betaling_indicatie,
          t1.Parkeer_valutadatum FORMAT=B8601DT19. AS Parkeer_valutadatum,
          t1.Betalingsverzoeknummer,
          t1.Betaal_datum FORMAT=B8601DT19. AS Betaal_datum,
          t1.On_hold_jn,
          t1.Sepa_xsd_bevinding
     FROM DATAQASG.BTM_BETALING_TCMG t1;
QUIT;

data MIGRATIE.BAS_BTM_BETALING;
  set MIGRATIE.BAS_BTM_BETALING;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_BTM_BETALING.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Rel_id" 
       ','
          "Tra_id" 
       ','
          "Reg_cd" 
       ','
          "Dos_cd" 
       ','
          "Bedrag" 
       ','
          "Bedrag_nlg" 
       ','
          "Omschrijving" 
       ','
          "Naam_begunstigde" 
       ','
          "Betalingskenmerk" 
       ','
          "Plaats" 
       ','
          "Aanleverdatum" 
       ','
          "Status" 
       ','
          "Betaalrun_id" 
       ','
          "Bron" 
       ','
          "Invoerdatum" 
       ','
          "Mdw_id" 
       ','
          "Betaling_id" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Iban" 
       ','
          "Bic" 
       ','
          "Beg_bic" 
       ','
          "Beg_iban" 
       ','
          "Sepa_betaling_indicatie" 
       ','
          "Parkeer_valutadatum" 
       ','
          "Betalingsverzoeknummer" 
       ','
          "Betaal_datum" 
       ','
          "On_hold_jn" 
       ','
          "Sepa_xsd_bevinding" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_BTM_BETALING   end=EFIEOD; 
       format Rel_id best12. ;
       format Tra_id best12. ;
       format Reg_cd  ;
       format Dos_cd  ;
       format Bedrag best12. ;
       format Bedrag_nlg best12. ;
       format Omschrijving  ;
       format Naam_begunstigde  ;
       format Betalingskenmerk  ;
       format Plaats  ;
       format Aanleverdatum B8601DT19. ;
       format Status  ;
       format Betaalrun_id best12. ;
       format Bron  ;
       format Invoerdatum B8601DT19. ;
       format Mdw_id best12. ;
       format Betaling_id best12. ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Iban  ;
       format Bic  ;
       format Beg_bic  ;
       format Beg_iban  ;
       format Sepa_betaling_indicatie  ;
       format Parkeer_valutadatum B8601DT19. ;
       format Betalingsverzoeknummer  ;
       format Betaal_datum B8601DT19. ;
       format On_hold_jn  ;
       format Sepa_xsd_bevinding  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(Tra_id)
         then put "," @;
         else put Tra_id @;
       if missing(Reg_cd)
         then put "," @;
         else do;
                   attrLengte_8089610682312470086=length(Reg_cd);
                   aantalLF_8089610682312470086 = countc(Reg_cd,'0A'x);
                   maxPassend_8089610682312470086=20-1-aantalLF_8089610682312470086;
                   if attrLengte_8089610682312470086 > max(maxPassend_8089610682312470086,1000)
                     then passend_8089610682312470086 = substr(Reg_cd,1,maxPassend_8089610682312470086);
                     else passend_8089610682312470086 = Reg_cd;
                   passend_8089610682312470086 = tranwrd(passend_8089610682312470086,'9D'x,'D0'x);
                   put passend_8089610682312470086 ~ @;
              end;
       if missing(Dos_cd)
         then put "," @;
         else do;
                   attrLengte_673625142560997166=length(Dos_cd);
                   aantalLF_673625142560997166 = countc(Dos_cd,'0A'x);
                   maxPassend_673625142560997166=10-1-aantalLF_673625142560997166;
                   if attrLengte_673625142560997166 > max(maxPassend_673625142560997166,1000)
                     then passend_673625142560997166 = substr(Dos_cd,1,maxPassend_673625142560997166);
                     else passend_673625142560997166 = Dos_cd;
                   passend_673625142560997166 = tranwrd(passend_673625142560997166,'9D'x,'D0'x);
                   put passend_673625142560997166 ~ @;
              end;
       if missing(Bedrag)
         then put "," @;
         else put Bedrag @;
       if missing(Bedrag_nlg)
         then put "," @;
         else put Bedrag_nlg @;
       if missing(Omschrijving)
         then put "," @;
         else do;
                   attrLengte_2792940614022500175=length(Omschrijving);
                   aantalLF_2792940614022500175 = countc(Omschrijving,'0A'x);
                   maxPassend_2792940614022500175=64-1-aantalLF_2792940614022500175;
                   if attrLengte_2792940614022500175 > max(maxPassend_2792940614022500175,1000)
                     then passend_2792940614022500175 = substr(Omschrijving,1,maxPassend_2792940614022500175);
                     else passend_2792940614022500175 = Omschrijving;
                   passend_2792940614022500175 = tranwrd(passend_2792940614022500175,'9D'x,'D0'x);
                   put passend_2792940614022500175 ~ @;
              end;
       if missing(Naam_begunstigde)
         then put "," @;
         else do;
                   attrLengte_2297573122993302389=length(Naam_begunstigde);
                   aantalLF_2297573122993302389 = countc(Naam_begunstigde,'0A'x);
                   maxPassend_2297573122993302389=60-1-aantalLF_2297573122993302389;
                   if attrLengte_2297573122993302389 > max(maxPassend_2297573122993302389,1000)
                     then passend_2297573122993302389 = substr(Naam_begunstigde,1,maxPassend_2297573122993302389);
                     else passend_2297573122993302389 = Naam_begunstigde;
                   passend_2297573122993302389 = tranwrd(passend_2297573122993302389,'9D'x,'D0'x);
                   put passend_2297573122993302389 ~ @;
              end;
       if missing(Betalingskenmerk)
         then put "," @;
         else do;
                   attrLengte_8016713407944005678=length(Betalingskenmerk);
                   aantalLF_8016713407944005678 = countc(Betalingskenmerk,'0A'x);
                   maxPassend_8016713407944005678=5-1-aantalLF_8016713407944005678;
                   if attrLengte_8016713407944005678 > max(maxPassend_8016713407944005678,1000)
                     then passend_8016713407944005678 = substr(Betalingskenmerk,1,maxPassend_8016713407944005678);
                     else passend_8016713407944005678 = Betalingskenmerk;
                   passend_8016713407944005678 = tranwrd(passend_8016713407944005678,'9D'x,'D0'x);
                   put passend_8016713407944005678 ~ @;
              end;
       if missing(Plaats)
         then put "," @;
         else do;
                   attrLengte_2948830150786152657=length(Plaats);
                   aantalLF_2948830150786152657 = countc(Plaats,'0A'x);
                   maxPassend_2948830150786152657=80-1-aantalLF_2948830150786152657;
                   if attrLengte_2948830150786152657 > max(maxPassend_2948830150786152657,1000)
                     then passend_2948830150786152657 = substr(Plaats,1,maxPassend_2948830150786152657);
                     else passend_2948830150786152657 = Plaats;
                   passend_2948830150786152657 = tranwrd(passend_2948830150786152657,'9D'x,'D0'x);
                   put passend_2948830150786152657 ~ @;
              end;
       if missing(Aanleverdatum)
         then put "," @;
         else put Aanleverdatum @;
       if missing(Status)
         then put "," @;
         else do;
                   attrLengte_5988018406811650736=length(Status);
                   aantalLF_5988018406811650736 = countc(Status,'0A'x);
                   maxPassend_5988018406811650736=1-1-aantalLF_5988018406811650736;
                   if attrLengte_5988018406811650736 > max(maxPassend_5988018406811650736,1000)
                     then passend_5988018406811650736 = substr(Status,1,maxPassend_5988018406811650736);
                     else passend_5988018406811650736 = Status;
                   passend_5988018406811650736 = tranwrd(passend_5988018406811650736,'9D'x,'D0'x);
                   put passend_5988018406811650736 ~ @;
              end;
       if missing(Betaalrun_id)
         then put "," @;
         else put Betaalrun_id @;
       if missing(Bron)
         then put "," @;
         else do;
                   attrLengte_431232146876537749=length(Bron);
                   aantalLF_431232146876537749 = countc(Bron,'0A'x);
                   maxPassend_431232146876537749=4-1-aantalLF_431232146876537749;
                   if attrLengte_431232146876537749 > max(maxPassend_431232146876537749,1000)
                     then passend_431232146876537749 = substr(Bron,1,maxPassend_431232146876537749);
                     else passend_431232146876537749 = Bron;
                   passend_431232146876537749 = tranwrd(passend_431232146876537749,'9D'x,'D0'x);
                   put passend_431232146876537749 ~ @;
              end;
       if missing(Invoerdatum)
         then put "," @;
         else put Invoerdatum @;
       if missing(Mdw_id)
         then put "," @;
         else put Mdw_id @;
       if missing(Betaling_id)
         then put "," @;
         else put Betaling_id @;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Iban)
         then put "," @;
         else do;
                   attrLengte_8433717562044549680=length(Iban);
                   aantalLF_8433717562044549680 = countc(Iban,'0A'x);
                   maxPassend_8433717562044549680=34-1-aantalLF_8433717562044549680;
                   if attrLengte_8433717562044549680 > max(maxPassend_8433717562044549680,1000)
                     then passend_8433717562044549680 = substr(Iban,1,maxPassend_8433717562044549680);
                     else passend_8433717562044549680 = Iban;
                   passend_8433717562044549680 = tranwrd(passend_8433717562044549680,'9D'x,'D0'x);
                   put passend_8433717562044549680 ~ @;
              end;
       if missing(Bic)
         then put "," @;
         else do;
                   attrLengte_8393283933206478573=length(Bic);
                   aantalLF_8393283933206478573 = countc(Bic,'0A'x);
                   maxPassend_8393283933206478573=11-1-aantalLF_8393283933206478573;
                   if attrLengte_8393283933206478573 > max(maxPassend_8393283933206478573,1000)
                     then passend_8393283933206478573 = substr(Bic,1,maxPassend_8393283933206478573);
                     else passend_8393283933206478573 = Bic;
                   passend_8393283933206478573 = tranwrd(passend_8393283933206478573,'9D'x,'D0'x);
                   put passend_8393283933206478573 ~ @;
              end;
       if missing(Beg_bic)
         then put "," @;
         else do;
                   attrLengte_106646185054892784=length(Beg_bic);
                   aantalLF_106646185054892784 = countc(Beg_bic,'0A'x);
                   maxPassend_106646185054892784=11-1-aantalLF_106646185054892784;
                   if attrLengte_106646185054892784 > max(maxPassend_106646185054892784,1000)
                     then passend_106646185054892784 = substr(Beg_bic,1,maxPassend_106646185054892784);
                     else passend_106646185054892784 = Beg_bic;
                   passend_106646185054892784 = tranwrd(passend_106646185054892784,'9D'x,'D0'x);
                   put passend_106646185054892784 ~ @;
              end;
       if missing(Beg_iban)
         then put "," @;
         else do;
                   attrLengte_6065333816954667525=length(Beg_iban);
                   aantalLF_6065333816954667525 = countc(Beg_iban,'0A'x);
                   maxPassend_6065333816954667525=34-1-aantalLF_6065333816954667525;
                   if attrLengte_6065333816954667525 > max(maxPassend_6065333816954667525,1000)
                     then passend_6065333816954667525 = substr(Beg_iban,1,maxPassend_6065333816954667525);
                     else passend_6065333816954667525 = Beg_iban;
                   passend_6065333816954667525 = tranwrd(passend_6065333816954667525,'9D'x,'D0'x);
                   put passend_6065333816954667525 ~ @;
              end;
       if missing(Sepa_betaling_indicatie)
         then put "," @;
         else do;
                   attrLengte_6326571350773995732=length(Sepa_betaling_indicatie);
                   aantalLF_6326571350773995732 = countc(Sepa_betaling_indicatie,'0A'x);
                   maxPassend_6326571350773995732=1-1-aantalLF_6326571350773995732;
                   if attrLengte_6326571350773995732 > max(maxPassend_6326571350773995732,1000)
                     then passend_6326571350773995732 = substr(Sepa_betaling_indicatie,1,maxPassend_6326571350773995732);
                     else passend_6326571350773995732 = Sepa_betaling_indicatie;
                   passend_6326571350773995732 = tranwrd(passend_6326571350773995732,'9D'x,'D0'x);
                   put passend_6326571350773995732 ~ @;
              end;
       if missing(Parkeer_valutadatum)
         then put "," @;
         else put Parkeer_valutadatum @;
       if missing(Betalingsverzoeknummer)
         then put "," @;
         else do;
                   attrLengte_7008902060440754439=length(Betalingsverzoeknummer);
                   aantalLF_7008902060440754439 = countc(Betalingsverzoeknummer,'0A'x);
                   maxPassend_7008902060440754439=40-1-aantalLF_7008902060440754439;
                   if attrLengte_7008902060440754439 > max(maxPassend_7008902060440754439,1000)
                     then passend_7008902060440754439 = substr(Betalingsverzoeknummer,1,maxPassend_7008902060440754439);
                     else passend_7008902060440754439 = Betalingsverzoeknummer;
                   passend_7008902060440754439 = tranwrd(passend_7008902060440754439,'9D'x,'D0'x);
                   put passend_7008902060440754439 ~ @;
              end;
       if missing(Betaal_datum)
         then put "," @;
         else put Betaal_datum @;
       if missing(On_hold_jn)
         then put "," @;
         else do;
                   attrLengte_5900692461372151366=length(On_hold_jn);
                   aantalLF_5900692461372151366 = countc(On_hold_jn,'0A'x);
                   maxPassend_5900692461372151366=1-1-aantalLF_5900692461372151366;
                   if attrLengte_5900692461372151366 > max(maxPassend_5900692461372151366,1000)
                     then passend_5900692461372151366 = substr(On_hold_jn,1,maxPassend_5900692461372151366);
                     else passend_5900692461372151366 = On_hold_jn;
                   passend_5900692461372151366 = tranwrd(passend_5900692461372151366,'9D'x,'D0'x);
                   put passend_5900692461372151366 ~ @;
              end;
       if missing(Sepa_xsd_bevinding)
         then put "," @;
         else do;
                   attrLengte_5950732349416649908=length(Sepa_xsd_bevinding);
                   aantalLF_5950732349416649908 = countc(Sepa_xsd_bevinding,'0A'x);
                   maxPassend_5950732349416649908=2048-1-aantalLF_5950732349416649908;
                   if attrLengte_5950732349416649908 > max(maxPassend_5950732349416649908,1000)
                     then passend_5950732349416649908 = substr(Sepa_xsd_bevinding,1,maxPassend_5950732349416649908);
                     else passend_5950732349416649908 = Sepa_xsd_bevinding;
                   passend_5950732349416649908 = tranwrd(passend_5950732349416649908,'9D'x,'D0'x);
                   put passend_5950732349416649908 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_BTM_HIST_BETALING AS
   SELECT t1.Rel_id,
          t1.Tra_id,
          t1.Reg_cd,
          t1.Dos_cd,
          t1.Bedrag,
          t1.Bedrag_nlg,
          t1.Omschrijving,
          t1.naam_begunstigde,
          t1.Plaats,
          t1.Rekeningnummer,
          t1.Senterrekening,
          t1.Aanleverdatum FORMAT=B8601DT19. AS Aanleverdatum,
          t1.Betaalrun_id,
          t1.Bron,
          t1.Valutadatum FORMAT=B8601DT19. AS Valutadatum,
          t1.Invoerdatum FORMAT=B8601DT19. AS Invoerdatum,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mdw_id,
          t1.Betalingskenmerk,
          t1.Iban,
          t1.Bic,
          t1.Beg_bic,
          t1.Beg_iban,
          t1.Sepa_betaling_indicatie,
          t1.Parkeer_valutadatum FORMAT=B8601DT19. AS Parkeer_valutadatum,
          t1.Betalingsverzoeknummer
     FROM DATAQASG.BTM_HIST_BETALING_TCMG t1;
QUIT;

data MIGRATIE.BAS_BTM_HIST_BETALING;
  set MIGRATIE.BAS_BTM_HIST_BETALING;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_BTM_HIST_BETALING.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Rel_id" 
       ','
          "Tra_id" 
       ','
          "Reg_cd" 
       ','
          "Dos_cd" 
       ','
          "Bedrag" 
       ','
          "Bedrag_nlg" 
       ','
          "Omschrijving" 
       ','
          "naam_begunstigde" 
       ','
          "Plaats" 
       ','
          "Rekeningnummer" 
       ','
          "Senterrekening" 
       ','
          "Aanleverdatum" 
       ','
          "Betaalrun_id" 
       ','
          "Bron" 
       ','
          "Valutadatum" 
       ','
          "Invoerdatum" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mdw_id" 
       ','
          "Betalingskenmerk" 
       ','
          "Iban" 
       ','
          "Bic" 
       ','
          "Beg_bic" 
       ','
          "Beg_iban" 
       ','
          "Sepa_betaling_indicatie" 
       ','
          "Parkeer_valutadatum" 
       ','
          "Betalingsverzoeknummer" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_BTM_HIST_BETALING   end=EFIEOD; 
       format Rel_id best12. ;
       format Tra_id best12. ;
       format Reg_cd  ;
       format Dos_cd  ;
       format Bedrag best12. ;
       format Bedrag_nlg best12. ;
       format Omschrijving  ;
       format naam_begunstigde  ;
       format Plaats  ;
       format Rekeningnummer best12. ;
       format Senterrekening best12. ;
       format Aanleverdatum B8601DT19. ;
       format Betaalrun_id best12. ;
       format Bron  ;
       format Valutadatum B8601DT19. ;
       format Invoerdatum B8601DT19. ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mdw_id best12. ;
       format Betalingskenmerk  ;
       format Iban  ;
       format Bic  ;
       format Beg_bic  ;
       format Beg_iban  ;
       format Sepa_betaling_indicatie  ;
       format Parkeer_valutadatum B8601DT19. ;
       format Betalingsverzoeknummer  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(Tra_id)
         then put "," @;
         else put Tra_id @;
       if missing(Reg_cd)
         then put "," @;
         else do;
                   attrLengte_8089610682312470086=length(Reg_cd);
                   aantalLF_8089610682312470086 = countc(Reg_cd,'0A'x);
                   maxPassend_8089610682312470086=20-1-aantalLF_8089610682312470086;
                   if attrLengte_8089610682312470086 > max(maxPassend_8089610682312470086,1000)
                     then passend_8089610682312470086 = substr(Reg_cd,1,maxPassend_8089610682312470086);
                     else passend_8089610682312470086 = Reg_cd;
                   passend_8089610682312470086 = tranwrd(passend_8089610682312470086,'9D'x,'D0'x);
                   put passend_8089610682312470086 ~ @;
              end;
       if missing(Dos_cd)
         then put "," @;
         else do;
                   attrLengte_673625142560997166=length(Dos_cd);
                   aantalLF_673625142560997166 = countc(Dos_cd,'0A'x);
                   maxPassend_673625142560997166=20-1-aantalLF_673625142560997166;
                   if attrLengte_673625142560997166 > max(maxPassend_673625142560997166,1000)
                     then passend_673625142560997166 = substr(Dos_cd,1,maxPassend_673625142560997166);
                     else passend_673625142560997166 = Dos_cd;
                   passend_673625142560997166 = tranwrd(passend_673625142560997166,'9D'x,'D0'x);
                   put passend_673625142560997166 ~ @;
              end;
       if missing(Bedrag)
         then put "," @;
         else put Bedrag @;
       if missing(Bedrag_nlg)
         then put "," @;
         else put Bedrag_nlg @;
       if missing(Omschrijving)
         then put "," @;
         else do;
                   attrLengte_2792940614022500175=length(Omschrijving);
                   aantalLF_2792940614022500175 = countc(Omschrijving,'0A'x);
                   maxPassend_2792940614022500175=64-1-aantalLF_2792940614022500175;
                   if attrLengte_2792940614022500175 > max(maxPassend_2792940614022500175,1000)
                     then passend_2792940614022500175 = substr(Omschrijving,1,maxPassend_2792940614022500175);
                     else passend_2792940614022500175 = Omschrijving;
                   passend_2792940614022500175 = tranwrd(passend_2792940614022500175,'9D'x,'D0'x);
                   put passend_2792940614022500175 ~ @;
              end;
       if missing(naam_begunstigde)
         then put "," @;
         else do;
                   attrLengte_4135915705631972821=length(naam_begunstigde);
                   aantalLF_4135915705631972821 = countc(naam_begunstigde,'0A'x);
                   maxPassend_4135915705631972821=60-1-aantalLF_4135915705631972821;
                   if attrLengte_4135915705631972821 > max(maxPassend_4135915705631972821,1000)
                     then passend_4135915705631972821 = substr(naam_begunstigde,1,maxPassend_4135915705631972821);
                     else passend_4135915705631972821 = naam_begunstigde;
                   passend_4135915705631972821 = tranwrd(passend_4135915705631972821,'9D'x,'D0'x);
                   put passend_4135915705631972821 ~ @;
              end;
       if missing(Plaats)
         then put "," @;
         else do;
                   attrLengte_2948830150786152657=length(Plaats);
                   aantalLF_2948830150786152657 = countc(Plaats,'0A'x);
                   maxPassend_2948830150786152657=30-1-aantalLF_2948830150786152657;
                   if attrLengte_2948830150786152657 > max(maxPassend_2948830150786152657,1000)
                     then passend_2948830150786152657 = substr(Plaats,1,maxPassend_2948830150786152657);
                     else passend_2948830150786152657 = Plaats;
                   passend_2948830150786152657 = tranwrd(passend_2948830150786152657,'9D'x,'D0'x);
                   put passend_2948830150786152657 ~ @;
              end;
       if missing(Rekeningnummer)
         then put "," @;
         else put Rekeningnummer @;
       if missing(Senterrekening)
         then put "," @;
         else put Senterrekening @;
       if missing(Aanleverdatum)
         then put "," @;
         else put Aanleverdatum @;
       if missing(Betaalrun_id)
         then put "," @;
         else put Betaalrun_id @;
       if missing(Bron)
         then put "," @;
         else do;
                   attrLengte_431232146876537749=length(Bron);
                   aantalLF_431232146876537749 = countc(Bron,'0A'x);
                   maxPassend_431232146876537749=4-1-aantalLF_431232146876537749;
                   if attrLengte_431232146876537749 > max(maxPassend_431232146876537749,1000)
                     then passend_431232146876537749 = substr(Bron,1,maxPassend_431232146876537749);
                     else passend_431232146876537749 = Bron;
                   passend_431232146876537749 = tranwrd(passend_431232146876537749,'9D'x,'D0'x);
                   put passend_431232146876537749 ~ @;
              end;
       if missing(Valutadatum)
         then put "," @;
         else put Valutadatum @;
       if missing(Invoerdatum)
         then put "," @;
         else put Invoerdatum @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mdw_id)
         then put "," @;
         else put Mdw_id @;
       if missing(Betalingskenmerk)
         then put "," @;
         else do;
                   attrLengte_8016713407944005678=length(Betalingskenmerk);
                   aantalLF_8016713407944005678 = countc(Betalingskenmerk,'0A'x);
                   maxPassend_8016713407944005678=5-1-aantalLF_8016713407944005678;
                   if attrLengte_8016713407944005678 > max(maxPassend_8016713407944005678,1000)
                     then passend_8016713407944005678 = substr(Betalingskenmerk,1,maxPassend_8016713407944005678);
                     else passend_8016713407944005678 = Betalingskenmerk;
                   passend_8016713407944005678 = tranwrd(passend_8016713407944005678,'9D'x,'D0'x);
                   put passend_8016713407944005678 ~ @;
              end;
       if missing(Iban)
         then put "," @;
         else do;
                   attrLengte_8433717562044549680=length(Iban);
                   aantalLF_8433717562044549680 = countc(Iban,'0A'x);
                   maxPassend_8433717562044549680=34-1-aantalLF_8433717562044549680;
                   if attrLengte_8433717562044549680 > max(maxPassend_8433717562044549680,1000)
                     then passend_8433717562044549680 = substr(Iban,1,maxPassend_8433717562044549680);
                     else passend_8433717562044549680 = Iban;
                   passend_8433717562044549680 = tranwrd(passend_8433717562044549680,'9D'x,'D0'x);
                   put passend_8433717562044549680 ~ @;
              end;
       if missing(Bic)
         then put "," @;
         else do;
                   attrLengte_8393283933206478573=length(Bic);
                   aantalLF_8393283933206478573 = countc(Bic,'0A'x);
                   maxPassend_8393283933206478573=11-1-aantalLF_8393283933206478573;
                   if attrLengte_8393283933206478573 > max(maxPassend_8393283933206478573,1000)
                     then passend_8393283933206478573 = substr(Bic,1,maxPassend_8393283933206478573);
                     else passend_8393283933206478573 = Bic;
                   passend_8393283933206478573 = tranwrd(passend_8393283933206478573,'9D'x,'D0'x);
                   put passend_8393283933206478573 ~ @;
              end;
       if missing(Beg_bic)
         then put "," @;
         else do;
                   attrLengte_106646185054892784=length(Beg_bic);
                   aantalLF_106646185054892784 = countc(Beg_bic,'0A'x);
                   maxPassend_106646185054892784=11-1-aantalLF_106646185054892784;
                   if attrLengte_106646185054892784 > max(maxPassend_106646185054892784,1000)
                     then passend_106646185054892784 = substr(Beg_bic,1,maxPassend_106646185054892784);
                     else passend_106646185054892784 = Beg_bic;
                   passend_106646185054892784 = tranwrd(passend_106646185054892784,'9D'x,'D0'x);
                   put passend_106646185054892784 ~ @;
              end;
       if missing(Beg_iban)
         then put "," @;
         else do;
                   attrLengte_6065333816954667525=length(Beg_iban);
                   aantalLF_6065333816954667525 = countc(Beg_iban,'0A'x);
                   maxPassend_6065333816954667525=34-1-aantalLF_6065333816954667525;
                   if attrLengte_6065333816954667525 > max(maxPassend_6065333816954667525,1000)
                     then passend_6065333816954667525 = substr(Beg_iban,1,maxPassend_6065333816954667525);
                     else passend_6065333816954667525 = Beg_iban;
                   passend_6065333816954667525 = tranwrd(passend_6065333816954667525,'9D'x,'D0'x);
                   put passend_6065333816954667525 ~ @;
              end;
       if missing(Sepa_betaling_indicatie)
         then put "," @;
         else do;
                   attrLengte_6326571350773995732=length(Sepa_betaling_indicatie);
                   aantalLF_6326571350773995732 = countc(Sepa_betaling_indicatie,'0A'x);
                   maxPassend_6326571350773995732=1-1-aantalLF_6326571350773995732;
                   if attrLengte_6326571350773995732 > max(maxPassend_6326571350773995732,1000)
                     then passend_6326571350773995732 = substr(Sepa_betaling_indicatie,1,maxPassend_6326571350773995732);
                     else passend_6326571350773995732 = Sepa_betaling_indicatie;
                   passend_6326571350773995732 = tranwrd(passend_6326571350773995732,'9D'x,'D0'x);
                   put passend_6326571350773995732 ~ @;
              end;
       if missing(Parkeer_valutadatum)
         then put "," @;
         else put Parkeer_valutadatum @;
       if missing(Betalingsverzoeknummer)
         then put "," @;
         else do;
                   attrLengte_7008902060440754439=length(Betalingsverzoeknummer);
                   aantalLF_7008902060440754439 = countc(Betalingsverzoeknummer,'0A'x);
                   maxPassend_7008902060440754439=40-1-aantalLF_7008902060440754439;
                   if attrLengte_7008902060440754439 > max(maxPassend_7008902060440754439,1000)
                     then passend_7008902060440754439 = substr(Betalingsverzoeknummer,1,maxPassend_7008902060440754439);
                     else passend_7008902060440754439 = Betalingsverzoeknummer;
                   passend_7008902060440754439 = tranwrd(passend_7008902060440754439,'9D'x,'D0'x);
                   put passend_7008902060440754439 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_COR_BERICHT AS
   SELECT t1.Cor_id,
          t1.Ed_bericht_id,
          t1.Afzender_id,
          t1.Ontvanger_id,
          t1.Inkomend,
          t1.Handtekening_ok,
          t1.Ondertekenaar_id,
          t1.Onderwerp,
          t1.Inhoud,
          t1.Certserienummer,
          t1.Batch_status,
          t1.Status_overzetten_bericht,
          t1.Ingezien,
          t1.Plattetekst,
          t1.Status_verzending,
          t1.Archief_cor_id,
          t1.Bron,
          t1.Org_cor_id
     FROM DATAQASG.COR_BERICHT_TCMG t1;
QUIT;

data MIGRATIE.BAS_COR_BERICHT;
  set MIGRATIE.BAS_COR_BERICHT;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_COR_BERICHT.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Cor_id" 
       ','
          "Ed_bericht_id" 
       ','
          "Afzender_id" 
       ','
          "Ontvanger_id" 
       ','
          "Inkomend" 
       ','
          "Handtekening_ok" 
       ','
          "Ondertekenaar_id" 
       ','
          "Onderwerp" 
       ','
          "Inhoud" 
       ','
          "Certserienummer" 
       ','
          "Batch_status" 
       ','
          "Status_overzetten_bericht" 
       ','
          "Ingezien" 
       ','
          "Plattetekst" 
       ','
          "Status_verzending" 
       ','
          "Archief_cor_id" 
       ','
          "Bron" 
       ','
          "Org_cor_id" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_COR_BERICHT   end=EFIEOD; 
       format Cor_id best12. ;
       format Ed_bericht_id best12. ;
       format Afzender_id best12. ;
       format Ontvanger_id best12. ;
       format Inkomend  ;
       format Handtekening_ok  ;
       format Ondertekenaar_id best12. ;
       format Onderwerp  ;
       format Inhoud  ;
       format Certserienummer  ;
       format Batch_status best12. ;
       format Status_overzetten_bericht best12. ;
       format Ingezien  ;
       format Plattetekst  ;
       format Status_verzending  ;
       format Archief_cor_id best12. ;
       format Bron  ;
       format Org_cor_id best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Cor_id)
         then put "," @;
         else put Cor_id @;
       if missing(Ed_bericht_id)
         then put "," @;
         else put Ed_bericht_id @;
       if missing(Afzender_id)
         then put "," @;
         else put Afzender_id @;
       if missing(Ontvanger_id)
         then put "," @;
         else put Ontvanger_id @;
       if missing(Inkomend)
         then put "," @;
         else do;
                   attrLengte_5282571717016298821=length(Inkomend);
                   aantalLF_5282571717016298821 = countc(Inkomend,'0A'x);
                   maxPassend_5282571717016298821=1-1-aantalLF_5282571717016298821;
                   if attrLengte_5282571717016298821 > max(maxPassend_5282571717016298821,1000)
                     then passend_5282571717016298821 = substr(Inkomend,1,maxPassend_5282571717016298821);
                     else passend_5282571717016298821 = Inkomend;
                   passend_5282571717016298821 = tranwrd(passend_5282571717016298821,'9D'x,'D0'x);
                   put passend_5282571717016298821 ~ @;
              end;
       if missing(Handtekening_ok)
         then put "," @;
         else do;
                   attrLengte_2912998615907010652=length(Handtekening_ok);
                   aantalLF_2912998615907010652 = countc(Handtekening_ok,'0A'x);
                   maxPassend_2912998615907010652=1-1-aantalLF_2912998615907010652;
                   if attrLengte_2912998615907010652 > max(maxPassend_2912998615907010652,1000)
                     then passend_2912998615907010652 = substr(Handtekening_ok,1,maxPassend_2912998615907010652);
                     else passend_2912998615907010652 = Handtekening_ok;
                   passend_2912998615907010652 = tranwrd(passend_2912998615907010652,'9D'x,'D0'x);
                   put passend_2912998615907010652 ~ @;
              end;
       if missing(Ondertekenaar_id)
         then put "," @;
         else put Ondertekenaar_id @;
       if missing(Onderwerp)
         then put "," @;
         else do;
                   attrLengte_2629230589794466549=length(Onderwerp);
                   aantalLF_2629230589794466549 = countc(Onderwerp,'0A'x);
                   maxPassend_2629230589794466549=256-1-aantalLF_2629230589794466549;
                   if attrLengte_2629230589794466549 > max(maxPassend_2629230589794466549,1000)
                     then passend_2629230589794466549 = substr(Onderwerp,1,maxPassend_2629230589794466549);
                     else passend_2629230589794466549 = Onderwerp;
                   passend_2629230589794466549 = tranwrd(passend_2629230589794466549,'9D'x,'D0'x);
                   put passend_2629230589794466549 ~ @;
              end;
       if missing(Inhoud)
         then put "," @;
         else do;
                   attrLengte_4250420340675441405=length(Inhoud);
                   aantalLF_4250420340675441405 = countc(Inhoud,'0A'x);
                   maxPassend_4250420340675441405=2048-1-aantalLF_4250420340675441405;
                   if attrLengte_4250420340675441405 > max(maxPassend_4250420340675441405,1000)
                     then passend_4250420340675441405 = substr(Inhoud,1,maxPassend_4250420340675441405);
                     else passend_4250420340675441405 = Inhoud;
                   passend_4250420340675441405 = tranwrd(passend_4250420340675441405,'9D'x,'D0'x);
                   put passend_4250420340675441405 ~ @;
              end;
       if missing(Certserienummer)
         then put "," @;
         else do;
                   attrLengte_5407225052503955637=length(Certserienummer);
                   aantalLF_5407225052503955637 = countc(Certserienummer,'0A'x);
                   maxPassend_5407225052503955637=50-1-aantalLF_5407225052503955637;
                   if attrLengte_5407225052503955637 > max(maxPassend_5407225052503955637,1000)
                     then passend_5407225052503955637 = substr(Certserienummer,1,maxPassend_5407225052503955637);
                     else passend_5407225052503955637 = Certserienummer;
                   passend_5407225052503955637 = tranwrd(passend_5407225052503955637,'9D'x,'D0'x);
                   put passend_5407225052503955637 ~ @;
              end;
       if missing(Batch_status)
         then put "," @;
         else put Batch_status @;
       if missing(Status_overzetten_bericht)
         then put "," @;
         else put Status_overzetten_bericht @;
       if missing(Ingezien)
         then put "," @;
         else do;
                   attrLengte_1317667042141340245=length(Ingezien);
                   aantalLF_1317667042141340245 = countc(Ingezien,'0A'x);
                   maxPassend_1317667042141340245=1-1-aantalLF_1317667042141340245;
                   if attrLengte_1317667042141340245 > max(maxPassend_1317667042141340245,1000)
                     then passend_1317667042141340245 = substr(Ingezien,1,maxPassend_1317667042141340245);
                     else passend_1317667042141340245 = Ingezien;
                   passend_1317667042141340245 = tranwrd(passend_1317667042141340245,'9D'x,'D0'x);
                   put passend_1317667042141340245 ~ @;
              end;
       if missing(Plattetekst)
         then put "," @;
         else do;
                   attrLengte_8175108294013713534=length(Plattetekst);
                   aantalLF_8175108294013713534 = countc(Plattetekst,'0A'x);
                   maxPassend_8175108294013713534=8000-1-aantalLF_8175108294013713534;
                   if attrLengte_8175108294013713534 > max(maxPassend_8175108294013713534,1000)
                     then passend_8175108294013713534 = substr(Plattetekst,1,maxPassend_8175108294013713534);
                     else passend_8175108294013713534 = Plattetekst;
                   passend_8175108294013713534 = tranwrd(passend_8175108294013713534,'9D'x,'D0'x);
                   put passend_8175108294013713534 ~ @;
              end;
       if missing(Status_verzending)
         then put "," @;
         else do;
                   attrLengte_2254035059619672552=length(Status_verzending);
                   aantalLF_2254035059619672552 = countc(Status_verzending,'0A'x);
                   maxPassend_2254035059619672552=1-1-aantalLF_2254035059619672552;
                   if attrLengte_2254035059619672552 > max(maxPassend_2254035059619672552,1000)
                     then passend_2254035059619672552 = substr(Status_verzending,1,maxPassend_2254035059619672552);
                     else passend_2254035059619672552 = Status_verzending;
                   passend_2254035059619672552 = tranwrd(passend_2254035059619672552,'9D'x,'D0'x);
                   put passend_2254035059619672552 ~ @;
              end;
       if missing(Archief_cor_id)
         then put "," @;
         else put Archief_cor_id @;
       if missing(Bron)
         then put "," @;
         else do;
                   attrLengte_431232146876537749=length(Bron);
                   aantalLF_431232146876537749 = countc(Bron,'0A'x);
                   maxPassend_431232146876537749=10-1-aantalLF_431232146876537749;
                   if attrLengte_431232146876537749 > max(maxPassend_431232146876537749,1000)
                     then passend_431232146876537749 = substr(Bron,1,maxPassend_431232146876537749);
                     else passend_431232146876537749 = Bron;
                   passend_431232146876537749 = tranwrd(passend_431232146876537749,'9D'x,'D0'x);
                   put passend_431232146876537749 ~ @;
              end;
       if missing(Org_cor_id)
         then put "," @;
         else put Org_cor_id @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_COR_COR_PARAAF AS
   SELECT t1.Acc_id,
          t1.Acc_rol_cd,
          t1.Acc_vaste_paraaf_jn,
          t1.Afgehandeld_JN,
          t1.Akkoord,
          t1.Cor_bedrag,
          t1.Cor_id,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_ok_JN,
          t1.Creatie_user,
          t1.Datum_Akkoord FORMAT=B8601DT19. AS Datum_Akkoord,
          t1.Email_JN,
          t1.Mandaat_ok_JN,
          t1.Max_bedrag,
          t1.Mdw_id,
          t1.Mdw_id_doorvoerder,
          t1.Mdw_id_oorspronkelijk,
          t1.Mdw_mandaat_JN,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Rol_cd,
          t1.Rol_ok_JN,
          t1.Rol_volg_cd,
          t1.Toelichting,
          t1.Type_paraaf,
          t1.Vaste_paraaf,
          t1.Volgorde
     FROM DATAQASG.COR_COR_PARAAF_TCMG t1;
QUIT;

data MIGRATIE.BAS_COR_COR_PARAAF;
  set MIGRATIE.BAS_COR_COR_PARAAF;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_COR_COR_PARAAF.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Acc_id" 
       ','
          "Acc_rol_cd" 
       ','
          "Acc_vaste_paraaf_jn" 
       ','
          "Afgehandeld_JN" 
       ','
          "Akkoord" 
       ','
          "Cor_bedrag" 
       ','
          "Cor_id" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_ok_JN" 
       ','
          "Creatie_user" 
       ','
          "Datum_Akkoord" 
       ','
          "Email_JN" 
       ','
          "Mandaat_ok_JN" 
       ','
          "Max_bedrag" 
       ','
          "Mdw_id" 
       ','
          "Mdw_id_doorvoerder" 
       ','
          "Mdw_id_oorspronkelijk" 
       ','
          "Mdw_mandaat_JN" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Rol_cd" 
       ','
          "Rol_ok_JN" 
       ','
          "Rol_volg_cd" 
       ','
          "Toelichting" 
       ','
          "Type_paraaf" 
       ','
          "Vaste_paraaf" 
       ','
          "Volgorde" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_COR_COR_PARAAF   end=EFIEOD; 
       format Acc_id best12. ;
       format Acc_rol_cd  ;
       format Acc_vaste_paraaf_jn  ;
       format Afgehandeld_JN  ;
       format Akkoord  ;
       format Cor_bedrag best12. ;
       format Cor_id best12. ;
       format Creatie_dat B8601DT19. ;
       format Creatie_ok_JN  ;
       format Creatie_user  ;
       format Datum_Akkoord B8601DT19. ;
       format Email_JN  ;
       format Mandaat_ok_JN  ;
       format Max_bedrag best12. ;
       format Mdw_id best12. ;
       format Mdw_id_doorvoerder best12. ;
       format Mdw_id_oorspronkelijk best12. ;
       format Mdw_mandaat_JN  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Rol_cd  ;
       format Rol_ok_JN  ;
       format Rol_volg_cd  ;
       format Toelichting  ;
       format Type_paraaf  ;
       format Vaste_paraaf  ;
       format Volgorde best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Acc_id)
         then put "," @;
         else put Acc_id @;
       if missing(Acc_rol_cd)
         then put "," @;
         else do;
                   attrLengte_3254373303073869725=length(Acc_rol_cd);
                   aantalLF_3254373303073869725 = countc(Acc_rol_cd,'0A'x);
                   maxPassend_3254373303073869725=3-1-aantalLF_3254373303073869725;
                   if attrLengte_3254373303073869725 > max(maxPassend_3254373303073869725,1000)
                     then passend_3254373303073869725 = substr(Acc_rol_cd,1,maxPassend_3254373303073869725);
                     else passend_3254373303073869725 = Acc_rol_cd;
                   passend_3254373303073869725 = tranwrd(passend_3254373303073869725,'9D'x,'D0'x);
                   put passend_3254373303073869725 ~ @;
              end;
       if missing(Acc_vaste_paraaf_jn)
         then put "," @;
         else do;
                   attrLengte_3697483008035648365=length(Acc_vaste_paraaf_jn);
                   aantalLF_3697483008035648365 = countc(Acc_vaste_paraaf_jn,'0A'x);
                   maxPassend_3697483008035648365=1-1-aantalLF_3697483008035648365;
                   if attrLengte_3697483008035648365 > max(maxPassend_3697483008035648365,1000)
                     then passend_3697483008035648365 = substr(Acc_vaste_paraaf_jn,1,maxPassend_3697483008035648365);
                     else passend_3697483008035648365 = Acc_vaste_paraaf_jn;
                   passend_3697483008035648365 = tranwrd(passend_3697483008035648365,'9D'x,'D0'x);
                   put passend_3697483008035648365 ~ @;
              end;
       if missing(Afgehandeld_JN)
         then put "," @;
         else do;
                   attrLengte_8174010947375060304=length(Afgehandeld_JN);
                   aantalLF_8174010947375060304 = countc(Afgehandeld_JN,'0A'x);
                   maxPassend_8174010947375060304=1-1-aantalLF_8174010947375060304;
                   if attrLengte_8174010947375060304 > max(maxPassend_8174010947375060304,1000)
                     then passend_8174010947375060304 = substr(Afgehandeld_JN,1,maxPassend_8174010947375060304);
                     else passend_8174010947375060304 = Afgehandeld_JN;
                   passend_8174010947375060304 = tranwrd(passend_8174010947375060304,'9D'x,'D0'x);
                   put passend_8174010947375060304 ~ @;
              end;
       if missing(Akkoord)
         then put "," @;
         else do;
                   attrLengte_2314859752596432566=length(Akkoord);
                   aantalLF_2314859752596432566 = countc(Akkoord,'0A'x);
                   maxPassend_2314859752596432566=1-1-aantalLF_2314859752596432566;
                   if attrLengte_2314859752596432566 > max(maxPassend_2314859752596432566,1000)
                     then passend_2314859752596432566 = substr(Akkoord,1,maxPassend_2314859752596432566);
                     else passend_2314859752596432566 = Akkoord;
                   passend_2314859752596432566 = tranwrd(passend_2314859752596432566,'9D'x,'D0'x);
                   put passend_2314859752596432566 ~ @;
              end;
       if missing(Cor_bedrag)
         then put "," @;
         else put Cor_bedrag @;
       if missing(Cor_id)
         then put "," @;
         else put Cor_id @;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_ok_JN)
         then put "," @;
         else do;
                   attrLengte_5935686088021903046=length(Creatie_ok_JN);
                   aantalLF_5935686088021903046 = countc(Creatie_ok_JN,'0A'x);
                   maxPassend_5935686088021903046=1-1-aantalLF_5935686088021903046;
                   if attrLengte_5935686088021903046 > max(maxPassend_5935686088021903046,1000)
                     then passend_5935686088021903046 = substr(Creatie_ok_JN,1,maxPassend_5935686088021903046);
                     else passend_5935686088021903046 = Creatie_ok_JN;
                   passend_5935686088021903046 = tranwrd(passend_5935686088021903046,'9D'x,'D0'x);
                   put passend_5935686088021903046 ~ @;
              end;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Datum_Akkoord)
         then put "," @;
         else put Datum_Akkoord @;
       if missing(Email_JN)
         then put "," @;
         else do;
                   attrLengte_6412683484080074523=length(Email_JN);
                   aantalLF_6412683484080074523 = countc(Email_JN,'0A'x);
                   maxPassend_6412683484080074523=1-1-aantalLF_6412683484080074523;
                   if attrLengte_6412683484080074523 > max(maxPassend_6412683484080074523,1000)
                     then passend_6412683484080074523 = substr(Email_JN,1,maxPassend_6412683484080074523);
                     else passend_6412683484080074523 = Email_JN;
                   passend_6412683484080074523 = tranwrd(passend_6412683484080074523,'9D'x,'D0'x);
                   put passend_6412683484080074523 ~ @;
              end;
       if missing(Mandaat_ok_JN)
         then put "," @;
         else do;
                   attrLengte_106515610534061913=length(Mandaat_ok_JN);
                   aantalLF_106515610534061913 = countc(Mandaat_ok_JN,'0A'x);
                   maxPassend_106515610534061913=1-1-aantalLF_106515610534061913;
                   if attrLengte_106515610534061913 > max(maxPassend_106515610534061913,1000)
                     then passend_106515610534061913 = substr(Mandaat_ok_JN,1,maxPassend_106515610534061913);
                     else passend_106515610534061913 = Mandaat_ok_JN;
                   passend_106515610534061913 = tranwrd(passend_106515610534061913,'9D'x,'D0'x);
                   put passend_106515610534061913 ~ @;
              end;
       if missing(Max_bedrag)
         then put "," @;
         else put Max_bedrag @;
       if missing(Mdw_id)
         then put "," @;
         else put Mdw_id @;
       if missing(Mdw_id_doorvoerder)
         then put "," @;
         else put Mdw_id_doorvoerder @;
       if missing(Mdw_id_oorspronkelijk)
         then put "," @;
         else put Mdw_id_oorspronkelijk @;
       if missing(Mdw_mandaat_JN)
         then put "," @;
         else do;
                   attrLengte_4071847926047268398=length(Mdw_mandaat_JN);
                   aantalLF_4071847926047268398 = countc(Mdw_mandaat_JN,'0A'x);
                   maxPassend_4071847926047268398=1-1-aantalLF_4071847926047268398;
                   if attrLengte_4071847926047268398 > max(maxPassend_4071847926047268398,1000)
                     then passend_4071847926047268398 = substr(Mdw_mandaat_JN,1,maxPassend_4071847926047268398);
                     else passend_4071847926047268398 = Mdw_mandaat_JN;
                   passend_4071847926047268398 = tranwrd(passend_4071847926047268398,'9D'x,'D0'x);
                   put passend_4071847926047268398 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Rol_cd)
         then put "," @;
         else do;
                   attrLengte_3864349925788261245=length(Rol_cd);
                   aantalLF_3864349925788261245 = countc(Rol_cd,'0A'x);
                   maxPassend_3864349925788261245=3-1-aantalLF_3864349925788261245;
                   if attrLengte_3864349925788261245 > max(maxPassend_3864349925788261245,1000)
                     then passend_3864349925788261245 = substr(Rol_cd,1,maxPassend_3864349925788261245);
                     else passend_3864349925788261245 = Rol_cd;
                   passend_3864349925788261245 = tranwrd(passend_3864349925788261245,'9D'x,'D0'x);
                   put passend_3864349925788261245 ~ @;
              end;
       if missing(Rol_ok_JN)
         then put "," @;
         else do;
                   attrLengte_5817162024855271556=length(Rol_ok_JN);
                   aantalLF_5817162024855271556 = countc(Rol_ok_JN,'0A'x);
                   maxPassend_5817162024855271556=1-1-aantalLF_5817162024855271556;
                   if attrLengte_5817162024855271556 > max(maxPassend_5817162024855271556,1000)
                     then passend_5817162024855271556 = substr(Rol_ok_JN,1,maxPassend_5817162024855271556);
                     else passend_5817162024855271556 = Rol_ok_JN;
                   passend_5817162024855271556 = tranwrd(passend_5817162024855271556,'9D'x,'D0'x);
                   put passend_5817162024855271556 ~ @;
              end;
       if missing(Rol_volg_cd)
         then put "," @;
         else do;
                   attrLengte_8388230177475286743=length(Rol_volg_cd);
                   aantalLF_8388230177475286743 = countc(Rol_volg_cd,'0A'x);
                   maxPassend_8388230177475286743=1-1-aantalLF_8388230177475286743;
                   if attrLengte_8388230177475286743 > max(maxPassend_8388230177475286743,1000)
                     then passend_8388230177475286743 = substr(Rol_volg_cd,1,maxPassend_8388230177475286743);
                     else passend_8388230177475286743 = Rol_volg_cd;
                   passend_8388230177475286743 = tranwrd(passend_8388230177475286743,'9D'x,'D0'x);
                   put passend_8388230177475286743 ~ @;
              end;
       if missing(Toelichting)
         then put "," @;
         else do;
                   attrLengte_4385385912596099835=length(Toelichting);
                   aantalLF_4385385912596099835 = countc(Toelichting,'0A'x);
                   maxPassend_4385385912596099835=2000-1-aantalLF_4385385912596099835;
                   if attrLengte_4385385912596099835 > max(maxPassend_4385385912596099835,1000)
                     then passend_4385385912596099835 = substr(Toelichting,1,maxPassend_4385385912596099835);
                     else passend_4385385912596099835 = Toelichting;
                   passend_4385385912596099835 = tranwrd(passend_4385385912596099835,'9D'x,'D0'x);
                   put passend_4385385912596099835 ~ @;
              end;
       if missing(Type_paraaf)
         then put "," @;
         else do;
                   attrLengte_8346042569885215607=length(Type_paraaf);
                   aantalLF_8346042569885215607 = countc(Type_paraaf,'0A'x);
                   maxPassend_8346042569885215607=1-1-aantalLF_8346042569885215607;
                   if attrLengte_8346042569885215607 > max(maxPassend_8346042569885215607,1000)
                     then passend_8346042569885215607 = substr(Type_paraaf,1,maxPassend_8346042569885215607);
                     else passend_8346042569885215607 = Type_paraaf;
                   passend_8346042569885215607 = tranwrd(passend_8346042569885215607,'9D'x,'D0'x);
                   put passend_8346042569885215607 ~ @;
              end;
       if missing(Vaste_paraaf)
         then put "," @;
         else do;
                   attrLengte_3312341310812503389=length(Vaste_paraaf);
                   aantalLF_3312341310812503389 = countc(Vaste_paraaf,'0A'x);
                   maxPassend_3312341310812503389=1-1-aantalLF_3312341310812503389;
                   if attrLengte_3312341310812503389 > max(maxPassend_3312341310812503389,1000)
                     then passend_3312341310812503389 = substr(Vaste_paraaf,1,maxPassend_3312341310812503389);
                     else passend_3312341310812503389 = Vaste_paraaf;
                   passend_3312341310812503389 = tranwrd(passend_3312341310812503389,'9D'x,'D0'x);
                   put passend_3312341310812503389 ~ @;
              end;
       if missing(Volgorde)
         then put "," @;
         else put Volgorde @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_COR_COR_SRT AS
   SELECT t1.Cst_cd,
          t1.Cst_oms,
          t1.Cst_template,
          t1.Regeling,
          t1.Thema,
          t1.Dossier,
          t1.Project,
          t1.Organisatie,
          t1.Bezoek,
          t1.Transactie,
          t1.Uitgaand_inkomend,
          t1.Juridisch,
          t1.Stempel_sj,
          t1.Bob_brief,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Vorderingbeheer,
          t1.Externe_naam,
          t1.Correctie_jn,
          t1.Intern_jn
     FROM DATAQASG.COR_COR_SRT_TCMG t1;
QUIT;

data MIGRATIE.BAS_COR_COR_SRT;
  set MIGRATIE.BAS_COR_COR_SRT;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_COR_COR_SRT.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Cst_cd" 
       ','
          "Cst_oms" 
       ','
          "Cst_template" 
       ','
          "Regeling" 
       ','
          "Thema" 
       ','
          "Dossier" 
       ','
          "Project" 
       ','
          "Organisatie" 
       ','
          "Bezoek" 
       ','
          "Transactie" 
       ','
          "Uitgaand_inkomend" 
       ','
          "Juridisch" 
       ','
          "Stempel_sj" 
       ','
          "Bob_brief" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Vorderingbeheer" 
       ','
          "Externe_naam" 
       ','
          "Correctie_jn" 
       ','
          "Intern_jn" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_COR_COR_SRT   end=EFIEOD; 
       format Cst_cd  ;
       format Cst_oms  ;
       format Cst_template  ;
       format Regeling  ;
       format Thema  ;
       format Dossier  ;
       format Project  ;
       format Organisatie  ;
       format Bezoek  ;
       format Transactie  ;
       format Uitgaand_inkomend  ;
       format Juridisch  ;
       format Stempel_sj  ;
       format Bob_brief  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Vorderingbeheer  ;
       format Externe_naam  ;
       format Correctie_jn  ;
       format Intern_jn  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Cst_cd)
         then put "," @;
         else do;
                   attrLengte_6311705118691231734=length(Cst_cd);
                   aantalLF_6311705118691231734 = countc(Cst_cd,'0A'x);
                   maxPassend_6311705118691231734=8-1-aantalLF_6311705118691231734;
                   if attrLengte_6311705118691231734 > max(maxPassend_6311705118691231734,1000)
                     then passend_6311705118691231734 = substr(Cst_cd,1,maxPassend_6311705118691231734);
                     else passend_6311705118691231734 = Cst_cd;
                   passend_6311705118691231734 = tranwrd(passend_6311705118691231734,'9D'x,'D0'x);
                   put passend_6311705118691231734 ~ @;
              end;
       if missing(Cst_oms)
         then put "," @;
         else do;
                   attrLengte_595247200272468379=length(Cst_oms);
                   aantalLF_595247200272468379 = countc(Cst_oms,'0A'x);
                   maxPassend_595247200272468379=60-1-aantalLF_595247200272468379;
                   if attrLengte_595247200272468379 > max(maxPassend_595247200272468379,1000)
                     then passend_595247200272468379 = substr(Cst_oms,1,maxPassend_595247200272468379);
                     else passend_595247200272468379 = Cst_oms;
                   passend_595247200272468379 = tranwrd(passend_595247200272468379,'9D'x,'D0'x);
                   put passend_595247200272468379 ~ @;
              end;
       if missing(Cst_template)
         then put "," @;
         else do;
                   attrLengte_4791577805552596401=length(Cst_template);
                   aantalLF_4791577805552596401 = countc(Cst_template,'0A'x);
                   maxPassend_4791577805552596401=100-1-aantalLF_4791577805552596401;
                   if attrLengte_4791577805552596401 > max(maxPassend_4791577805552596401,1000)
                     then passend_4791577805552596401 = substr(Cst_template,1,maxPassend_4791577805552596401);
                     else passend_4791577805552596401 = Cst_template;
                   passend_4791577805552596401 = tranwrd(passend_4791577805552596401,'9D'x,'D0'x);
                   put passend_4791577805552596401 ~ @;
              end;
       if missing(Regeling)
         then put "," @;
         else do;
                   attrLengte_3492344684937610391=length(Regeling);
                   aantalLF_3492344684937610391 = countc(Regeling,'0A'x);
                   maxPassend_3492344684937610391=1-1-aantalLF_3492344684937610391;
                   if attrLengte_3492344684937610391 > max(maxPassend_3492344684937610391,1000)
                     then passend_3492344684937610391 = substr(Regeling,1,maxPassend_3492344684937610391);
                     else passend_3492344684937610391 = Regeling;
                   passend_3492344684937610391 = tranwrd(passend_3492344684937610391,'9D'x,'D0'x);
                   put passend_3492344684937610391 ~ @;
              end;
       if missing(Thema)
         then put "," @;
         else do;
                   attrLengte_4904519751506790512=length(Thema);
                   aantalLF_4904519751506790512 = countc(Thema,'0A'x);
                   maxPassend_4904519751506790512=1-1-aantalLF_4904519751506790512;
                   if attrLengte_4904519751506790512 > max(maxPassend_4904519751506790512,1000)
                     then passend_4904519751506790512 = substr(Thema,1,maxPassend_4904519751506790512);
                     else passend_4904519751506790512 = Thema;
                   passend_4904519751506790512 = tranwrd(passend_4904519751506790512,'9D'x,'D0'x);
                   put passend_4904519751506790512 ~ @;
              end;
       if missing(Dossier)
         then put "," @;
         else do;
                   attrLengte_8919092385214382786=length(Dossier);
                   aantalLF_8919092385214382786 = countc(Dossier,'0A'x);
                   maxPassend_8919092385214382786=1-1-aantalLF_8919092385214382786;
                   if attrLengte_8919092385214382786 > max(maxPassend_8919092385214382786,1000)
                     then passend_8919092385214382786 = substr(Dossier,1,maxPassend_8919092385214382786);
                     else passend_8919092385214382786 = Dossier;
                   passend_8919092385214382786 = tranwrd(passend_8919092385214382786,'9D'x,'D0'x);
                   put passend_8919092385214382786 ~ @;
              end;
       if missing(Project)
         then put "," @;
         else do;
                   attrLengte_5535917770018830202=length(Project);
                   aantalLF_5535917770018830202 = countc(Project,'0A'x);
                   maxPassend_5535917770018830202=1-1-aantalLF_5535917770018830202;
                   if attrLengte_5535917770018830202 > max(maxPassend_5535917770018830202,1000)
                     then passend_5535917770018830202 = substr(Project,1,maxPassend_5535917770018830202);
                     else passend_5535917770018830202 = Project;
                   passend_5535917770018830202 = tranwrd(passend_5535917770018830202,'9D'x,'D0'x);
                   put passend_5535917770018830202 ~ @;
              end;
       if missing(Organisatie)
         then put "," @;
         else do;
                   attrLengte_2037302649681328841=length(Organisatie);
                   aantalLF_2037302649681328841 = countc(Organisatie,'0A'x);
                   maxPassend_2037302649681328841=1-1-aantalLF_2037302649681328841;
                   if attrLengte_2037302649681328841 > max(maxPassend_2037302649681328841,1000)
                     then passend_2037302649681328841 = substr(Organisatie,1,maxPassend_2037302649681328841);
                     else passend_2037302649681328841 = Organisatie;
                   passend_2037302649681328841 = tranwrd(passend_2037302649681328841,'9D'x,'D0'x);
                   put passend_2037302649681328841 ~ @;
              end;
       if missing(Bezoek)
         then put "," @;
         else do;
                   attrLengte_2419639035702251160=length(Bezoek);
                   aantalLF_2419639035702251160 = countc(Bezoek,'0A'x);
                   maxPassend_2419639035702251160=1-1-aantalLF_2419639035702251160;
                   if attrLengte_2419639035702251160 > max(maxPassend_2419639035702251160,1000)
                     then passend_2419639035702251160 = substr(Bezoek,1,maxPassend_2419639035702251160);
                     else passend_2419639035702251160 = Bezoek;
                   passend_2419639035702251160 = tranwrd(passend_2419639035702251160,'9D'x,'D0'x);
                   put passend_2419639035702251160 ~ @;
              end;
       if missing(Transactie)
         then put "," @;
         else do;
                   attrLengte_7995705138229212290=length(Transactie);
                   aantalLF_7995705138229212290 = countc(Transactie,'0A'x);
                   maxPassend_7995705138229212290=1-1-aantalLF_7995705138229212290;
                   if attrLengte_7995705138229212290 > max(maxPassend_7995705138229212290,1000)
                     then passend_7995705138229212290 = substr(Transactie,1,maxPassend_7995705138229212290);
                     else passend_7995705138229212290 = Transactie;
                   passend_7995705138229212290 = tranwrd(passend_7995705138229212290,'9D'x,'D0'x);
                   put passend_7995705138229212290 ~ @;
              end;
       if missing(Uitgaand_inkomend)
         then put "," @;
         else do;
                   attrLengte_6586222269152653008=length(Uitgaand_inkomend);
                   aantalLF_6586222269152653008 = countc(Uitgaand_inkomend,'0A'x);
                   maxPassend_6586222269152653008=1-1-aantalLF_6586222269152653008;
                   if attrLengte_6586222269152653008 > max(maxPassend_6586222269152653008,1000)
                     then passend_6586222269152653008 = substr(Uitgaand_inkomend,1,maxPassend_6586222269152653008);
                     else passend_6586222269152653008 = Uitgaand_inkomend;
                   passend_6586222269152653008 = tranwrd(passend_6586222269152653008,'9D'x,'D0'x);
                   put passend_6586222269152653008 ~ @;
              end;
       if missing(Juridisch)
         then put "," @;
         else do;
                   attrLengte_7451151554839174622=length(Juridisch);
                   aantalLF_7451151554839174622 = countc(Juridisch,'0A'x);
                   maxPassend_7451151554839174622=1-1-aantalLF_7451151554839174622;
                   if attrLengte_7451151554839174622 > max(maxPassend_7451151554839174622,1000)
                     then passend_7451151554839174622 = substr(Juridisch,1,maxPassend_7451151554839174622);
                     else passend_7451151554839174622 = Juridisch;
                   passend_7451151554839174622 = tranwrd(passend_7451151554839174622,'9D'x,'D0'x);
                   put passend_7451151554839174622 ~ @;
              end;
       if missing(Stempel_sj)
         then put "," @;
         else do;
                   attrLengte_3944169568955711548=length(Stempel_sj);
                   aantalLF_3944169568955711548 = countc(Stempel_sj,'0A'x);
                   maxPassend_3944169568955711548=1-1-aantalLF_3944169568955711548;
                   if attrLengte_3944169568955711548 > max(maxPassend_3944169568955711548,1000)
                     then passend_3944169568955711548 = substr(Stempel_sj,1,maxPassend_3944169568955711548);
                     else passend_3944169568955711548 = Stempel_sj;
                   passend_3944169568955711548 = tranwrd(passend_3944169568955711548,'9D'x,'D0'x);
                   put passend_3944169568955711548 ~ @;
              end;
       if missing(Bob_brief)
         then put "," @;
         else do;
                   attrLengte_5045286369681625287=length(Bob_brief);
                   aantalLF_5045286369681625287 = countc(Bob_brief,'0A'x);
                   maxPassend_5045286369681625287=1-1-aantalLF_5045286369681625287;
                   if attrLengte_5045286369681625287 > max(maxPassend_5045286369681625287,1000)
                     then passend_5045286369681625287 = substr(Bob_brief,1,maxPassend_5045286369681625287);
                     else passend_5045286369681625287 = Bob_brief;
                   passend_5045286369681625287 = tranwrd(passend_5045286369681625287,'9D'x,'D0'x);
                   put passend_5045286369681625287 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Vorderingbeheer)
         then put "," @;
         else do;
                   attrLengte_8266925566993179280=length(Vorderingbeheer);
                   aantalLF_8266925566993179280 = countc(Vorderingbeheer,'0A'x);
                   maxPassend_8266925566993179280=1-1-aantalLF_8266925566993179280;
                   if attrLengte_8266925566993179280 > max(maxPassend_8266925566993179280,1000)
                     then passend_8266925566993179280 = substr(Vorderingbeheer,1,maxPassend_8266925566993179280);
                     else passend_8266925566993179280 = Vorderingbeheer;
                   passend_8266925566993179280 = tranwrd(passend_8266925566993179280,'9D'x,'D0'x);
                   put passend_8266925566993179280 ~ @;
              end;
       if missing(Externe_naam)
         then put "," @;
         else do;
                   attrLengte_6290916302080128697=length(Externe_naam);
                   aantalLF_6290916302080128697 = countc(Externe_naam,'0A'x);
                   maxPassend_6290916302080128697=65-1-aantalLF_6290916302080128697;
                   if attrLengte_6290916302080128697 > max(maxPassend_6290916302080128697,1000)
                     then passend_6290916302080128697 = substr(Externe_naam,1,maxPassend_6290916302080128697);
                     else passend_6290916302080128697 = Externe_naam;
                   passend_6290916302080128697 = tranwrd(passend_6290916302080128697,'9D'x,'D0'x);
                   put passend_6290916302080128697 ~ @;
              end;
       if missing(Correctie_jn)
         then put "," @;
         else do;
                   attrLengte_7084844533107672031=length(Correctie_jn);
                   aantalLF_7084844533107672031 = countc(Correctie_jn,'0A'x);
                   maxPassend_7084844533107672031=1-1-aantalLF_7084844533107672031;
                   if attrLengte_7084844533107672031 > max(maxPassend_7084844533107672031,1000)
                     then passend_7084844533107672031 = substr(Correctie_jn,1,maxPassend_7084844533107672031);
                     else passend_7084844533107672031 = Correctie_jn;
                   passend_7084844533107672031 = tranwrd(passend_7084844533107672031,'9D'x,'D0'x);
                   put passend_7084844533107672031 ~ @;
              end;
       if missing(Intern_jn)
         then put "," @;
         else do;
                   attrLengte_6616792436424895680=length(Intern_jn);
                   aantalLF_6616792436424895680 = countc(Intern_jn,'0A'x);
                   maxPassend_6616792436424895680=1-1-aantalLF_6616792436424895680;
                   if attrLengte_6616792436424895680 > max(maxPassend_6616792436424895680,1000)
                     then passend_6616792436424895680 = substr(Intern_jn,1,maxPassend_6616792436424895680);
                     else passend_6616792436424895680 = Intern_jn;
                   passend_6616792436424895680 = tranwrd(passend_6616792436424895680,'9D'x,'D0'x);
                   put passend_6616792436424895680 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_COR_CORRESPONDENTIE_HIST AS
   SELECT t1.Cor_id,
          t1.Volg_nr,
          t1.Correctie_code,
          t1.Oude_verzenddatum FORMAT=B8601DT19. AS Oude_verzenddatum,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user
     FROM DATAQASG.COR_CORRESPONDENTIE_HIST_TCMG t1;
QUIT;

data MIGRATIE.BAS_COR_CORRESPONDENTIE_HIST;
  set MIGRATIE.BAS_COR_CORRESPONDENTIE_HIST;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_COR_CORRESPONDENTIE_HIST.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Cor_id" 
       ','
          "Volg_nr" 
       ','
          "Correctie_code" 
       ','
          "Oude_verzenddatum" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_COR_CORRESPONDENTIE_HIST   end=EFIEOD; 
       format Cor_id best12. ;
       format Volg_nr best12. ;
       format Correctie_code  ;
       format Oude_verzenddatum B8601DT19. ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Cor_id)
         then put "," @;
         else put Cor_id @;
       if missing(Volg_nr)
         then put "," @;
         else put Volg_nr @;
       if missing(Correctie_code)
         then put "," @;
         else do;
                   attrLengte_8136469209690216678=length(Correctie_code);
                   aantalLF_8136469209690216678 = countc(Correctie_code,'0A'x);
                   maxPassend_8136469209690216678=5-1-aantalLF_8136469209690216678;
                   if attrLengte_8136469209690216678 > max(maxPassend_8136469209690216678,1000)
                     then passend_8136469209690216678 = substr(Correctie_code,1,maxPassend_8136469209690216678);
                     else passend_8136469209690216678 = Correctie_code;
                   passend_8136469209690216678 = tranwrd(passend_8136469209690216678,'9D'x,'D0'x);
                   put passend_8136469209690216678 ~ @;
              end;
       if missing(Oude_verzenddatum)
         then put "," @;
         else put Oude_verzenddatum @;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_COR_CORRESPONDENTIE AS
   SELECT t1.Actie_datum FORMAT=B8601DT19. AS Actie_datum,
          t1.Afgedrukt_JN,
          t1.Afgehandeld,
          t1.Archiveren,
          t1.Bas_da_melding,
          t1.Behandelingsronde,
          t1.Bezoeknr,
          t1.Bos_status,
          t1.Cbi_id,
          t1.Certhoud_contpers_intern,
          t1.Cor_bericht,
          t1.Cor_id,
          t1.Cor_id_van,
          t1.Cor_volgnr_ids,
          t1.Crd_id,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Cst_cd,
          t1.Datum FORMAT=B8601DT19. AS Datum,
          t1.Datum_ok,
          t1.Datum_stempel_sj FORMAT=B8601DT19. AS Datum_stempel_sj,
          t1.Digitaal_archiveren,
          t1.Doc_directory,
          t1.Doc_naam,
          t1.Dos_id,
          t1.Dossiergroep_cor_id,
          t1.Email_JN,
          t1.Genereer_JN,
          t1.Html,
          t1.Ids_id,
          t1.Indieningsdatum FORMAT=B8601DT19. AS Indieningsdatum,
          t1.Ingetrokken,
          t1.Jz_id,
          t1.Kenmerk,
          t1.Lijst_cd,
          t1.Mandaat_rol_cd,
          t1.Mdw_cd_email,
          t1.Mdw_id_contpers_intern,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.'n,aam_organisatie'n AS naam_organisatie,
          t1.Ok_JN,
          t1.Omschrijving,
          t1.Open_brief,
          t1.Org_id,
          t1.Pcs_id,
          t1.Plandatum FORMAT=B8601DT19. AS Plandatum,
          t1.Prioriteit,
          t1.Reg_id,
          t1.Rel_id,
          t1.Rol_cd,
          t1.Run_id,
          t1.Select_export,
          t1.Senterkenmerk,
          t1.Text_inhoud,
          t1.Vernieuw_paraaf,
          t1.Verzenddatum FORMAT=B8601DT19. AS Verzenddatum,
          t1.Verzonden_elektronisch_JN,
          t1.Verzonden_per_post_JN,
          t1.Vst_volgnr,
          t1.Wordbrief_akkoord,
          t1.Xml_inhoud,
          t1.Xsl
     FROM DATAQASG.COR_CORRESPONDENTIE_TCMG t1;
QUIT;

data MIGRATIE.BAS_COR_CORRESPONDENTIE;
  set MIGRATIE.BAS_COR_CORRESPONDENTIE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_COR_CORRESPONDENTIE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Actie_datum" 
       ','
          "Afgedrukt_JN" 
       ','
          "Afgehandeld" 
       ','
          "Archiveren" 
       ','
          "Bas_da_melding" 
       ','
          "Behandelingsronde" 
       ','
          "Bezoeknr" 
       ','
          "Bos_status" 
       ','
          "Cbi_id" 
       ','
          "Certhoud_contpers_intern" 
       ','
          "Cor_bericht" 
       ','
          "Cor_id" 
       ','
          "Cor_id_van" 
       ','
          "Cor_volgnr_ids" 
       ','
          "Crd_id" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Cst_cd" 
       ','
          "Datum" 
       ','
          "Datum_ok" 
       ','
          "Datum_stempel_sj" 
       ','
          "Digitaal_archiveren" 
       ','
          "Doc_directory" 
       ','
          "Doc_naam" 
       ','
          "Dos_id" 
       ','
          "Dossiergroep_cor_id" 
       ','
          "Email_JN" 
       ','
          "Genereer_JN" 
       ','
          "Html" 
       ','
          "Ids_id" 
       ','
          "Indieningsdatum" 
       ','
          "Ingetrokken" 
       ','
          "Jz_id" 
       ','
          "Kenmerk" 
       ','
          "Lijst_cd" 
       ','
          "Mandaat_rol_cd" 
       ','
          "Mdw_cd_email" 
       ','
          "Mdw_id_contpers_intern" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "naam_organisatie" 
       ','
          "Ok_JN" 
       ','
          "Omschrijving" 
       ','
          "Open_brief" 
       ','
          "Org_id" 
       ','
          "Pcs_id" 
       ','
          "Plandatum" 
       ','
          "Prioriteit" 
       ','
          "Reg_id" 
       ','
          "Rel_id" 
       ','
          "Rol_cd" 
       ','
          "Run_id" 
       ','
          "Select_export" 
       ','
          "Senterkenmerk" 
       ','
          "Text_inhoud" 
       ','
          "Vernieuw_paraaf" 
       ','
          "Verzenddatum" 
       ','
          "Verzonden_elektronisch_JN" 
       ','
          "Verzonden_per_post_JN" 
       ','
          "Vst_volgnr" 
       ','
          "Wordbrief_akkoord" 
       ','
          "Xml_inhoud" 
       ','
          "Xsl" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_COR_CORRESPONDENTIE   end=EFIEOD; 
       format Actie_datum B8601DT19. ;
       format Afgedrukt_JN  ;
       format Afgehandeld  ;
       format Archiveren  ;
       format Bas_da_melding  ;
       format Behandelingsronde best12. ;
       format Bezoeknr best12. ;
       format Bos_status  ;
       format Cbi_id best12. ;
       format Certhoud_contpers_intern best12. ;
       format Cor_bericht  ;
       format Cor_id best12. ;
       format Cor_id_van best12. ;
       format Cor_volgnr_ids best12. ;
       format Crd_id best12. ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Cst_cd  ;
       format Datum B8601DT19. ;
       format Datum_ok  ;
       format Datum_stempel_sj B8601DT19. ;
       format Digitaal_archiveren  ;
       format Doc_directory  ;
       format Doc_naam  ;
       format Dos_id best12. ;
       format Dossiergroep_cor_id best12. ;
       format Email_JN  ;
       format Genereer_JN  ;
       format Html  ;
       format Ids_id best12. ;
       format Indieningsdatum B8601DT19. ;
       format Ingetrokken  ;
       format Jz_id best12. ;
       format Kenmerk  ;
       format Lijst_cd  ;
       format Mandaat_rol_cd  ;
       format Mdw_cd_email  ;
       format Mdw_id_contpers_intern best12. ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format naam_organisatie  ;
       format Ok_JN  ;
       format Omschrijving  ;
       format Open_brief  ;
       format Org_id best12. ;
       format Pcs_id best12. ;
       format Plandatum B8601DT19. ;
       format Prioriteit best12. ;
       format Reg_id best12. ;
       format Rel_id best12. ;
       format Rol_cd  ;
       format Run_id best12. ;
       format Select_export  ;
       format Senterkenmerk  ;
       format Text_inhoud  ;
       format Vernieuw_paraaf  ;
       format Verzenddatum B8601DT19. ;
       format Verzonden_elektronisch_JN  ;
       format Verzonden_per_post_JN  ;
       format Vst_volgnr best12. ;
       format Wordbrief_akkoord  ;
       format Xml_inhoud  ;
       format Xsl  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Actie_datum)
         then put "," @;
         else put Actie_datum @;
       if missing(Afgedrukt_JN)
         then put "," @;
         else do;
                   attrLengte_4300803410724717524=length(Afgedrukt_JN);
                   aantalLF_4300803410724717524 = countc(Afgedrukt_JN,'0A'x);
                   maxPassend_4300803410724717524=1-1-aantalLF_4300803410724717524;
                   if attrLengte_4300803410724717524 > max(maxPassend_4300803410724717524,1000)
                     then passend_4300803410724717524 = substr(Afgedrukt_JN,1,maxPassend_4300803410724717524);
                     else passend_4300803410724717524 = Afgedrukt_JN;
                   passend_4300803410724717524 = tranwrd(passend_4300803410724717524,'9D'x,'D0'x);
                   put passend_4300803410724717524 ~ @;
              end;
       if missing(Afgehandeld)
         then put "," @;
         else do;
                   attrLengte_7804948874982929418=length(Afgehandeld);
                   aantalLF_7804948874982929418 = countc(Afgehandeld,'0A'x);
                   maxPassend_7804948874982929418=1-1-aantalLF_7804948874982929418;
                   if attrLengte_7804948874982929418 > max(maxPassend_7804948874982929418,1000)
                     then passend_7804948874982929418 = substr(Afgehandeld,1,maxPassend_7804948874982929418);
                     else passend_7804948874982929418 = Afgehandeld;
                   passend_7804948874982929418 = tranwrd(passend_7804948874982929418,'9D'x,'D0'x);
                   put passend_7804948874982929418 ~ @;
              end;
       if missing(Archiveren)
         then put "," @;
         else do;
                   attrLengte_1833190793819299497=length(Archiveren);
                   aantalLF_1833190793819299497 = countc(Archiveren,'0A'x);
                   maxPassend_1833190793819299497=1-1-aantalLF_1833190793819299497;
                   if attrLengte_1833190793819299497 > max(maxPassend_1833190793819299497,1000)
                     then passend_1833190793819299497 = substr(Archiveren,1,maxPassend_1833190793819299497);
                     else passend_1833190793819299497 = Archiveren;
                   passend_1833190793819299497 = tranwrd(passend_1833190793819299497,'9D'x,'D0'x);
                   put passend_1833190793819299497 ~ @;
              end;
       if missing(Bas_da_melding)
         then put "," @;
         else do;
                   attrLengte_1059307689160233507=length(Bas_da_melding);
                   aantalLF_1059307689160233507 = countc(Bas_da_melding,'0A'x);
                   maxPassend_1059307689160233507=2048-1-aantalLF_1059307689160233507;
                   if attrLengte_1059307689160233507 > max(maxPassend_1059307689160233507,1000)
                     then passend_1059307689160233507 = substr(Bas_da_melding,1,maxPassend_1059307689160233507);
                     else passend_1059307689160233507 = Bas_da_melding;
                   passend_1059307689160233507 = tranwrd(passend_1059307689160233507,'9D'x,'D0'x);
                   put passend_1059307689160233507 ~ @;
              end;
       if missing(Behandelingsronde)
         then put "," @;
         else put Behandelingsronde @;
       if missing(Bezoeknr)
         then put "," @;
         else put Bezoeknr @;
       if missing(Bos_status)
         then put "," @;
         else do;
                   attrLengte_1120661312267482359=length(Bos_status);
                   aantalLF_1120661312267482359 = countc(Bos_status,'0A'x);
                   maxPassend_1120661312267482359=2-1-aantalLF_1120661312267482359;
                   if attrLengte_1120661312267482359 > max(maxPassend_1120661312267482359,1000)
                     then passend_1120661312267482359 = substr(Bos_status,1,maxPassend_1120661312267482359);
                     else passend_1120661312267482359 = Bos_status;
                   passend_1120661312267482359 = tranwrd(passend_1120661312267482359,'9D'x,'D0'x);
                   put passend_1120661312267482359 ~ @;
              end;
       if missing(Cbi_id)
         then put "," @;
         else put Cbi_id @;
       if missing(Certhoud_contpers_intern)
         then put "," @;
         else put Certhoud_contpers_intern @;
       if missing(Cor_bericht)
         then put "," @;
         else do;
                   attrLengte_9126614030551897497=length(Cor_bericht);
                   aantalLF_9126614030551897497 = countc(Cor_bericht,'0A'x);
                   maxPassend_9126614030551897497=1-1-aantalLF_9126614030551897497;
                   if attrLengte_9126614030551897497 > max(maxPassend_9126614030551897497,1000)
                     then passend_9126614030551897497 = substr(Cor_bericht,1,maxPassend_9126614030551897497);
                     else passend_9126614030551897497 = Cor_bericht;
                   passend_9126614030551897497 = tranwrd(passend_9126614030551897497,'9D'x,'D0'x);
                   put passend_9126614030551897497 ~ @;
              end;
       if missing(Cor_id)
         then put "," @;
         else put Cor_id @;
       if missing(Cor_id_van)
         then put "," @;
         else put Cor_id_van @;
       if missing(Cor_volgnr_ids)
         then put "," @;
         else put Cor_volgnr_ids @;
       if missing(Crd_id)
         then put "," @;
         else put Crd_id @;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Cst_cd)
         then put "," @;
         else do;
                   attrLengte_6311705118691231734=length(Cst_cd);
                   aantalLF_6311705118691231734 = countc(Cst_cd,'0A'x);
                   maxPassend_6311705118691231734=8-1-aantalLF_6311705118691231734;
                   if attrLengte_6311705118691231734 > max(maxPassend_6311705118691231734,1000)
                     then passend_6311705118691231734 = substr(Cst_cd,1,maxPassend_6311705118691231734);
                     else passend_6311705118691231734 = Cst_cd;
                   passend_6311705118691231734 = tranwrd(passend_6311705118691231734,'9D'x,'D0'x);
                   put passend_6311705118691231734 ~ @;
              end;
       if missing(Datum)
         then put "," @;
         else put Datum @;
       if missing(Datum_ok)
         then put "," @;
         else do;
                   attrLengte_5989136901746980486=length(Datum_ok);
                   aantalLF_5989136901746980486 = countc(Datum_ok,'0A'x);
                   maxPassend_5989136901746980486=1-1-aantalLF_5989136901746980486;
                   if attrLengte_5989136901746980486 > max(maxPassend_5989136901746980486,1000)
                     then passend_5989136901746980486 = substr(Datum_ok,1,maxPassend_5989136901746980486);
                     else passend_5989136901746980486 = Datum_ok;
                   passend_5989136901746980486 = tranwrd(passend_5989136901746980486,'9D'x,'D0'x);
                   put passend_5989136901746980486 ~ @;
              end;
       if missing(Datum_stempel_sj)
         then put "," @;
         else put Datum_stempel_sj @;
       if missing(Digitaal_archiveren)
         then put "," @;
         else do;
                   attrLengte_3878728069056016014=length(Digitaal_archiveren);
                   aantalLF_3878728069056016014 = countc(Digitaal_archiveren,'0A'x);
                   maxPassend_3878728069056016014=3-1-aantalLF_3878728069056016014;
                   if attrLengte_3878728069056016014 > max(maxPassend_3878728069056016014,1000)
                     then passend_3878728069056016014 = substr(Digitaal_archiveren,1,maxPassend_3878728069056016014);
                     else passend_3878728069056016014 = Digitaal_archiveren;
                   passend_3878728069056016014 = tranwrd(passend_3878728069056016014,'9D'x,'D0'x);
                   put passend_3878728069056016014 ~ @;
              end;
       if missing(Doc_directory)
         then put "," @;
         else do;
                   attrLengte_3553197755462333651=length(Doc_directory);
                   aantalLF_3553197755462333651 = countc(Doc_directory,'0A'x);
                   maxPassend_3553197755462333651=100-1-aantalLF_3553197755462333651;
                   if attrLengte_3553197755462333651 > max(maxPassend_3553197755462333651,1000)
                     then passend_3553197755462333651 = substr(Doc_directory,1,maxPassend_3553197755462333651);
                     else passend_3553197755462333651 = Doc_directory;
                   passend_3553197755462333651 = tranwrd(passend_3553197755462333651,'9D'x,'D0'x);
                   put passend_3553197755462333651 ~ @;
              end;
       if missing(Doc_naam)
         then put "," @;
         else do;
                   attrLengte_4570953002792249656=length(Doc_naam);
                   aantalLF_4570953002792249656 = countc(Doc_naam,'0A'x);
                   maxPassend_4570953002792249656=40-1-aantalLF_4570953002792249656;
                   if attrLengte_4570953002792249656 > max(maxPassend_4570953002792249656,1000)
                     then passend_4570953002792249656 = substr(Doc_naam,1,maxPassend_4570953002792249656);
                     else passend_4570953002792249656 = Doc_naam;
                   passend_4570953002792249656 = tranwrd(passend_4570953002792249656,'9D'x,'D0'x);
                   put passend_4570953002792249656 ~ @;
              end;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Dossiergroep_cor_id)
         then put "," @;
         else put Dossiergroep_cor_id @;
       if missing(Email_JN)
         then put "," @;
         else do;
                   attrLengte_6412683484080074523=length(Email_JN);
                   aantalLF_6412683484080074523 = countc(Email_JN,'0A'x);
                   maxPassend_6412683484080074523=1-1-aantalLF_6412683484080074523;
                   if attrLengte_6412683484080074523 > max(maxPassend_6412683484080074523,1000)
                     then passend_6412683484080074523 = substr(Email_JN,1,maxPassend_6412683484080074523);
                     else passend_6412683484080074523 = Email_JN;
                   passend_6412683484080074523 = tranwrd(passend_6412683484080074523,'9D'x,'D0'x);
                   put passend_6412683484080074523 ~ @;
              end;
       if missing(Genereer_JN)
         then put "," @;
         else do;
                   attrLengte_4728778185483655903=length(Genereer_JN);
                   aantalLF_4728778185483655903 = countc(Genereer_JN,'0A'x);
                   maxPassend_4728778185483655903=1-1-aantalLF_4728778185483655903;
                   if attrLengte_4728778185483655903 > max(maxPassend_4728778185483655903,1000)
                     then passend_4728778185483655903 = substr(Genereer_JN,1,maxPassend_4728778185483655903);
                     else passend_4728778185483655903 = Genereer_JN;
                   passend_4728778185483655903 = tranwrd(passend_4728778185483655903,'9D'x,'D0'x);
                   put passend_4728778185483655903 ~ @;
              end;
       if missing(Html)
         then put "," @;
         else do;
                   attrLengte_1275584113257327827=length(Html);
                   aantalLF_1275584113257327827 = countc(Html,'0A'x);
                   maxPassend_1275584113257327827=2048-1-aantalLF_1275584113257327827;
                   if attrLengte_1275584113257327827 > max(maxPassend_1275584113257327827,1000)
                     then passend_1275584113257327827 = substr(Html,1,maxPassend_1275584113257327827);
                     else passend_1275584113257327827 = Html;
                   passend_1275584113257327827 = tranwrd(passend_1275584113257327827,'9D'x,'D0'x);
                   put passend_1275584113257327827 ~ @;
              end;
       if missing(Ids_id)
         then put "," @;
         else put Ids_id @;
       if missing(Indieningsdatum)
         then put "," @;
         else put Indieningsdatum @;
       if missing(Ingetrokken)
         then put "," @;
         else do;
                   attrLengte_4031150624851215876=length(Ingetrokken);
                   aantalLF_4031150624851215876 = countc(Ingetrokken,'0A'x);
                   maxPassend_4031150624851215876=1-1-aantalLF_4031150624851215876;
                   if attrLengte_4031150624851215876 > max(maxPassend_4031150624851215876,1000)
                     then passend_4031150624851215876 = substr(Ingetrokken,1,maxPassend_4031150624851215876);
                     else passend_4031150624851215876 = Ingetrokken;
                   passend_4031150624851215876 = tranwrd(passend_4031150624851215876,'9D'x,'D0'x);
                   put passend_4031150624851215876 ~ @;
              end;
       if missing(Jz_id)
         then put "," @;
         else put Jz_id @;
       if missing(Kenmerk)
         then put "," @;
         else do;
                   attrLengte_8223794688263544128=length(Kenmerk);
                   aantalLF_8223794688263544128 = countc(Kenmerk,'0A'x);
                   maxPassend_8223794688263544128=40-1-aantalLF_8223794688263544128;
                   if attrLengte_8223794688263544128 > max(maxPassend_8223794688263544128,1000)
                     then passend_8223794688263544128 = substr(Kenmerk,1,maxPassend_8223794688263544128);
                     else passend_8223794688263544128 = Kenmerk;
                   passend_8223794688263544128 = tranwrd(passend_8223794688263544128,'9D'x,'D0'x);
                   put passend_8223794688263544128 ~ @;
              end;
       if missing(Lijst_cd)
         then put "," @;
         else do;
                   attrLengte_8863527692231258218=length(Lijst_cd);
                   aantalLF_8863527692231258218 = countc(Lijst_cd,'0A'x);
                   maxPassend_8863527692231258218=20-1-aantalLF_8863527692231258218;
                   if attrLengte_8863527692231258218 > max(maxPassend_8863527692231258218,1000)
                     then passend_8863527692231258218 = substr(Lijst_cd,1,maxPassend_8863527692231258218);
                     else passend_8863527692231258218 = Lijst_cd;
                   passend_8863527692231258218 = tranwrd(passend_8863527692231258218,'9D'x,'D0'x);
                   put passend_8863527692231258218 ~ @;
              end;
       if missing(Mandaat_rol_cd)
         then put "," @;
         else do;
                   attrLengte_3138629571656988592=length(Mandaat_rol_cd);
                   aantalLF_3138629571656988592 = countc(Mandaat_rol_cd,'0A'x);
                   maxPassend_3138629571656988592=3-1-aantalLF_3138629571656988592;
                   if attrLengte_3138629571656988592 > max(maxPassend_3138629571656988592,1000)
                     then passend_3138629571656988592 = substr(Mandaat_rol_cd,1,maxPassend_3138629571656988592);
                     else passend_3138629571656988592 = Mandaat_rol_cd;
                   passend_3138629571656988592 = tranwrd(passend_3138629571656988592,'9D'x,'D0'x);
                   put passend_3138629571656988592 ~ @;
              end;
       if missing(Mdw_cd_email)
         then put "," @;
         else do;
                   attrLengte_2391706285967525377=length(Mdw_cd_email);
                   aantalLF_2391706285967525377 = countc(Mdw_cd_email,'0A'x);
                   maxPassend_2391706285967525377=30-1-aantalLF_2391706285967525377;
                   if attrLengte_2391706285967525377 > max(maxPassend_2391706285967525377,1000)
                     then passend_2391706285967525377 = substr(Mdw_cd_email,1,maxPassend_2391706285967525377);
                     else passend_2391706285967525377 = Mdw_cd_email;
                   passend_2391706285967525377 = tranwrd(passend_2391706285967525377,'9D'x,'D0'x);
                   put passend_2391706285967525377 ~ @;
              end;
       if missing(Mdw_id_contpers_intern)
         then put "," @;
         else put Mdw_id_contpers_intern @;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(naam_organisatie)
         then put "," @;
         else do;
                   attrLengte_6801515960142252134=length(naam_organisatie);
                   aantalLF_6801515960142252134 = countc(naam_organisatie,'0A'x);
                   maxPassend_6801515960142252134=625-1-aantalLF_6801515960142252134;
                   if attrLengte_6801515960142252134 > max(maxPassend_6801515960142252134,1000)
                     then passend_6801515960142252134 = substr(naam_organisatie,1,maxPassend_6801515960142252134);
                     else passend_6801515960142252134 = naam_organisatie;
                   passend_6801515960142252134 = tranwrd(passend_6801515960142252134,'9D'x,'D0'x);
                   put passend_6801515960142252134 ~ @;
              end;
       if missing(Ok_JN)
         then put "," @;
         else do;
                   attrLengte_5224579374881671966=length(Ok_JN);
                   aantalLF_5224579374881671966 = countc(Ok_JN,'0A'x);
                   maxPassend_5224579374881671966=1-1-aantalLF_5224579374881671966;
                   if attrLengte_5224579374881671966 > max(maxPassend_5224579374881671966,1000)
                     then passend_5224579374881671966 = substr(Ok_JN,1,maxPassend_5224579374881671966);
                     else passend_5224579374881671966 = Ok_JN;
                   passend_5224579374881671966 = tranwrd(passend_5224579374881671966,'9D'x,'D0'x);
                   put passend_5224579374881671966 ~ @;
              end;
       if missing(Omschrijving)
         then put "," @;
         else do;
                   attrLengte_2792940614022500175=length(Omschrijving);
                   aantalLF_2792940614022500175 = countc(Omschrijving,'0A'x);
                   maxPassend_2792940614022500175=2000-1-aantalLF_2792940614022500175;
                   if attrLengte_2792940614022500175 > max(maxPassend_2792940614022500175,1000)
                     then passend_2792940614022500175 = substr(Omschrijving,1,maxPassend_2792940614022500175);
                     else passend_2792940614022500175 = Omschrijving;
                   passend_2792940614022500175 = tranwrd(passend_2792940614022500175,'9D'x,'D0'x);
                   put passend_2792940614022500175 ~ @;
              end;
       if missing(Open_brief)
         then put "," @;
         else do;
                   attrLengte_4104659127539397279=length(Open_brief);
                   aantalLF_4104659127539397279 = countc(Open_brief,'0A'x);
                   maxPassend_4104659127539397279=1-1-aantalLF_4104659127539397279;
                   if attrLengte_4104659127539397279 > max(maxPassend_4104659127539397279,1000)
                     then passend_4104659127539397279 = substr(Open_brief,1,maxPassend_4104659127539397279);
                     else passend_4104659127539397279 = Open_brief;
                   passend_4104659127539397279 = tranwrd(passend_4104659127539397279,'9D'x,'D0'x);
                   put passend_4104659127539397279 ~ @;
              end;
       if missing(Org_id)
         then put "," @;
         else put Org_id @;
       if missing(Pcs_id)
         then put "," @;
         else put Pcs_id @;
       if missing(Plandatum)
         then put "," @;
         else put Plandatum @;
       if missing(Prioriteit)
         then put "," @;
         else put Prioriteit @;
       if missing(Reg_id)
         then put "," @;
         else put Reg_id @;
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(Rol_cd)
         then put "," @;
         else do;
                   attrLengte_3864349925788261245=length(Rol_cd);
                   aantalLF_3864349925788261245 = countc(Rol_cd,'0A'x);
                   maxPassend_3864349925788261245=3-1-aantalLF_3864349925788261245;
                   if attrLengte_3864349925788261245 > max(maxPassend_3864349925788261245,1000)
                     then passend_3864349925788261245 = substr(Rol_cd,1,maxPassend_3864349925788261245);
                     else passend_3864349925788261245 = Rol_cd;
                   passend_3864349925788261245 = tranwrd(passend_3864349925788261245,'9D'x,'D0'x);
                   put passend_3864349925788261245 ~ @;
              end;
       if missing(Run_id)
         then put "," @;
         else put Run_id @;
       if missing(Select_export)
         then put "," @;
         else do;
                   attrLengte_6362935673041143414=length(Select_export);
                   aantalLF_6362935673041143414 = countc(Select_export,'0A'x);
                   maxPassend_6362935673041143414=1-1-aantalLF_6362935673041143414;
                   if attrLengte_6362935673041143414 > max(maxPassend_6362935673041143414,1000)
                     then passend_6362935673041143414 = substr(Select_export,1,maxPassend_6362935673041143414);
                     else passend_6362935673041143414 = Select_export;
                   passend_6362935673041143414 = tranwrd(passend_6362935673041143414,'9D'x,'D0'x);
                   put passend_6362935673041143414 ~ @;
              end;
       if missing(Senterkenmerk)
         then put "," @;
         else do;
                   attrLengte_3633693572838341517=length(Senterkenmerk);
                   aantalLF_3633693572838341517 = countc(Senterkenmerk,'0A'x);
                   maxPassend_3633693572838341517=40-1-aantalLF_3633693572838341517;
                   if attrLengte_3633693572838341517 > max(maxPassend_3633693572838341517,1000)
                     then passend_3633693572838341517 = substr(Senterkenmerk,1,maxPassend_3633693572838341517);
                     else passend_3633693572838341517 = Senterkenmerk;
                   passend_3633693572838341517 = tranwrd(passend_3633693572838341517,'9D'x,'D0'x);
                   put passend_3633693572838341517 ~ @;
              end;
       if missing(Text_inhoud)
         then put "," @;
         else do;
                   attrLengte_5888333563165379968=length(Text_inhoud);
                   aantalLF_5888333563165379968 = countc(Text_inhoud,'0A'x);
                   maxPassend_5888333563165379968=2048-1-aantalLF_5888333563165379968;
                   if attrLengte_5888333563165379968 > max(maxPassend_5888333563165379968,1000)
                     then passend_5888333563165379968 = substr(Text_inhoud,1,maxPassend_5888333563165379968);
                     else passend_5888333563165379968 = Text_inhoud;
                   passend_5888333563165379968 = tranwrd(passend_5888333563165379968,'9D'x,'D0'x);
                   put passend_5888333563165379968 ~ @;
              end;
       if missing(Vernieuw_paraaf)
         then put "," @;
         else do;
                   attrLengte_2852986966065042522=length(Vernieuw_paraaf);
                   aantalLF_2852986966065042522 = countc(Vernieuw_paraaf,'0A'x);
                   maxPassend_2852986966065042522=1-1-aantalLF_2852986966065042522;
                   if attrLengte_2852986966065042522 > max(maxPassend_2852986966065042522,1000)
                     then passend_2852986966065042522 = substr(Vernieuw_paraaf,1,maxPassend_2852986966065042522);
                     else passend_2852986966065042522 = Vernieuw_paraaf;
                   passend_2852986966065042522 = tranwrd(passend_2852986966065042522,'9D'x,'D0'x);
                   put passend_2852986966065042522 ~ @;
              end;
       if missing(Verzenddatum)
         then put "," @;
         else put Verzenddatum @;
       if missing(Verzonden_elektronisch_JN)
         then put "," @;
         else do;
                   attrLengte_3700551394262597335=length(Verzonden_elektronisch_JN);
                   aantalLF_3700551394262597335 = countc(Verzonden_elektronisch_JN,'0A'x);
                   maxPassend_3700551394262597335=1-1-aantalLF_3700551394262597335;
                   if attrLengte_3700551394262597335 > max(maxPassend_3700551394262597335,1000)
                     then passend_3700551394262597335 = substr(Verzonden_elektronisch_JN,1,maxPassend_3700551394262597335);
                     else passend_3700551394262597335 = Verzonden_elektronisch_JN;
                   passend_3700551394262597335 = tranwrd(passend_3700551394262597335,'9D'x,'D0'x);
                   put passend_3700551394262597335 ~ @;
              end;
       if missing(Verzonden_per_post_JN)
         then put "," @;
         else do;
                   attrLengte_6459704284428918526=length(Verzonden_per_post_JN);
                   aantalLF_6459704284428918526 = countc(Verzonden_per_post_JN,'0A'x);
                   maxPassend_6459704284428918526=1-1-aantalLF_6459704284428918526;
                   if attrLengte_6459704284428918526 > max(maxPassend_6459704284428918526,1000)
                     then passend_6459704284428918526 = substr(Verzonden_per_post_JN,1,maxPassend_6459704284428918526);
                     else passend_6459704284428918526 = Verzonden_per_post_JN;
                   passend_6459704284428918526 = tranwrd(passend_6459704284428918526,'9D'x,'D0'x);
                   put passend_6459704284428918526 ~ @;
              end;
       if missing(Vst_volgnr)
         then put "," @;
         else put Vst_volgnr @;
       if missing(Wordbrief_akkoord)
         then put "," @;
         else do;
                   attrLengte_8755559954394913459=length(Wordbrief_akkoord);
                   aantalLF_8755559954394913459 = countc(Wordbrief_akkoord,'0A'x);
                   maxPassend_8755559954394913459=1-1-aantalLF_8755559954394913459;
                   if attrLengte_8755559954394913459 > max(maxPassend_8755559954394913459,1000)
                     then passend_8755559954394913459 = substr(Wordbrief_akkoord,1,maxPassend_8755559954394913459);
                     else passend_8755559954394913459 = Wordbrief_akkoord;
                   passend_8755559954394913459 = tranwrd(passend_8755559954394913459,'9D'x,'D0'x);
                   put passend_8755559954394913459 ~ @;
              end;
       if missing(Xml_inhoud)
         then put "," @;
         else do;
                   attrLengte_6831705858834695873=length(Xml_inhoud);
                   aantalLF_6831705858834695873 = countc(Xml_inhoud,'0A'x);
                   maxPassend_6831705858834695873=2048-1-aantalLF_6831705858834695873;
                   if attrLengte_6831705858834695873 > max(maxPassend_6831705858834695873,1000)
                     then passend_6831705858834695873 = substr(Xml_inhoud,1,maxPassend_6831705858834695873);
                     else passend_6831705858834695873 = Xml_inhoud;
                   passend_6831705858834695873 = tranwrd(passend_6831705858834695873,'9D'x,'D0'x);
                   put passend_6831705858834695873 ~ @;
              end;
       if missing(Xsl)
         then put "," @;
         else do;
                   attrLengte_7995265278286191744=length(Xsl);
                   aantalLF_7995265278286191744 = countc(Xsl,'0A'x);
                   maxPassend_7995265278286191744=2048-1-aantalLF_7995265278286191744;
                   if attrLengte_7995265278286191744 > max(maxPassend_7995265278286191744,1000)
                     then passend_7995265278286191744 = substr(Xsl,1,maxPassend_7995265278286191744);
                     else passend_7995265278286191744 = Xsl;
                   passend_7995265278286191744 = tranwrd(passend_7995265278286191744,'9D'x,'D0'x);
                   put passend_7995265278286191744 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_COR_CST_SET_CST AS
   SELECT t1.Reg_id,
          t1.Cst_cd,
          t1.Cst_cd_2,
          t1.Verzenddatum_jn,
          t1.Afgehandeld_jn,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Genereer_jn
     FROM DATAQASG.COR_CST_SET_CST_TCMG t1;
QUIT;

data MIGRATIE.BAS_COR_CST_SET_CST;
  set MIGRATIE.BAS_COR_CST_SET_CST;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_COR_CST_SET_CST.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Reg_id" 
       ','
          "Cst_cd" 
       ','
          "Cst_cd_2" 
       ','
          "Verzenddatum_jn" 
       ','
          "Afgehandeld_jn" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Genereer_jn" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_COR_CST_SET_CST   end=EFIEOD; 
       format Reg_id best12. ;
       format Cst_cd  ;
       format Cst_cd_2  ;
       format Verzenddatum_jn  ;
       format Afgehandeld_jn  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Genereer_jn  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Reg_id)
         then put "," @;
         else put Reg_id @;
       if missing(Cst_cd)
         then put "," @;
         else do;
                   attrLengte_6311705118691231734=length(Cst_cd);
                   aantalLF_6311705118691231734 = countc(Cst_cd,'0A'x);
                   maxPassend_6311705118691231734=8-1-aantalLF_6311705118691231734;
                   if attrLengte_6311705118691231734 > max(maxPassend_6311705118691231734,1000)
                     then passend_6311705118691231734 = substr(Cst_cd,1,maxPassend_6311705118691231734);
                     else passend_6311705118691231734 = Cst_cd;
                   passend_6311705118691231734 = tranwrd(passend_6311705118691231734,'9D'x,'D0'x);
                   put passend_6311705118691231734 ~ @;
              end;
       if missing(Cst_cd_2)
         then put "," @;
         else do;
                   attrLengte_8747335132947235925=length(Cst_cd_2);
                   aantalLF_8747335132947235925 = countc(Cst_cd_2,'0A'x);
                   maxPassend_8747335132947235925=8-1-aantalLF_8747335132947235925;
                   if attrLengte_8747335132947235925 > max(maxPassend_8747335132947235925,1000)
                     then passend_8747335132947235925 = substr(Cst_cd_2,1,maxPassend_8747335132947235925);
                     else passend_8747335132947235925 = Cst_cd_2;
                   passend_8747335132947235925 = tranwrd(passend_8747335132947235925,'9D'x,'D0'x);
                   put passend_8747335132947235925 ~ @;
              end;
       if missing(Verzenddatum_jn)
         then put "," @;
         else do;
                   attrLengte_6553125106103169607=length(Verzenddatum_jn);
                   aantalLF_6553125106103169607 = countc(Verzenddatum_jn,'0A'x);
                   maxPassend_6553125106103169607=1-1-aantalLF_6553125106103169607;
                   if attrLengte_6553125106103169607 > max(maxPassend_6553125106103169607,1000)
                     then passend_6553125106103169607 = substr(Verzenddatum_jn,1,maxPassend_6553125106103169607);
                     else passend_6553125106103169607 = Verzenddatum_jn;
                   passend_6553125106103169607 = tranwrd(passend_6553125106103169607,'9D'x,'D0'x);
                   put passend_6553125106103169607 ~ @;
              end;
       if missing(Afgehandeld_jn)
         then put "," @;
         else do;
                   attrLengte_8183018579889837264=length(Afgehandeld_jn);
                   aantalLF_8183018579889837264 = countc(Afgehandeld_jn,'0A'x);
                   maxPassend_8183018579889837264=1-1-aantalLF_8183018579889837264;
                   if attrLengte_8183018579889837264 > max(maxPassend_8183018579889837264,1000)
                     then passend_8183018579889837264 = substr(Afgehandeld_jn,1,maxPassend_8183018579889837264);
                     else passend_8183018579889837264 = Afgehandeld_jn;
                   passend_8183018579889837264 = tranwrd(passend_8183018579889837264,'9D'x,'D0'x);
                   put passend_8183018579889837264 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Genereer_jn)
         then put "," @;
         else do;
                   attrLengte_4719770552968878943=length(Genereer_jn);
                   aantalLF_4719770552968878943 = countc(Genereer_jn,'0A'x);
                   maxPassend_4719770552968878943=1-1-aantalLF_4719770552968878943;
                   if attrLengte_4719770552968878943 > max(maxPassend_4719770552968878943,1000)
                     then passend_4719770552968878943 = substr(Genereer_jn,1,maxPassend_4719770552968878943);
                     else passend_4719770552968878943 = Genereer_jn;
                   passend_4719770552968878943 = tranwrd(passend_4719770552968878943,'9D'x,'D0'x);
                   put passend_4719770552968878943 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_COR_PARAAF AS
   SELECT t1.Reg_id,
          t1.Cst_cd,
          t1.Type_paraaf,
          t1.Rol_cd,
          t1.Mdw_rol_niveau,
          t1.Volgorde,
          t1.Vaste_paraaf_jn,
          t1.Rol_volg_cd
     FROM DATAQASG.COR_PARAAF_TCMG t1;
QUIT;

data MIGRATIE.BAS_COR_PARAAF;
  set MIGRATIE.BAS_COR_PARAAF;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_COR_PARAAF.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Reg_id" 
       ','
          "Cst_cd" 
       ','
          "Type_paraaf" 
       ','
          "Rol_cd" 
       ','
          "Mdw_rol_niveau" 
       ','
          "Volgorde" 
       ','
          "Vaste_paraaf_jn" 
       ','
          "Rol_volg_cd" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_COR_PARAAF   end=EFIEOD; 
       format Reg_id best12. ;
       format Cst_cd  ;
       format Type_paraaf  ;
       format Rol_cd  ;
       format Mdw_rol_niveau  ;
       format Volgorde best12. ;
       format Vaste_paraaf_jn  ;
       format Rol_volg_cd  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Reg_id)
         then put "," @;
         else put Reg_id @;
       if missing(Cst_cd)
         then put "," @;
         else do;
                   attrLengte_6311705118691231734=length(Cst_cd);
                   aantalLF_6311705118691231734 = countc(Cst_cd,'0A'x);
                   maxPassend_6311705118691231734=8-1-aantalLF_6311705118691231734;
                   if attrLengte_6311705118691231734 > max(maxPassend_6311705118691231734,1000)
                     then passend_6311705118691231734 = substr(Cst_cd,1,maxPassend_6311705118691231734);
                     else passend_6311705118691231734 = Cst_cd;
                   passend_6311705118691231734 = tranwrd(passend_6311705118691231734,'9D'x,'D0'x);
                   put passend_6311705118691231734 ~ @;
              end;
       if missing(Type_paraaf)
         then put "," @;
         else do;
                   attrLengte_8346042569885215607=length(Type_paraaf);
                   aantalLF_8346042569885215607 = countc(Type_paraaf,'0A'x);
                   maxPassend_8346042569885215607=1-1-aantalLF_8346042569885215607;
                   if attrLengte_8346042569885215607 > max(maxPassend_8346042569885215607,1000)
                     then passend_8346042569885215607 = substr(Type_paraaf,1,maxPassend_8346042569885215607);
                     else passend_8346042569885215607 = Type_paraaf;
                   passend_8346042569885215607 = tranwrd(passend_8346042569885215607,'9D'x,'D0'x);
                   put passend_8346042569885215607 ~ @;
              end;
       if missing(Rol_cd)
         then put "," @;
         else do;
                   attrLengte_3864349925788261245=length(Rol_cd);
                   aantalLF_3864349925788261245 = countc(Rol_cd,'0A'x);
                   maxPassend_3864349925788261245=3-1-aantalLF_3864349925788261245;
                   if attrLengte_3864349925788261245 > max(maxPassend_3864349925788261245,1000)
                     then passend_3864349925788261245 = substr(Rol_cd,1,maxPassend_3864349925788261245);
                     else passend_3864349925788261245 = Rol_cd;
                   passend_3864349925788261245 = tranwrd(passend_3864349925788261245,'9D'x,'D0'x);
                   put passend_3864349925788261245 ~ @;
              end;
       if missing(Mdw_rol_niveau)
         then put "," @;
         else do;
                   attrLengte_2994945184948973925=length(Mdw_rol_niveau);
                   aantalLF_2994945184948973925 = countc(Mdw_rol_niveau,'0A'x);
                   maxPassend_2994945184948973925=3-1-aantalLF_2994945184948973925;
                   if attrLengte_2994945184948973925 > max(maxPassend_2994945184948973925,1000)
                     then passend_2994945184948973925 = substr(Mdw_rol_niveau,1,maxPassend_2994945184948973925);
                     else passend_2994945184948973925 = Mdw_rol_niveau;
                   passend_2994945184948973925 = tranwrd(passend_2994945184948973925,'9D'x,'D0'x);
                   put passend_2994945184948973925 ~ @;
              end;
       if missing(Volgorde)
         then put "," @;
         else put Volgorde @;
       if missing(Vaste_paraaf_jn)
         then put "," @;
         else do;
                   attrLengte_4591517918162034415=length(Vaste_paraaf_jn);
                   aantalLF_4591517918162034415 = countc(Vaste_paraaf_jn,'0A'x);
                   maxPassend_4591517918162034415=1-1-aantalLF_4591517918162034415;
                   if attrLengte_4591517918162034415 > max(maxPassend_4591517918162034415,1000)
                     then passend_4591517918162034415 = substr(Vaste_paraaf_jn,1,maxPassend_4591517918162034415);
                     else passend_4591517918162034415 = Vaste_paraaf_jn;
                   passend_4591517918162034415 = tranwrd(passend_4591517918162034415,'9D'x,'D0'x);
                   put passend_4591517918162034415 ~ @;
              end;
       if missing(Rol_volg_cd)
         then put "," @;
         else do;
                   attrLengte_8388230177475286743=length(Rol_volg_cd);
                   aantalLF_8388230177475286743 = countc(Rol_volg_cd,'0A'x);
                   maxPassend_8388230177475286743=1-1-aantalLF_8388230177475286743;
                   if attrLengte_8388230177475286743 > max(maxPassend_8388230177475286743,1000)
                     then passend_8388230177475286743 = substr(Rol_volg_cd,1,maxPassend_8388230177475286743);
                     else passend_8388230177475286743 = Rol_volg_cd;
                   passend_8388230177475286743 = tranwrd(passend_8388230177475286743,'9D'x,'D0'x);
                   put passend_8388230177475286743 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_COR_REACTIE_BIJ_COR_SRT AS
   SELECT t1.Cluster_nr,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Cst_cd,
          t1.Mdw_id,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Per_cluster,
          t1.Prg_id,
          t1.Prioriteit,
          t1.Reactie_cd,
          t1.Reg_id,
          t1.Rol_cd,
          t1.Sts_cd,
          t1.Termijn,
          t1.Termijn_weken
     FROM DATAQASG.COR_REACTIE_BIJ_COR_SRT_TCMG t1;
QUIT;

data MIGRATIE.BAS_COR_REACTIE_BIJ_COR_SRT;
  set MIGRATIE.BAS_COR_REACTIE_BIJ_COR_SRT;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_COR_REACTIE_BIJ_COR_SRT.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Cluster_nr" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Cst_cd" 
       ','
          "Mdw_id" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Per_cluster" 
       ','
          "Prg_id" 
       ','
          "Prioriteit" 
       ','
          "Reactie_cd" 
       ','
          "Reg_id" 
       ','
          "Rol_cd" 
       ','
          "Sts_cd" 
       ','
          "Termijn" 
       ','
          "Termijn_weken" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_COR_REACTIE_BIJ_COR_SRT   end=EFIEOD; 
       format Cluster_nr best12. ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Cst_cd  ;
       format Mdw_id  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Per_cluster  ;
       format Prg_id best12. ;
       format Prioriteit best12. ;
       format Reactie_cd  ;
       format Reg_id best12. ;
       format Rol_cd  ;
       format Sts_cd  ;
       format Termijn best12. ;
       format Termijn_weken best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Cluster_nr)
         then put "," @;
         else put Cluster_nr @;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Cst_cd)
         then put "," @;
         else do;
                   attrLengte_6311705118691231734=length(Cst_cd);
                   aantalLF_6311705118691231734 = countc(Cst_cd,'0A'x);
                   maxPassend_6311705118691231734=8-1-aantalLF_6311705118691231734;
                   if attrLengte_6311705118691231734 > max(maxPassend_6311705118691231734,1000)
                     then passend_6311705118691231734 = substr(Cst_cd,1,maxPassend_6311705118691231734);
                     else passend_6311705118691231734 = Cst_cd;
                   passend_6311705118691231734 = tranwrd(passend_6311705118691231734,'9D'x,'D0'x);
                   put passend_6311705118691231734 ~ @;
              end;
       if missing(Mdw_id)
         then put "," @;
         else do;
                   attrLengte_1224618887063362992=length(Mdw_id);
                   aantalLF_1224618887063362992 = countc(Mdw_id,'0A'x);
                   maxPassend_1224618887063362992=12-1-aantalLF_1224618887063362992;
                   if attrLengte_1224618887063362992 > max(maxPassend_1224618887063362992,1000)
                     then passend_1224618887063362992 = substr(Mdw_id,1,maxPassend_1224618887063362992);
                     else passend_1224618887063362992 = Mdw_id;
                   passend_1224618887063362992 = tranwrd(passend_1224618887063362992,'9D'x,'D0'x);
                   put passend_1224618887063362992 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Per_cluster)
         then put "," @;
         else do;
                   attrLengte_5642491828179289605=length(Per_cluster);
                   aantalLF_5642491828179289605 = countc(Per_cluster,'0A'x);
                   maxPassend_5642491828179289605=1-1-aantalLF_5642491828179289605;
                   if attrLengte_5642491828179289605 > max(maxPassend_5642491828179289605,1000)
                     then passend_5642491828179289605 = substr(Per_cluster,1,maxPassend_5642491828179289605);
                     else passend_5642491828179289605 = Per_cluster;
                   passend_5642491828179289605 = tranwrd(passend_5642491828179289605,'9D'x,'D0'x);
                   put passend_5642491828179289605 ~ @;
              end;
       if missing(Prg_id)
         then put "," @;
         else put Prg_id @;
       if missing(Prioriteit)
         then put "," @;
         else put Prioriteit @;
       if missing(Reactie_cd)
         then put "," @;
         else do;
                   attrLengte_4412363972584569639=length(Reactie_cd);
                   aantalLF_4412363972584569639 = countc(Reactie_cd,'0A'x);
                   maxPassend_4412363972584569639=3-1-aantalLF_4412363972584569639;
                   if attrLengte_4412363972584569639 > max(maxPassend_4412363972584569639,1000)
                     then passend_4412363972584569639 = substr(Reactie_cd,1,maxPassend_4412363972584569639);
                     else passend_4412363972584569639 = Reactie_cd;
                   passend_4412363972584569639 = tranwrd(passend_4412363972584569639,'9D'x,'D0'x);
                   put passend_4412363972584569639 ~ @;
              end;
       if missing(Reg_id)
         then put "," @;
         else put Reg_id @;
       if missing(Rol_cd)
         then put "," @;
         else do;
                   attrLengte_3864349925788261245=length(Rol_cd);
                   aantalLF_3864349925788261245 = countc(Rol_cd,'0A'x);
                   maxPassend_3864349925788261245=3-1-aantalLF_3864349925788261245;
                   if attrLengte_3864349925788261245 > max(maxPassend_3864349925788261245,1000)
                     then passend_3864349925788261245 = substr(Rol_cd,1,maxPassend_3864349925788261245);
                     else passend_3864349925788261245 = Rol_cd;
                   passend_3864349925788261245 = tranwrd(passend_3864349925788261245,'9D'x,'D0'x);
                   put passend_3864349925788261245 ~ @;
              end;
       if missing(Sts_cd)
         then put "," @;
         else do;
                   attrLengte_1792820026946084444=length(Sts_cd);
                   aantalLF_1792820026946084444 = countc(Sts_cd,'0A'x);
                   maxPassend_1792820026946084444=3-1-aantalLF_1792820026946084444;
                   if attrLengte_1792820026946084444 > max(maxPassend_1792820026946084444,1000)
                     then passend_1792820026946084444 = substr(Sts_cd,1,maxPassend_1792820026946084444);
                     else passend_1792820026946084444 = Sts_cd;
                   passend_1792820026946084444 = tranwrd(passend_1792820026946084444,'9D'x,'D0'x);
                   put passend_1792820026946084444 ~ @;
              end;
       if missing(Termijn)
         then put "," @;
         else put Termijn @;
       if missing(Termijn_weken)
         then put "," @;
         else put Termijn_weken @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_COR_REGLSPEC_COR AS
   SELECT t1.Bos_bezorging,
          t1.Crea_back,
          t1.Create_merge_jn,
          t1.Create_merge_single,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Cst_cd,
          t1.Doc_template,
          t1.Externe_naam,
          t1.Geblokkeerd_jn,
          t1.Ic_controle,
          t1.Job,
          t1.Lijst_cd,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Prf_cd,
          t1.Print_jn,
          t1.Prioriteit,
          t1.Reg_id,
          t1.Verzenddatum_vullen
     FROM DATAQASG.COR_REGLSPEC_COR_TCMG t1;
QUIT;

data MIGRATIE.BAS_COR_REGLSPEC_COR;
  set MIGRATIE.BAS_COR_REGLSPEC_COR;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_COR_REGLSPEC_COR.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Bos_bezorging" 
       ','
          "Crea_back" 
       ','
          "Create_merge_jn" 
       ','
          "Create_merge_single" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Cst_cd" 
       ','
          "Doc_template" 
       ','
          "Externe_naam" 
       ','
          "Geblokkeerd_jn" 
       ','
          "Ic_controle" 
       ','
          "Job" 
       ','
          "Lijst_cd" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Prf_cd" 
       ','
          "Print_jn" 
       ','
          "Prioriteit" 
       ','
          "Reg_id" 
       ','
          "Verzenddatum_vullen" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_COR_REGLSPEC_COR   end=EFIEOD; 
       format Bos_bezorging  ;
       format Crea_back  ;
       format Create_merge_jn  ;
       format Create_merge_single  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Cst_cd  ;
       format Doc_template  ;
       format Externe_naam  ;
       format Geblokkeerd_jn  ;
       format Ic_controle  ;
       format Job  ;
       format Lijst_cd  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Prf_cd  ;
       format Print_jn  ;
       format Prioriteit best12. ;
       format Reg_id best12. ;
       format Verzenddatum_vullen  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Bos_bezorging)
         then put "," @;
         else do;
                   attrLengte_541933804402953707=length(Bos_bezorging);
                   aantalLF_541933804402953707 = countc(Bos_bezorging,'0A'x);
                   maxPassend_541933804402953707=1-1-aantalLF_541933804402953707;
                   if attrLengte_541933804402953707 > max(maxPassend_541933804402953707,1000)
                     then passend_541933804402953707 = substr(Bos_bezorging,1,maxPassend_541933804402953707);
                     else passend_541933804402953707 = Bos_bezorging;
                   passend_541933804402953707 = tranwrd(passend_541933804402953707,'9D'x,'D0'x);
                   put passend_541933804402953707 ~ @;
              end;
       if missing(Crea_back)
         then put "," @;
         else do;
                   attrLengte_4878221775181652606=length(Crea_back);
                   aantalLF_4878221775181652606 = countc(Crea_back,'0A'x);
                   maxPassend_4878221775181652606=1-1-aantalLF_4878221775181652606;
                   if attrLengte_4878221775181652606 > max(maxPassend_4878221775181652606,1000)
                     then passend_4878221775181652606 = substr(Crea_back,1,maxPassend_4878221775181652606);
                     else passend_4878221775181652606 = Crea_back;
                   passend_4878221775181652606 = tranwrd(passend_4878221775181652606,'9D'x,'D0'x);
                   put passend_4878221775181652606 ~ @;
              end;
       if missing(Create_merge_jn)
         then put "," @;
         else do;
                   attrLengte_3017653041298238391=length(Create_merge_jn);
                   aantalLF_3017653041298238391 = countc(Create_merge_jn,'0A'x);
                   maxPassend_3017653041298238391=1-1-aantalLF_3017653041298238391;
                   if attrLengte_3017653041298238391 > max(maxPassend_3017653041298238391,1000)
                     then passend_3017653041298238391 = substr(Create_merge_jn,1,maxPassend_3017653041298238391);
                     else passend_3017653041298238391 = Create_merge_jn;
                   passend_3017653041298238391 = tranwrd(passend_3017653041298238391,'9D'x,'D0'x);
                   put passend_3017653041298238391 ~ @;
              end;
       if missing(Create_merge_single)
         then put "," @;
         else do;
                   attrLengte_571955599341724873=length(Create_merge_single);
                   aantalLF_571955599341724873 = countc(Create_merge_single,'0A'x);
                   maxPassend_571955599341724873=1-1-aantalLF_571955599341724873;
                   if attrLengte_571955599341724873 > max(maxPassend_571955599341724873,1000)
                     then passend_571955599341724873 = substr(Create_merge_single,1,maxPassend_571955599341724873);
                     else passend_571955599341724873 = Create_merge_single;
                   passend_571955599341724873 = tranwrd(passend_571955599341724873,'9D'x,'D0'x);
                   put passend_571955599341724873 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Cst_cd)
         then put "," @;
         else do;
                   attrLengte_6311705118691231734=length(Cst_cd);
                   aantalLF_6311705118691231734 = countc(Cst_cd,'0A'x);
                   maxPassend_6311705118691231734=8-1-aantalLF_6311705118691231734;
                   if attrLengte_6311705118691231734 > max(maxPassend_6311705118691231734,1000)
                     then passend_6311705118691231734 = substr(Cst_cd,1,maxPassend_6311705118691231734);
                     else passend_6311705118691231734 = Cst_cd;
                   passend_6311705118691231734 = tranwrd(passend_6311705118691231734,'9D'x,'D0'x);
                   put passend_6311705118691231734 ~ @;
              end;
       if missing(Doc_template)
         then put "," @;
         else do;
                   attrLengte_2954458111530422857=length(Doc_template);
                   aantalLF_2954458111530422857 = countc(Doc_template,'0A'x);
                   maxPassend_2954458111530422857=150-1-aantalLF_2954458111530422857;
                   if attrLengte_2954458111530422857 > max(maxPassend_2954458111530422857,1000)
                     then passend_2954458111530422857 = substr(Doc_template,1,maxPassend_2954458111530422857);
                     else passend_2954458111530422857 = Doc_template;
                   passend_2954458111530422857 = tranwrd(passend_2954458111530422857,'9D'x,'D0'x);
                   put passend_2954458111530422857 ~ @;
              end;
       if missing(Externe_naam)
         then put "," @;
         else do;
                   attrLengte_6290916302080128697=length(Externe_naam);
                   aantalLF_6290916302080128697 = countc(Externe_naam,'0A'x);
                   maxPassend_6290916302080128697=65-1-aantalLF_6290916302080128697;
                   if attrLengte_6290916302080128697 > max(maxPassend_6290916302080128697,1000)
                     then passend_6290916302080128697 = substr(Externe_naam,1,maxPassend_6290916302080128697);
                     else passend_6290916302080128697 = Externe_naam;
                   passend_6290916302080128697 = tranwrd(passend_6290916302080128697,'9D'x,'D0'x);
                   put passend_6290916302080128697 ~ @;
              end;
       if missing(Geblokkeerd_jn)
         then put "," @;
         else do;
                   attrLengte_7719773628010563908=length(Geblokkeerd_jn);
                   aantalLF_7719773628010563908 = countc(Geblokkeerd_jn,'0A'x);
                   maxPassend_7719773628010563908=1-1-aantalLF_7719773628010563908;
                   if attrLengte_7719773628010563908 > max(maxPassend_7719773628010563908,1000)
                     then passend_7719773628010563908 = substr(Geblokkeerd_jn,1,maxPassend_7719773628010563908);
                     else passend_7719773628010563908 = Geblokkeerd_jn;
                   passend_7719773628010563908 = tranwrd(passend_7719773628010563908,'9D'x,'D0'x);
                   put passend_7719773628010563908 ~ @;
              end;
       if missing(Ic_controle)
         then put "," @;
         else do;
                   attrLengte_2714930422424334682=length(Ic_controle);
                   aantalLF_2714930422424334682 = countc(Ic_controle,'0A'x);
                   maxPassend_2714930422424334682=1-1-aantalLF_2714930422424334682;
                   if attrLengte_2714930422424334682 > max(maxPassend_2714930422424334682,1000)
                     then passend_2714930422424334682 = substr(Ic_controle,1,maxPassend_2714930422424334682);
                     else passend_2714930422424334682 = Ic_controle;
                   passend_2714930422424334682 = tranwrd(passend_2714930422424334682,'9D'x,'D0'x);
                   put passend_2714930422424334682 ~ @;
              end;
       if missing(Job)
         then put "," @;
         else do;
                   attrLengte_5693874621403232828=length(Job);
                   aantalLF_5693874621403232828 = countc(Job,'0A'x);
                   maxPassend_5693874621403232828=30-1-aantalLF_5693874621403232828;
                   if attrLengte_5693874621403232828 > max(maxPassend_5693874621403232828,1000)
                     then passend_5693874621403232828 = substr(Job,1,maxPassend_5693874621403232828);
                     else passend_5693874621403232828 = Job;
                   passend_5693874621403232828 = tranwrd(passend_5693874621403232828,'9D'x,'D0'x);
                   put passend_5693874621403232828 ~ @;
              end;
       if missing(Lijst_cd)
         then put "," @;
         else do;
                   attrLengte_8863527692231258218=length(Lijst_cd);
                   aantalLF_8863527692231258218 = countc(Lijst_cd,'0A'x);
                   maxPassend_8863527692231258218=20-1-aantalLF_8863527692231258218;
                   if attrLengte_8863527692231258218 > max(maxPassend_8863527692231258218,1000)
                     then passend_8863527692231258218 = substr(Lijst_cd,1,maxPassend_8863527692231258218);
                     else passend_8863527692231258218 = Lijst_cd;
                   passend_8863527692231258218 = tranwrd(passend_8863527692231258218,'9D'x,'D0'x);
                   put passend_8863527692231258218 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Prf_cd)
         then put "," @;
         else do;
                   attrLengte_9208144706229977192=length(Prf_cd);
                   aantalLF_9208144706229977192 = countc(Prf_cd,'0A'x);
                   maxPassend_9208144706229977192=8-1-aantalLF_9208144706229977192;
                   if attrLengte_9208144706229977192 > max(maxPassend_9208144706229977192,1000)
                     then passend_9208144706229977192 = substr(Prf_cd,1,maxPassend_9208144706229977192);
                     else passend_9208144706229977192 = Prf_cd;
                   passend_9208144706229977192 = tranwrd(passend_9208144706229977192,'9D'x,'D0'x);
                   put passend_9208144706229977192 ~ @;
              end;
       if missing(Print_jn)
         then put "," @;
         else do;
                   attrLengte_7548870647325983284=length(Print_jn);
                   aantalLF_7548870647325983284 = countc(Print_jn,'0A'x);
                   maxPassend_7548870647325983284=1-1-aantalLF_7548870647325983284;
                   if attrLengte_7548870647325983284 > max(maxPassend_7548870647325983284,1000)
                     then passend_7548870647325983284 = substr(Print_jn,1,maxPassend_7548870647325983284);
                     else passend_7548870647325983284 = Print_jn;
                   passend_7548870647325983284 = tranwrd(passend_7548870647325983284,'9D'x,'D0'x);
                   put passend_7548870647325983284 ~ @;
              end;
       if missing(Prioriteit)
         then put "," @;
         else put Prioriteit @;
       if missing(Reg_id)
         then put "," @;
         else put Reg_id @;
       if missing(Verzenddatum_vullen)
         then put "," @;
         else do;
                   attrLengte_2798672704799540187=length(Verzenddatum_vullen);
                   aantalLF_2798672704799540187 = countc(Verzenddatum_vullen,'0A'x);
                   maxPassend_2798672704799540187=1-1-aantalLF_2798672704799540187;
                   if attrLengte_2798672704799540187 > max(maxPassend_2798672704799540187,1000)
                     then passend_2798672704799540187 = substr(Verzenddatum_vullen,1,maxPassend_2798672704799540187);
                     else passend_2798672704799540187 = Verzenddatum_vullen;
                   passend_2798672704799540187 = tranwrd(passend_2798672704799540187,'9D'x,'D0'x);
                   put passend_2798672704799540187 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_COR_TRANSACTIEGROEP_BIJ_BRF AS
   SELECT t1.Cor_id,
          t1.Tra_id,
          t1.Dos_id,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat
     FROM DATAQASG.COR_TRANSACTIEGROEP_BIJ_BRF_TCMG t1;
QUIT;

data MIGRATIE.BAS_COR_TRANSACTIEGROEP_BIJ_BRF;
  set MIGRATIE.BAS_COR_TRANSACTIEGROEP_BIJ_BRF;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_COR_TRANSACTIEGROEP_BIJ_BRF.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Cor_id" 
       ','
          "Tra_id" 
       ','
          "Dos_id" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_COR_TRANSACTIEGROEP_BIJ_BRF   end=EFIEOD; 
       format Cor_id best12. ;
       format Tra_id best12. ;
       format Dos_id best12. ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Cor_id)
         then put "," @;
         else put Cor_id @;
       if missing(Tra_id)
         then put "," @;
         else put Tra_id @;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_DAM_CONT_BIJ_DLN_COM_ADR AS
   SELECT t1.creatie_dat FORMAT=B8601DT19. AS creatie_dat,
          t1.Creatie_user,
          t1.Dcs_id,
          t1.Dos_id,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Per_id,
          t1.Rav_id,
          t1.Rca_id,
          t1.Rel_id,
          t1.Rol_cd,
          t1.Rol_cd_van,
          t1.Vst_volgnr
     FROM DATAQASG.DAM_CONT_BIJ_DLN_COM_ADR_TCMG t1;
QUIT;

data MIGRATIE.BAS_DAM_CONT_BIJ_DLN_COM_ADR;
  set MIGRATIE.BAS_DAM_CONT_BIJ_DLN_COM_ADR;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_DAM_CONT_BIJ_DLN_COM_ADR.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Dcs_id" 
       ','
          "Dos_id" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Per_id" 
       ','
          "Rav_id" 
       ','
          "Rca_id" 
       ','
          "Rel_id" 
       ','
          "Rol_cd" 
       ','
          "Rol_cd_van" 
       ','
          "Vst_volgnr" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_DAM_CONT_BIJ_DLN_COM_ADR   end=EFIEOD; 
       format creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Dcs_id best12. ;
       format Dos_id best12. ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Per_id best12. ;
       format Rav_id best12. ;
       format Rca_id best12. ;
       format Rel_id best12. ;
       format Rol_cd  ;
       format Rol_cd_van  ;
       format Vst_volgnr best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(creatie_dat)
         then put "," @;
         else put creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Dcs_id)
         then put "," @;
         else put Dcs_id @;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Per_id)
         then put "," @;
         else put Per_id @;
       if missing(Rav_id)
         then put "," @;
         else put Rav_id @;
       if missing(Rca_id)
         then put "," @;
         else put Rca_id @;
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(Rol_cd)
         then put "," @;
         else do;
                   attrLengte_3864349925788261245=length(Rol_cd);
                   aantalLF_3864349925788261245 = countc(Rol_cd,'0A'x);
                   maxPassend_3864349925788261245=3-1-aantalLF_3864349925788261245;
                   if attrLengte_3864349925788261245 > max(maxPassend_3864349925788261245,1000)
                     then passend_3864349925788261245 = substr(Rol_cd,1,maxPassend_3864349925788261245);
                     else passend_3864349925788261245 = Rol_cd;
                   passend_3864349925788261245 = tranwrd(passend_3864349925788261245,'9D'x,'D0'x);
                   put passend_3864349925788261245 ~ @;
              end;
       if missing(Rol_cd_van)
         then put "," @;
         else do;
                   attrLengte_7341167645741356875=length(Rol_cd_van);
                   aantalLF_7341167645741356875 = countc(Rol_cd_van,'0A'x);
                   maxPassend_7341167645741356875=3-1-aantalLF_7341167645741356875;
                   if attrLengte_7341167645741356875 > max(maxPassend_7341167645741356875,1000)
                     then passend_7341167645741356875 = substr(Rol_cd_van,1,maxPassend_7341167645741356875);
                     else passend_7341167645741356875 = Rol_cd_van;
                   passend_7341167645741356875 = tranwrd(passend_7341167645741356875,'9D'x,'D0'x);
                   put passend_7341167645741356875 ~ @;
              end;
       if missing(Vst_volgnr)
         then put "," @;
         else put Vst_volgnr @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_DAM_CONTACT_BIJ_DEELNAME AS
   SELECT t1.Certhoud_id,
          t1.Correspondent,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Dos_id,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Per_id,
          t1.Rechten_id,
          t1.Rel_id,
          t1.Rol_cd,
          t1.Rol_cd_van,
          t1.Vst_volgnr
     FROM DATAQASG.DAM_CONTACT_BIJ_DEELNAME_TCMG t1;
QUIT;

data MIGRATIE.BAS_DAM_CONTACT_BIJ_DEELNAME;
  set MIGRATIE.BAS_DAM_CONTACT_BIJ_DEELNAME;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_DAM_CONTACT_BIJ_DEELNAME.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Certhoud_id" 
       ','
          "Correspondent" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Dos_id" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Per_id" 
       ','
          "Rechten_id" 
       ','
          "Rel_id" 
       ','
          "Rol_cd" 
       ','
          "Rol_cd_van" 
       ','
          "Vst_volgnr" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_DAM_CONTACT_BIJ_DEELNAME   end=EFIEOD; 
       format Certhoud_id best12. ;
       format Correspondent  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Dos_id best12. ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Per_id best12. ;
       format Rechten_id  ;
       format Rel_id best12. ;
       format Rol_cd  ;
       format Rol_cd_van  ;
       format Vst_volgnr best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Certhoud_id)
         then put "," @;
         else put Certhoud_id @;
       if missing(Correspondent)
         then put "," @;
         else do;
                   attrLengte_8812025576703905421=length(Correspondent);
                   aantalLF_8812025576703905421 = countc(Correspondent,'0A'x);
                   maxPassend_8812025576703905421=1-1-aantalLF_8812025576703905421;
                   if attrLengte_8812025576703905421 > max(maxPassend_8812025576703905421,1000)
                     then passend_8812025576703905421 = substr(Correspondent,1,maxPassend_8812025576703905421);
                     else passend_8812025576703905421 = Correspondent;
                   passend_8812025576703905421 = tranwrd(passend_8812025576703905421,'9D'x,'D0'x);
                   put passend_8812025576703905421 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Per_id)
         then put "," @;
         else put Per_id @;
       if missing(Rechten_id)
         then put "," @;
         else do;
                   attrLengte_1601778141520934777=length(Rechten_id);
                   aantalLF_1601778141520934777 = countc(Rechten_id,'0A'x);
                   maxPassend_1601778141520934777=1-1-aantalLF_1601778141520934777;
                   if attrLengte_1601778141520934777 > max(maxPassend_1601778141520934777,1000)
                     then passend_1601778141520934777 = substr(Rechten_id,1,maxPassend_1601778141520934777);
                     else passend_1601778141520934777 = Rechten_id;
                   passend_1601778141520934777 = tranwrd(passend_1601778141520934777,'9D'x,'D0'x);
                   put passend_1601778141520934777 ~ @;
              end;
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(Rol_cd)
         then put "," @;
         else do;
                   attrLengte_3864349925788261245=length(Rol_cd);
                   aantalLF_3864349925788261245 = countc(Rol_cd,'0A'x);
                   maxPassend_3864349925788261245=3-1-aantalLF_3864349925788261245;
                   if attrLengte_3864349925788261245 > max(maxPassend_3864349925788261245,1000)
                     then passend_3864349925788261245 = substr(Rol_cd,1,maxPassend_3864349925788261245);
                     else passend_3864349925788261245 = Rol_cd;
                   passend_3864349925788261245 = tranwrd(passend_3864349925788261245,'9D'x,'D0'x);
                   put passend_3864349925788261245 ~ @;
              end;
       if missing(Rol_cd_van)
         then put "," @;
         else do;
                   attrLengte_7341167645741356875=length(Rol_cd_van);
                   aantalLF_7341167645741356875 = countc(Rol_cd_van,'0A'x);
                   maxPassend_7341167645741356875=3-1-aantalLF_7341167645741356875;
                   if attrLengte_7341167645741356875 > max(maxPassend_7341167645741356875,1000)
                     then passend_7341167645741356875 = substr(Rol_cd_van,1,maxPassend_7341167645741356875);
                     else passend_7341167645741356875 = Rol_cd_van;
                   passend_7341167645741356875 = tranwrd(passend_7341167645741356875,'9D'x,'D0'x);
                   put passend_7341167645741356875 ~ @;
              end;
       if missing(Vst_volgnr)
         then put "," @;
         else put Vst_volgnr @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_DAM_DECLARATIE AS
   SELECT t1.Adviesaangevraagd,
          t1.Adviesaantaluren,
          t1.Advieshandtoegekend,
          t1.Adviesrente,
          t1.Adviesrentedatum FORMAT=B8601DT19. AS Adviesrentedatum,
          t1.Adviestoegekend,
          t1.Besluit_cor_id,
          t1.Cor_id,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Datumberekening FORMAT=B8601DT19. AS Datumberekening,
          t1.Dos_id,
          t1.Herstel,
          t1.Inboedeltuinaangevraagd,
          t1.Inboedeltuinhandtoegekend,
          t1.Inboedeltuinrente,
          t1.inboedeltuinrentedatum FORMAT=B8601DT19. AS inboedeltuinrentedatum,
          t1.Inboedeltuintoegekend,
          t1.Inkomstendervingaangevraagd,
          t1.Inkomstendervinghandtoegekend,
          t1.Inkomstendervingrente,
          t1.Inkomstendervingrentedatum FORMAT=B8601DT19. AS Inkomstendervingrentedatum,
          t1.Inkomstendervingtoegekend,
          t1.Juridischaangevraagd,
          t1.Juridischaantaluren,
          t1.Juridischhandtoegekend,
          t1.Juridischrente,
          t1.Juridischrentedatum FORMAT=B8601DT19. AS Juridischrentedatum,
          t1.Juridischtarief,
          t1.Juridischtoegekend,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Notitie,
          t1.Oorzaak,
          t1.Opslagaangevraagd,
          t1.Opslagaantalweken,
          t1.Opslaghandtoegekend,
          t1.opslagrente,
          t1.Opslagrentedatum FORMAT=B8601DT19. AS Opslagrentedatum,
          t1.Opslagtoegekend,
          t1.Overlastaangevraagd,
          t1.Overlasthandtoegekend,
          t1.Overlastrente,
          t1.Overlasttoegekend,
          t1.Overlastvergoeding,
          t1.Overnachtenaangevraagd,
          t1.Overnachtenaantalnachten,
          t1.Overnachtenaantalpersonen,
          t1.Overnachtenhandtoegekend,
          t1.Overnachtenrente,
          t1.Overnachtenrentedatum FORMAT=B8601DT19. AS Overnachtenrentedatum,
          t1.Overnachtentoegekend,
          t1.Reisaangevraagd,
          t1.Reisaantalkm,
          t1.Reishandtoegekend,
          t1.Reisov,
          t1.Reisrente,
          t1.Reisrentedatum FORMAT=B8601DT19. AS Reisrentedatum,
          t1.Reistoegekend,
          t1.Schoonmaakaangevraagd,
          t1.Schoonmaakhandtoegekend,
          t1.Schoonmaakrente,
          t1.Schoonmaaktoegekend,
          t1.Schoonmaakvergoeding,
          t1.Thuisblijfherstelaangevraagd,
          t1.Thuisblijfherstelaantaldagdeel,
          t1.Thuisblijfherstelhandtoegekend,
          t1.Thuisblijfherstelrente,
          t1.Thuisblijfhersteltoegekend,
          t1.Thuisblijfherstelvergoeding,
          t1.Thuisblijfopnameaangevraagd,
          t1.Thuisblijfopnamehandtoegekend,
          t1.Thuisblijfopnamerente,
          t1.Thuisblijfopnametoegekend,
          t1.Thuisblijfopnamevergoeding,
          t1.Totaalrente,
          t1.Totaaltoegekend,
          t1.Verhuisaangevraagd,
          t1.Verhuishandtoegekend,
          t1.Verhuisrente,
          t1.Verhuisrentedatum FORMAT=B8601DT19. AS Verhuisrentedatum,
          t1.Verhuistoegekend,
          t1.Zorgaangevraagd,
          t1.Zorghandtoegekend,
          t1.Zorgrente,
          t1.Zorgrentedatum FORMAT=B8601DT19. AS Zorgrentedatum,
          t1.Zorgtoegekend
     FROM DATAQASG.DAM_DECLARATIE_TCMG t1;
QUIT;

data MIGRATIE.BAS_DAM_DECLARATIE;
  set MIGRATIE.BAS_DAM_DECLARATIE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_DAM_DECLARATIE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Adviesaangevraagd" 
       ','
          "Adviesaantaluren" 
       ','
          "Advieshandtoegekend" 
       ','
          "Adviesrente" 
       ','
          "Adviesrentedatum" 
       ','
          "Adviestoegekend" 
       ','
          "Besluit_cor_id" 
       ','
          "Cor_id" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Datumberekening" 
       ','
          "Dos_id" 
       ','
          "Herstel" 
       ','
          "Inboedeltuinaangevraagd" 
       ','
          "Inboedeltuinhandtoegekend" 
       ','
          "Inboedeltuinrente" 
       ','
          "inboedeltuinrentedatum" 
       ','
          "Inboedeltuintoegekend" 
       ','
          "Inkomstendervingaangevraagd" 
       ','
          "Inkomstendervinghandtoegekend" 
       ','
          "Inkomstendervingrente" 
       ','
          "Inkomstendervingrentedatum" 
       ','
          "Inkomstendervingtoegekend" 
       ','
          "Juridischaangevraagd" 
       ','
          "Juridischaantaluren" 
       ','
          "Juridischhandtoegekend" 
       ','
          "Juridischrente" 
       ','
          "Juridischrentedatum" 
       ','
          "Juridischtarief" 
       ','
          "Juridischtoegekend" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Notitie" 
       ','
          "Oorzaak" 
       ','
          "Opslagaangevraagd" 
       ','
          "Opslagaantalweken" 
       ','
          "Opslaghandtoegekend" 
       ','
          "opslagrente" 
       ','
          "Opslagrentedatum" 
       ','
          "Opslagtoegekend" 
       ','
          "Overlastaangevraagd" 
       ','
          "Overlasthandtoegekend" 
       ','
          "Overlastrente" 
       ','
          "Overlasttoegekend" 
       ','
          "Overlastvergoeding" 
       ','
          "Overnachtenaangevraagd" 
       ','
          "Overnachtenaantalnachten" 
       ','
          "Overnachtenaantalpersonen" 
       ','
          "Overnachtenhandtoegekend" 
       ','
          "Overnachtenrente" 
       ','
          "Overnachtenrentedatum" 
       ','
          "Overnachtentoegekend" 
       ','
          "Reisaangevraagd" 
       ','
          "Reisaantalkm" 
       ','
          "Reishandtoegekend" 
       ','
          "Reisov" 
       ','
          "Reisrente" 
       ','
          "Reisrentedatum" 
       ','
          "Reistoegekend" 
       ','
          "Schoonmaakaangevraagd" 
       ','
          "Schoonmaakhandtoegekend" 
       ','
          "Schoonmaakrente" 
       ','
          "Schoonmaaktoegekend" 
       ','
          "Schoonmaakvergoeding" 
       ','
          "Thuisblijfherstelaangevraagd" 
       ','
          "Thuisblijfherstelaantaldagdeel" 
       ','
          "Thuisblijfherstelhandtoegekend" 
       ','
          "Thuisblijfherstelrente" 
       ','
          "Thuisblijfhersteltoegekend" 
       ','
          "Thuisblijfherstelvergoeding" 
       ','
          "Thuisblijfopnameaangevraagd" 
       ','
          "Thuisblijfopnamehandtoegekend" 
       ','
          "Thuisblijfopnamerente" 
       ','
          "Thuisblijfopnametoegekend" 
       ','
          "Thuisblijfopnamevergoeding" 
       ','
          "Totaalrente" 
       ','
          "Totaaltoegekend" 
       ','
          "Verhuisaangevraagd" 
       ','
          "Verhuishandtoegekend" 
       ','
          "Verhuisrente" 
       ','
          "Verhuisrentedatum" 
       ','
          "Verhuistoegekend" 
       ','
          "Zorgaangevraagd" 
       ','
          "Zorghandtoegekend" 
       ','
          "Zorgrente" 
       ','
          "Zorgrentedatum" 
       ','
          "Zorgtoegekend" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_DAM_DECLARATIE   end=EFIEOD; 
       format Adviesaangevraagd best12. ;
       format Adviesaantaluren best12. ;
       format Advieshandtoegekend best12. ;
       format Adviesrente best12. ;
       format Adviesrentedatum B8601DT19. ;
       format Adviestoegekend best12. ;
       format Besluit_cor_id best12. ;
       format Cor_id best12. ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Datumberekening B8601DT19. ;
       format Dos_id best12. ;
       format Herstel  ;
       format Inboedeltuinaangevraagd best12. ;
       format Inboedeltuinhandtoegekend best12. ;
       format Inboedeltuinrente best12. ;
       format inboedeltuinrentedatum B8601DT19. ;
       format Inboedeltuintoegekend best12. ;
       format Inkomstendervingaangevraagd best12. ;
       format Inkomstendervinghandtoegekend best12. ;
       format Inkomstendervingrente best12. ;
       format Inkomstendervingrentedatum B8601DT19. ;
       format Inkomstendervingtoegekend best12. ;
       format Juridischaangevraagd best12. ;
       format Juridischaantaluren best12. ;
       format Juridischhandtoegekend best12. ;
       format Juridischrente best12. ;
       format Juridischrentedatum B8601DT19. ;
       format Juridischtarief best12. ;
       format Juridischtoegekend best12. ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Notitie  ;
       format Oorzaak  ;
       format Opslagaangevraagd best12. ;
       format Opslagaantalweken best12. ;
       format Opslaghandtoegekend best12. ;
       format opslagrente best12. ;
       format Opslagrentedatum B8601DT19. ;
       format Opslagtoegekend best12. ;
       format Overlastaangevraagd best12. ;
       format Overlasthandtoegekend best12. ;
       format Overlastrente best12. ;
       format Overlasttoegekend best12. ;
       format Overlastvergoeding  ;
       format Overnachtenaangevraagd best12. ;
       format Overnachtenaantalnachten best12. ;
       format Overnachtenaantalpersonen  ;
       format Overnachtenhandtoegekend best12. ;
       format Overnachtenrente best12. ;
       format Overnachtenrentedatum B8601DT19. ;
       format Overnachtentoegekend best12. ;
       format Reisaangevraagd best12. ;
       format Reisaantalkm best12. ;
       format Reishandtoegekend best12. ;
       format Reisov best12. ;
       format Reisrente best12. ;
       format Reisrentedatum B8601DT19. ;
       format Reistoegekend best12. ;
       format Schoonmaakaangevraagd best12. ;
       format Schoonmaakhandtoegekend best12. ;
       format Schoonmaakrente best12. ;
       format Schoonmaaktoegekend best12. ;
       format Schoonmaakvergoeding  ;
       format Thuisblijfherstelaangevraagd best12. ;
       format Thuisblijfherstelaantaldagdeel best12. ;
       format Thuisblijfherstelhandtoegekend best12. ;
       format Thuisblijfherstelrente best12. ;
       format Thuisblijfhersteltoegekend best12. ;
       format Thuisblijfherstelvergoeding  ;
       format Thuisblijfopnameaangevraagd best12. ;
       format Thuisblijfopnamehandtoegekend best12. ;
       format Thuisblijfopnamerente best12. ;
       format Thuisblijfopnametoegekend best12. ;
       format Thuisblijfopnamevergoeding  ;
       format Totaalrente best12. ;
       format Totaaltoegekend best12. ;
       format Verhuisaangevraagd best12. ;
       format Verhuishandtoegekend best12. ;
       format Verhuisrente best12. ;
       format Verhuisrentedatum B8601DT19. ;
       format Verhuistoegekend best12. ;
       format Zorgaangevraagd best12. ;
       format Zorghandtoegekend best12. ;
       format Zorgrente best12. ;
       format Zorgrentedatum B8601DT19. ;
       format Zorgtoegekend best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Adviesaangevraagd)
         then put "," @;
         else put Adviesaangevraagd @;
       if missing(Adviesaantaluren)
         then put "," @;
         else put Adviesaantaluren @;
       if missing(Advieshandtoegekend)
         then put "," @;
         else put Advieshandtoegekend @;
       if missing(Adviesrente)
         then put "," @;
         else put Adviesrente @;
       if missing(Adviesrentedatum)
         then put "," @;
         else put Adviesrentedatum @;
       if missing(Adviestoegekend)
         then put "," @;
         else put Adviestoegekend @;
       if missing(Besluit_cor_id)
         then put "," @;
         else put Besluit_cor_id @;
       if missing(Cor_id)
         then put "," @;
         else put Cor_id @;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Datumberekening)
         then put "," @;
         else put Datumberekening @;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Herstel)
         then put "," @;
         else do;
                   attrLengte_8581403938583871530=length(Herstel);
                   aantalLF_8581403938583871530 = countc(Herstel,'0A'x);
                   maxPassend_8581403938583871530=1-1-aantalLF_8581403938583871530;
                   if attrLengte_8581403938583871530 > max(maxPassend_8581403938583871530,1000)
                     then passend_8581403938583871530 = substr(Herstel,1,maxPassend_8581403938583871530);
                     else passend_8581403938583871530 = Herstel;
                   passend_8581403938583871530 = tranwrd(passend_8581403938583871530,'9D'x,'D0'x);
                   put passend_8581403938583871530 ~ @;
              end;
       if missing(Inboedeltuinaangevraagd)
         then put "," @;
         else put Inboedeltuinaangevraagd @;
       if missing(Inboedeltuinhandtoegekend)
         then put "," @;
         else put Inboedeltuinhandtoegekend @;
       if missing(Inboedeltuinrente)
         then put "," @;
         else put Inboedeltuinrente @;
       if missing(inboedeltuinrentedatum)
         then put "," @;
         else put inboedeltuinrentedatum @;
       if missing(Inboedeltuintoegekend)
         then put "," @;
         else put Inboedeltuintoegekend @;
       if missing(Inkomstendervingaangevraagd)
         then put "," @;
         else put Inkomstendervingaangevraagd @;
       if missing(Inkomstendervinghandtoegekend)
         then put "," @;
         else put Inkomstendervinghandtoegekend @;
       if missing(Inkomstendervingrente)
         then put "," @;
         else put Inkomstendervingrente @;
       if missing(Inkomstendervingrentedatum)
         then put "," @;
         else put Inkomstendervingrentedatum @;
       if missing(Inkomstendervingtoegekend)
         then put "," @;
         else put Inkomstendervingtoegekend @;
       if missing(Juridischaangevraagd)
         then put "," @;
         else put Juridischaangevraagd @;
       if missing(Juridischaantaluren)
         then put "," @;
         else put Juridischaantaluren @;
       if missing(Juridischhandtoegekend)
         then put "," @;
         else put Juridischhandtoegekend @;
       if missing(Juridischrente)
         then put "," @;
         else put Juridischrente @;
       if missing(Juridischrentedatum)
         then put "," @;
         else put Juridischrentedatum @;
       if missing(Juridischtarief)
         then put "," @;
         else put Juridischtarief @;
       if missing(Juridischtoegekend)
         then put "," @;
         else put Juridischtoegekend @;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Notitie)
         then put "," @;
         else do;
                   attrLengte_1560041029703835131=length(Notitie);
                   aantalLF_1560041029703835131 = countc(Notitie,'0A'x);
                   maxPassend_1560041029703835131=2048-1-aantalLF_1560041029703835131;
                   if attrLengte_1560041029703835131 > max(maxPassend_1560041029703835131,1000)
                     then passend_1560041029703835131 = substr(Notitie,1,maxPassend_1560041029703835131);
                     else passend_1560041029703835131 = Notitie;
                   passend_1560041029703835131 = tranwrd(passend_1560041029703835131,'9D'x,'D0'x);
                   put passend_1560041029703835131 ~ @;
              end;
       if missing(Oorzaak)
         then put "," @;
         else do;
                   attrLengte_1090420702256006426=length(Oorzaak);
                   aantalLF_1090420702256006426 = countc(Oorzaak,'0A'x);
                   maxPassend_1090420702256006426=2048-1-aantalLF_1090420702256006426;
                   if attrLengte_1090420702256006426 > max(maxPassend_1090420702256006426,1000)
                     then passend_1090420702256006426 = substr(Oorzaak,1,maxPassend_1090420702256006426);
                     else passend_1090420702256006426 = Oorzaak;
                   passend_1090420702256006426 = tranwrd(passend_1090420702256006426,'9D'x,'D0'x);
                   put passend_1090420702256006426 ~ @;
              end;
       if missing(Opslagaangevraagd)
         then put "," @;
         else put Opslagaangevraagd @;
       if missing(Opslagaantalweken)
         then put "," @;
         else put Opslagaantalweken @;
       if missing(Opslaghandtoegekend)
         then put "," @;
         else put Opslaghandtoegekend @;
       if missing(opslagrente)
         then put "," @;
         else put opslagrente @;
       if missing(Opslagrentedatum)
         then put "," @;
         else put Opslagrentedatum @;
       if missing(Opslagtoegekend)
         then put "," @;
         else put Opslagtoegekend @;
       if missing(Overlastaangevraagd)
         then put "," @;
         else put Overlastaangevraagd @;
       if missing(Overlasthandtoegekend)
         then put "," @;
         else put Overlasthandtoegekend @;
       if missing(Overlastrente)
         then put "," @;
         else put Overlastrente @;
       if missing(Overlasttoegekend)
         then put "," @;
         else put Overlasttoegekend @;
       if missing(Overlastvergoeding)
         then put "," @;
         else do;
                   attrLengte_7781963126527233006=length(Overlastvergoeding);
                   aantalLF_7781963126527233006 = countc(Overlastvergoeding,'0A'x);
                   maxPassend_7781963126527233006=1-1-aantalLF_7781963126527233006;
                   if attrLengte_7781963126527233006 > max(maxPassend_7781963126527233006,1000)
                     then passend_7781963126527233006 = substr(Overlastvergoeding,1,maxPassend_7781963126527233006);
                     else passend_7781963126527233006 = Overlastvergoeding;
                   passend_7781963126527233006 = tranwrd(passend_7781963126527233006,'9D'x,'D0'x);
                   put passend_7781963126527233006 ~ @;
              end;
       if missing(Overnachtenaangevraagd)
         then put "," @;
         else put Overnachtenaangevraagd @;
       if missing(Overnachtenaantalnachten)
         then put "," @;
         else put Overnachtenaantalnachten @;
       if missing(Overnachtenaantalpersonen)
         then put "," @;
         else do;
                   attrLengte_6677307492037356733=length(Overnachtenaantalpersonen);
                   aantalLF_6677307492037356733 = countc(Overnachtenaantalpersonen,'0A'x);
                   maxPassend_6677307492037356733=20-1-aantalLF_6677307492037356733;
                   if attrLengte_6677307492037356733 > max(maxPassend_6677307492037356733,1000)
                     then passend_6677307492037356733 = substr(Overnachtenaantalpersonen,1,maxPassend_6677307492037356733);
                     else passend_6677307492037356733 = Overnachtenaantalpersonen;
                   passend_6677307492037356733 = tranwrd(passend_6677307492037356733,'9D'x,'D0'x);
                   put passend_6677307492037356733 ~ @;
              end;
       if missing(Overnachtenhandtoegekend)
         then put "," @;
         else put Overnachtenhandtoegekend @;
       if missing(Overnachtenrente)
         then put "," @;
         else put Overnachtenrente @;
       if missing(Overnachtenrentedatum)
         then put "," @;
         else put Overnachtenrentedatum @;
       if missing(Overnachtentoegekend)
         then put "," @;
         else put Overnachtentoegekend @;
       if missing(Reisaangevraagd)
         then put "," @;
         else put Reisaangevraagd @;
       if missing(Reisaantalkm)
         then put "," @;
         else put Reisaantalkm @;
       if missing(Reishandtoegekend)
         then put "," @;
         else put Reishandtoegekend @;
       if missing(Reisov)
         then put "," @;
         else put Reisov @;
       if missing(Reisrente)
         then put "," @;
         else put Reisrente @;
       if missing(Reisrentedatum)
         then put "," @;
         else put Reisrentedatum @;
       if missing(Reistoegekend)
         then put "," @;
         else put Reistoegekend @;
       if missing(Schoonmaakaangevraagd)
         then put "," @;
         else put Schoonmaakaangevraagd @;
       if missing(Schoonmaakhandtoegekend)
         then put "," @;
         else put Schoonmaakhandtoegekend @;
       if missing(Schoonmaakrente)
         then put "," @;
         else put Schoonmaakrente @;
       if missing(Schoonmaaktoegekend)
         then put "," @;
         else put Schoonmaaktoegekend @;
       if missing(Schoonmaakvergoeding)
         then put "," @;
         else do;
                   attrLengte_5154373665155301082=length(Schoonmaakvergoeding);
                   aantalLF_5154373665155301082 = countc(Schoonmaakvergoeding,'0A'x);
                   maxPassend_5154373665155301082=1-1-aantalLF_5154373665155301082;
                   if attrLengte_5154373665155301082 > max(maxPassend_5154373665155301082,1000)
                     then passend_5154373665155301082 = substr(Schoonmaakvergoeding,1,maxPassend_5154373665155301082);
                     else passend_5154373665155301082 = Schoonmaakvergoeding;
                   passend_5154373665155301082 = tranwrd(passend_5154373665155301082,'9D'x,'D0'x);
                   put passend_5154373665155301082 ~ @;
              end;
       if missing(Thuisblijfherstelaangevraagd)
         then put "," @;
         else put Thuisblijfherstelaangevraagd @;
       if missing(Thuisblijfherstelaantaldagdeel)
         then put "," @;
         else put Thuisblijfherstelaantaldagdeel @;
       if missing(Thuisblijfherstelhandtoegekend)
         then put "," @;
         else put Thuisblijfherstelhandtoegekend @;
       if missing(Thuisblijfherstelrente)
         then put "," @;
         else put Thuisblijfherstelrente @;
       if missing(Thuisblijfhersteltoegekend)
         then put "," @;
         else put Thuisblijfhersteltoegekend @;
       if missing(Thuisblijfherstelvergoeding)
         then put "," @;
         else do;
                   attrLengte_4398689792722007676=length(Thuisblijfherstelvergoeding);
                   aantalLF_4398689792722007676 = countc(Thuisblijfherstelvergoeding,'0A'x);
                   maxPassend_4398689792722007676=1-1-aantalLF_4398689792722007676;
                   if attrLengte_4398689792722007676 > max(maxPassend_4398689792722007676,1000)
                     then passend_4398689792722007676 = substr(Thuisblijfherstelvergoeding,1,maxPassend_4398689792722007676);
                     else passend_4398689792722007676 = Thuisblijfherstelvergoeding;
                   passend_4398689792722007676 = tranwrd(passend_4398689792722007676,'9D'x,'D0'x);
                   put passend_4398689792722007676 ~ @;
              end;
       if missing(Thuisblijfopnameaangevraagd)
         then put "," @;
         else put Thuisblijfopnameaangevraagd @;
       if missing(Thuisblijfopnamehandtoegekend)
         then put "," @;
         else put Thuisblijfopnamehandtoegekend @;
       if missing(Thuisblijfopnamerente)
         then put "," @;
         else put Thuisblijfopnamerente @;
       if missing(Thuisblijfopnametoegekend)
         then put "," @;
         else put Thuisblijfopnametoegekend @;
       if missing(Thuisblijfopnamevergoeding)
         then put "," @;
         else do;
                   attrLengte_2700664876793728116=length(Thuisblijfopnamevergoeding);
                   aantalLF_2700664876793728116 = countc(Thuisblijfopnamevergoeding,'0A'x);
                   maxPassend_2700664876793728116=1-1-aantalLF_2700664876793728116;
                   if attrLengte_2700664876793728116 > max(maxPassend_2700664876793728116,1000)
                     then passend_2700664876793728116 = substr(Thuisblijfopnamevergoeding,1,maxPassend_2700664876793728116);
                     else passend_2700664876793728116 = Thuisblijfopnamevergoeding;
                   passend_2700664876793728116 = tranwrd(passend_2700664876793728116,'9D'x,'D0'x);
                   put passend_2700664876793728116 ~ @;
              end;
       if missing(Totaalrente)
         then put "," @;
         else put Totaalrente @;
       if missing(Totaaltoegekend)
         then put "," @;
         else put Totaaltoegekend @;
       if missing(Verhuisaangevraagd)
         then put "," @;
         else put Verhuisaangevraagd @;
       if missing(Verhuishandtoegekend)
         then put "," @;
         else put Verhuishandtoegekend @;
       if missing(Verhuisrente)
         then put "," @;
         else put Verhuisrente @;
       if missing(Verhuisrentedatum)
         then put "," @;
         else put Verhuisrentedatum @;
       if missing(Verhuistoegekend)
         then put "," @;
         else put Verhuistoegekend @;
       if missing(Zorgaangevraagd)
         then put "," @;
         else put Zorgaangevraagd @;
       if missing(Zorghandtoegekend)
         then put "," @;
         else put Zorghandtoegekend @;
       if missing(Zorgrente)
         then put "," @;
         else put Zorgrente @;
       if missing(Zorgrentedatum)
         then put "," @;
         else put Zorgrentedatum @;
       if missing(Zorgtoegekend)
         then put "," @;
         else put Zorgtoegekend @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_DAM_DEELNAME_ADRES AS
   SELECT t1.Adressoort,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Dda_id,
          t1.Dos_id,
          t1.Kkr_afwijkend,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Rae_id,
          t1.Ras_id,
          t1.Rel_id,
          t1.Rol_cd,
          t1.Vst_volgnr
     FROM DATAQASG.DAM_DEELNAME_ADRES_TCMG t1;
QUIT;

data MIGRATIE.BAS_DAM_DEELNAME_ADRES;
  set MIGRATIE.BAS_DAM_DEELNAME_ADRES;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_DAM_DEELNAME_ADRES.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Adressoort" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Dda_id" 
       ','
          "Dos_id" 
       ','
          "Kkr_afwijkend" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Rae_id" 
       ','
          "Ras_id" 
       ','
          "Rel_id" 
       ','
          "Rol_cd" 
       ','
          "Vst_volgnr" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_DAM_DEELNAME_ADRES   end=EFIEOD; 
       format Adressoort  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Dda_id best12. ;
       format Dos_id best12. ;
       format Kkr_afwijkend  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Rae_id best12. ;
       format Ras_id best12. ;
       format Rel_id best12. ;
       format Rol_cd  ;
       format Vst_volgnr best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Adressoort)
         then put "," @;
         else do;
                   attrLengte_3177944828558768780=length(Adressoort);
                   aantalLF_3177944828558768780 = countc(Adressoort,'0A'x);
                   maxPassend_3177944828558768780=3-1-aantalLF_3177944828558768780;
                   if attrLengte_3177944828558768780 > max(maxPassend_3177944828558768780,1000)
                     then passend_3177944828558768780 = substr(Adressoort,1,maxPassend_3177944828558768780);
                     else passend_3177944828558768780 = Adressoort;
                   passend_3177944828558768780 = tranwrd(passend_3177944828558768780,'9D'x,'D0'x);
                   put passend_3177944828558768780 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Dda_id)
         then put "," @;
         else put Dda_id @;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Kkr_afwijkend)
         then put "," @;
         else do;
                   attrLengte_2769375351547567359=length(Kkr_afwijkend);
                   aantalLF_2769375351547567359 = countc(Kkr_afwijkend,'0A'x);
                   maxPassend_2769375351547567359=1-1-aantalLF_2769375351547567359;
                   if attrLengte_2769375351547567359 > max(maxPassend_2769375351547567359,1000)
                     then passend_2769375351547567359 = substr(Kkr_afwijkend,1,maxPassend_2769375351547567359);
                     else passend_2769375351547567359 = Kkr_afwijkend;
                   passend_2769375351547567359 = tranwrd(passend_2769375351547567359,'9D'x,'D0'x);
                   put passend_2769375351547567359 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Rae_id)
         then put "," @;
         else put Rae_id @;
       if missing(Ras_id)
         then put "," @;
         else put Ras_id @;
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(Rol_cd)
         then put "," @;
         else do;
                   attrLengte_3864349925788261245=length(Rol_cd);
                   aantalLF_3864349925788261245 = countc(Rol_cd,'0A'x);
                   maxPassend_3864349925788261245=3-1-aantalLF_3864349925788261245;
                   if attrLengte_3864349925788261245 > max(maxPassend_3864349925788261245,1000)
                     then passend_3864349925788261245 = substr(Rol_cd,1,maxPassend_3864349925788261245);
                     else passend_3864349925788261245 = Rol_cd;
                   passend_3864349925788261245 = tranwrd(passend_3864349925788261245,'9D'x,'D0'x);
                   put passend_3864349925788261245 ~ @;
              end;
       if missing(Vst_volgnr)
         then put "," @;
         else put Vst_volgnr @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_DAM_DEELNAME_COM_ADRES AS
   SELECT t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Dda_id,
          t1.Dos_id,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Rae_id,
          t1.Rca_id,
          t1.Rel_id,
          t1.Rol_cd,
          t1.Vst_volgnr
     FROM DATAQASG.DAM_DEELNAME_COM_ADRES_TCMG t1;
QUIT;

data MIGRATIE.BAS_DAM_DEELNAME_COM_ADRES;
  set MIGRATIE.BAS_DAM_DEELNAME_COM_ADRES;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_DAM_DEELNAME_COM_ADRES.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Dda_id" 
       ','
          "Dos_id" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Rae_id" 
       ','
          "Rca_id" 
       ','
          "Rel_id" 
       ','
          "Rol_cd" 
       ','
          "Vst_volgnr" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_DAM_DEELNAME_COM_ADRES   end=EFIEOD; 
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Dda_id best12. ;
       format Dos_id best12. ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Rae_id best12. ;
       format Rca_id best12. ;
       format Rel_id best12. ;
       format Rol_cd  ;
       format Vst_volgnr best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Dda_id)
         then put "," @;
         else put Dda_id @;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Rae_id)
         then put "," @;
         else put Rae_id @;
       if missing(Rca_id)
         then put "," @;
         else put Rca_id @;
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(Rol_cd)
         then put "," @;
         else do;
                   attrLengte_3864349925788261245=length(Rol_cd);
                   aantalLF_3864349925788261245 = countc(Rol_cd,'0A'x);
                   maxPassend_3864349925788261245=3-1-aantalLF_3864349925788261245;
                   if attrLengte_3864349925788261245 > max(maxPassend_3864349925788261245,1000)
                     then passend_3864349925788261245 = substr(Rol_cd,1,maxPassend_3864349925788261245);
                     else passend_3864349925788261245 = Rol_cd;
                   passend_3864349925788261245 = tranwrd(passend_3864349925788261245,'9D'x,'D0'x);
                   put passend_3864349925788261245 ~ @;
              end;
       if missing(Vst_volgnr)
         then put "," @;
         else put Vst_volgnr @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_DAM_DEELNAME AS
   SELECT t1.Afwijking_cd,
          t1.Bic,
          t1.Bic_cd,
          t1.Contract_cd,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Dam_project_deelname,
          t1.Deelnamenaam,
          t1.Dos_id,
          t1.Ed_deelnemer_id,
          t1.Edeelnemer_id,
          t1.Einddatum FORMAT=B8601DT19. AS Einddatum,
          t1.Elektronisch_corresponderen_JN,
          t1.Fisc_eenheid,
          t1.Geclaimd,
          t1.Geclaimd_NLG,
          t1.Gedeclareerd,
          t1.Gedeclareerd_NLG,
          t1.Gerealiseerd,
          t1.Gerealiseerd_NLG,
          t1.Geschoond,
          t1.Geschoond_NLG,
          t1.IBAN,
          t1.Ingediend,
          t1.Ingediend_NLG,
          t1.Kkr_statutair,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Niet_sepa_betalen,
          t1.Org_id,
          t1.Org_naam,
          t1.Pom_ranking,
          t1.Rel_id,
          t1.Rel_id_rekening,
          t1.Rol_cd,
          t1.Startdatum FORMAT=B8601DT19. AS Startdatum,
          t1.Totaal_decl_deelname,
          t1.Totaal_uitb_deelname,
          t1.Verklaring_gewenst_JN,
          t1.Vst_volgnr
     FROM DATAQASG.DAM_DEELNAME_TCMG t1;
QUIT;

data MIGRATIE.BAS_DAM_DEELNAME;
  set MIGRATIE.BAS_DAM_DEELNAME;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_DAM_DEELNAME.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Afwijking_cd" 
       ','
          "Bic" 
       ','
          "Bic_cd" 
       ','
          "Contract_cd" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Dam_project_deelname" 
       ','
          "Deelnamenaam" 
       ','
          "Dos_id" 
       ','
          "Ed_deelnemer_id" 
       ','
          "Edeelnemer_id" 
       ','
          "Einddatum" 
       ','
          "Elektronisch_corresponderen_JN" 
       ','
          "Fisc_eenheid" 
       ','
          "Geclaimd" 
       ','
          "Geclaimd_NLG" 
       ','
          "Gedeclareerd" 
       ','
          "Gedeclareerd_NLG" 
       ','
          "Gerealiseerd" 
       ','
          "Gerealiseerd_NLG" 
       ','
          "Geschoond" 
       ','
          "Geschoond_NLG" 
       ','
          "IBAN" 
       ','
          "Ingediend" 
       ','
          "Ingediend_NLG" 
       ','
          "Kkr_statutair" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Niet_sepa_betalen" 
       ','
          "Org_id" 
       ','
          "Org_naam" 
       ','
          "Pom_ranking" 
       ','
          "Rel_id" 
       ','
          "Rel_id_rekening" 
       ','
          "Rol_cd" 
       ','
          "Startdatum" 
       ','
          "Totaal_decl_deelname" 
       ','
          "Totaal_uitb_deelname" 
       ','
          "Verklaring_gewenst_JN" 
       ','
          "Vst_volgnr" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_DAM_DEELNAME   end=EFIEOD; 
       format Afwijking_cd  ;
       format Bic  ;
       format Bic_cd  ;
       format Contract_cd  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Dam_project_deelname  ;
       format Deelnamenaam  ;
       format Dos_id best12. ;
       format Ed_deelnemer_id best12. ;
       format Edeelnemer_id best12. ;
       format Einddatum B8601DT19. ;
       format Elektronisch_corresponderen_JN  ;
       format Fisc_eenheid  ;
       format Geclaimd best12. ;
       format Geclaimd_NLG best12. ;
       format Gedeclareerd best12. ;
       format Gedeclareerd_NLG best12. ;
       format Gerealiseerd best12. ;
       format Gerealiseerd_NLG best12. ;
       format Geschoond best12. ;
       format Geschoond_NLG best12. ;
       format IBAN  ;
       format Ingediend best12. ;
       format Ingediend_NLG best12. ;
       format Kkr_statutair  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Niet_sepa_betalen  ;
       format Org_id best12. ;
       format Org_naam  ;
       format Pom_ranking  ;
       format Rel_id best12. ;
       format Rel_id_rekening best12. ;
       format Rol_cd  ;
       format Startdatum B8601DT19. ;
       format Totaal_decl_deelname best12. ;
       format Totaal_uitb_deelname best12. ;
       format Verklaring_gewenst_JN  ;
       format Vst_volgnr best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Afwijking_cd)
         then put "," @;
         else do;
                   attrLengte_6069221198781782894=length(Afwijking_cd);
                   aantalLF_6069221198781782894 = countc(Afwijking_cd,'0A'x);
                   maxPassend_6069221198781782894=6-1-aantalLF_6069221198781782894;
                   if attrLengte_6069221198781782894 > max(maxPassend_6069221198781782894,1000)
                     then passend_6069221198781782894 = substr(Afwijking_cd,1,maxPassend_6069221198781782894);
                     else passend_6069221198781782894 = Afwijking_cd;
                   passend_6069221198781782894 = tranwrd(passend_6069221198781782894,'9D'x,'D0'x);
                   put passend_6069221198781782894 ~ @;
              end;
       if missing(Bic)
         then put "," @;
         else do;
                   attrLengte_8393283933206478573=length(Bic);
                   aantalLF_8393283933206478573 = countc(Bic,'0A'x);
                   maxPassend_8393283933206478573=11-1-aantalLF_8393283933206478573;
                   if attrLengte_8393283933206478573 > max(maxPassend_8393283933206478573,1000)
                     then passend_8393283933206478573 = substr(Bic,1,maxPassend_8393283933206478573);
                     else passend_8393283933206478573 = Bic;
                   passend_8393283933206478573 = tranwrd(passend_8393283933206478573,'9D'x,'D0'x);
                   put passend_8393283933206478573 ~ @;
              end;
       if missing(Bic_cd)
         then put "," @;
         else do;
                   attrLengte_8053974040012975446=length(Bic_cd);
                   aantalLF_8053974040012975446 = countc(Bic_cd,'0A'x);
                   maxPassend_8053974040012975446=8-1-aantalLF_8053974040012975446;
                   if attrLengte_8053974040012975446 > max(maxPassend_8053974040012975446,1000)
                     then passend_8053974040012975446 = substr(Bic_cd,1,maxPassend_8053974040012975446);
                     else passend_8053974040012975446 = Bic_cd;
                   passend_8053974040012975446 = tranwrd(passend_8053974040012975446,'9D'x,'D0'x);
                   put passend_8053974040012975446 ~ @;
              end;
       if missing(Contract_cd)
         then put "," @;
         else do;
                   attrLengte_1865355944021713687=length(Contract_cd);
                   aantalLF_1865355944021713687 = countc(Contract_cd,'0A'x);
                   maxPassend_1865355944021713687=30-1-aantalLF_1865355944021713687;
                   if attrLengte_1865355944021713687 > max(maxPassend_1865355944021713687,1000)
                     then passend_1865355944021713687 = substr(Contract_cd,1,maxPassend_1865355944021713687);
                     else passend_1865355944021713687 = Contract_cd;
                   passend_1865355944021713687 = tranwrd(passend_1865355944021713687,'9D'x,'D0'x);
                   put passend_1865355944021713687 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Dam_project_deelname)
         then put "," @;
         else do;
                   attrLengte_3170374373452541152=length(Dam_project_deelname);
                   aantalLF_3170374373452541152 = countc(Dam_project_deelname,'0A'x);
                   maxPassend_3170374373452541152=1-1-aantalLF_3170374373452541152;
                   if attrLengte_3170374373452541152 > max(maxPassend_3170374373452541152,1000)
                     then passend_3170374373452541152 = substr(Dam_project_deelname,1,maxPassend_3170374373452541152);
                     else passend_3170374373452541152 = Dam_project_deelname;
                   passend_3170374373452541152 = tranwrd(passend_3170374373452541152,'9D'x,'D0'x);
                   put passend_3170374373452541152 ~ @;
              end;
       if missing(Deelnamenaam)
         then put "," @;
         else do;
                   attrLengte_1994370041286876558=length(Deelnamenaam);
                   aantalLF_1994370041286876558 = countc(Deelnamenaam,'0A'x);
                   maxPassend_1994370041286876558=625-1-aantalLF_1994370041286876558;
                   if attrLengte_1994370041286876558 > max(maxPassend_1994370041286876558,1000)
                     then passend_1994370041286876558 = substr(Deelnamenaam,1,maxPassend_1994370041286876558);
                     else passend_1994370041286876558 = Deelnamenaam;
                   passend_1994370041286876558 = tranwrd(passend_1994370041286876558,'9D'x,'D0'x);
                   put passend_1994370041286876558 ~ @;
              end;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Ed_deelnemer_id)
         then put "," @;
         else put Ed_deelnemer_id @;
       if missing(Edeelnemer_id)
         then put "," @;
         else put Edeelnemer_id @;
       if missing(Einddatum)
         then put "," @;
         else put Einddatum @;
       if missing(Elektronisch_corresponderen_JN)
         then put "," @;
         else do;
                   attrLengte_1182540143258376654=length(Elektronisch_corresponderen_JN);
                   aantalLF_1182540143258376654 = countc(Elektronisch_corresponderen_JN,'0A'x);
                   maxPassend_1182540143258376654=1-1-aantalLF_1182540143258376654;
                   if attrLengte_1182540143258376654 > max(maxPassend_1182540143258376654,1000)
                     then passend_1182540143258376654 = substr(Elektronisch_corresponderen_JN,1,maxPassend_1182540143258376654);
                     else passend_1182540143258376654 = Elektronisch_corresponderen_JN;
                   passend_1182540143258376654 = tranwrd(passend_1182540143258376654,'9D'x,'D0'x);
                   put passend_1182540143258376654 ~ @;
              end;
       if missing(Fisc_eenheid)
         then put "," @;
         else do;
                   attrLengte_3415722162129386078=length(Fisc_eenheid);
                   aantalLF_3415722162129386078 = countc(Fisc_eenheid,'0A'x);
                   maxPassend_3415722162129386078=1-1-aantalLF_3415722162129386078;
                   if attrLengte_3415722162129386078 > max(maxPassend_3415722162129386078,1000)
                     then passend_3415722162129386078 = substr(Fisc_eenheid,1,maxPassend_3415722162129386078);
                     else passend_3415722162129386078 = Fisc_eenheid;
                   passend_3415722162129386078 = tranwrd(passend_3415722162129386078,'9D'x,'D0'x);
                   put passend_3415722162129386078 ~ @;
              end;
       if missing(Geclaimd)
         then put "," @;
         else put Geclaimd @;
       if missing(Geclaimd_NLG)
         then put "," @;
         else put Geclaimd_NLG @;
       if missing(Gedeclareerd)
         then put "," @;
         else put Gedeclareerd @;
       if missing(Gedeclareerd_NLG)
         then put "," @;
         else put Gedeclareerd_NLG @;
       if missing(Gerealiseerd)
         then put "," @;
         else put Gerealiseerd @;
       if missing(Gerealiseerd_NLG)
         then put "," @;
         else put Gerealiseerd_NLG @;
       if missing(Geschoond)
         then put "," @;
         else put Geschoond @;
       if missing(Geschoond_NLG)
         then put "," @;
         else put Geschoond_NLG @;
       if missing(IBAN)
         then put "," @;
         else do;
                   attrLengte_2465255549550354096=length(IBAN);
                   aantalLF_2465255549550354096 = countc(IBAN,'0A'x);
                   maxPassend_2465255549550354096=34-1-aantalLF_2465255549550354096;
                   if attrLengte_2465255549550354096 > max(maxPassend_2465255549550354096,1000)
                     then passend_2465255549550354096 = substr(IBAN,1,maxPassend_2465255549550354096);
                     else passend_2465255549550354096 = IBAN;
                   passend_2465255549550354096 = tranwrd(passend_2465255549550354096,'9D'x,'D0'x);
                   put passend_2465255549550354096 ~ @;
              end;
       if missing(Ingediend)
         then put "," @;
         else put Ingediend @;
       if missing(Ingediend_NLG)
         then put "," @;
         else put Ingediend_NLG @;
       if missing(Kkr_statutair)
         then put "," @;
         else do;
                   attrLengte_6505825157492958705=length(Kkr_statutair);
                   aantalLF_6505825157492958705 = countc(Kkr_statutair,'0A'x);
                   maxPassend_6505825157492958705=1-1-aantalLF_6505825157492958705;
                   if attrLengte_6505825157492958705 > max(maxPassend_6505825157492958705,1000)
                     then passend_6505825157492958705 = substr(Kkr_statutair,1,maxPassend_6505825157492958705);
                     else passend_6505825157492958705 = Kkr_statutair;
                   passend_6505825157492958705 = tranwrd(passend_6505825157492958705,'9D'x,'D0'x);
                   put passend_6505825157492958705 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Niet_sepa_betalen)
         then put "," @;
         else do;
                   attrLengte_3451523040384006255=length(Niet_sepa_betalen);
                   aantalLF_3451523040384006255 = countc(Niet_sepa_betalen,'0A'x);
                   maxPassend_3451523040384006255=1-1-aantalLF_3451523040384006255;
                   if attrLengte_3451523040384006255 > max(maxPassend_3451523040384006255,1000)
                     then passend_3451523040384006255 = substr(Niet_sepa_betalen,1,maxPassend_3451523040384006255);
                     else passend_3451523040384006255 = Niet_sepa_betalen;
                   passend_3451523040384006255 = tranwrd(passend_3451523040384006255,'9D'x,'D0'x);
                   put passend_3451523040384006255 ~ @;
              end;
       if missing(Org_id)
         then put "," @;
         else put Org_id @;
       if missing(Org_naam)
         then put "," @;
         else do;
                   attrLengte_2338667727953163128=length(Org_naam);
                   aantalLF_2338667727953163128 = countc(Org_naam,'0A'x);
                   maxPassend_2338667727953163128=625-1-aantalLF_2338667727953163128;
                   if attrLengte_2338667727953163128 > max(maxPassend_2338667727953163128,1000)
                     then passend_2338667727953163128 = substr(Org_naam,1,maxPassend_2338667727953163128);
                     else passend_2338667727953163128 = Org_naam;
                   passend_2338667727953163128 = tranwrd(passend_2338667727953163128,'9D'x,'D0'x);
                   put passend_2338667727953163128 ~ @;
              end;
       if missing(Pom_ranking)
         then put "," @;
         else do;
                   attrLengte_3487759042954522650=length(Pom_ranking);
                   aantalLF_3487759042954522650 = countc(Pom_ranking,'0A'x);
                   maxPassend_3487759042954522650=1-1-aantalLF_3487759042954522650;
                   if attrLengte_3487759042954522650 > max(maxPassend_3487759042954522650,1000)
                     then passend_3487759042954522650 = substr(Pom_ranking,1,maxPassend_3487759042954522650);
                     else passend_3487759042954522650 = Pom_ranking;
                   passend_3487759042954522650 = tranwrd(passend_3487759042954522650,'9D'x,'D0'x);
                   put passend_3487759042954522650 ~ @;
              end;
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(Rel_id_rekening)
         then put "," @;
         else put Rel_id_rekening @;
       if missing(Rol_cd)
         then put "," @;
         else do;
                   attrLengte_3864349925788261245=length(Rol_cd);
                   aantalLF_3864349925788261245 = countc(Rol_cd,'0A'x);
                   maxPassend_3864349925788261245=3-1-aantalLF_3864349925788261245;
                   if attrLengte_3864349925788261245 > max(maxPassend_3864349925788261245,1000)
                     then passend_3864349925788261245 = substr(Rol_cd,1,maxPassend_3864349925788261245);
                     else passend_3864349925788261245 = Rol_cd;
                   passend_3864349925788261245 = tranwrd(passend_3864349925788261245,'9D'x,'D0'x);
                   put passend_3864349925788261245 ~ @;
              end;
       if missing(Startdatum)
         then put "," @;
         else put Startdatum @;
       if missing(Totaal_decl_deelname)
         then put "," @;
         else put Totaal_decl_deelname @;
       if missing(Totaal_uitb_deelname)
         then put "," @;
         else put Totaal_uitb_deelname @;
       if missing(Verklaring_gewenst_JN)
         then put "," @;
         else do;
                   attrLengte_478921531652131463=length(Verklaring_gewenst_JN);
                   aantalLF_478921531652131463 = countc(Verklaring_gewenst_JN,'0A'x);
                   maxPassend_478921531652131463=1-1-aantalLF_478921531652131463;
                   if attrLengte_478921531652131463 > max(maxPassend_478921531652131463,1000)
                     then passend_478921531652131463 = substr(Verklaring_gewenst_JN,1,maxPassend_478921531652131463);
                     else passend_478921531652131463 = Verklaring_gewenst_JN;
                   passend_478921531652131463 = tranwrd(passend_478921531652131463,'9D'x,'D0'x);
                   put passend_478921531652131463 ~ @;
              end;
       if missing(Vst_volgnr)
         then put "," @;
         else put Vst_volgnr @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_DAM_DOS_BUDGETREGEL AS
   SELECT t1.Dos_id,
          t1.Tra_id,
          t1.Volgnummer,
          t1.Ovk_nr,
          t1.Rpt_nr,
          t1.Bgt_cd,
          t1.Verleend,
          t1.Ingetrokken,
          t1.Gedeclareerd,
          t1.Betaald,
          t1.Vastgesteld,
          t1.Openstaand,
          t1.Opeisbaar,
          t1.Def_verleend,
          t1.Def_ingetrokken,
          t1.Def_gedeclareerd,
          t1.Def_openstaand,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Rpe_datum_van FORMAT=B8601DT19. AS Rpe_datum_van,
          t1.Neg_einddeclaratie,
          t1.Prg_id,
          t1.Reg_id,
          t1.Reg_nr,
          t1.Afl_neg_einddeclaratie,
          t1.Def_neg_einddeclaratie,
          t1.Cvk_id,
          t1.Vpl_volgnummer,
          t1.Rpt_nr_oud,
          t1.Per_Deelnemer
     FROM DATAQASG.DAM_DOS_BUDGETREGEL_TCMG t1;
QUIT;

data MIGRATIE.BAS_DAM_DOS_BUDGETREGEL;
  set MIGRATIE.BAS_DAM_DOS_BUDGETREGEL;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_DAM_DOS_BUDGETREGEL.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Dos_id" 
       ','
          "Tra_id" 
       ','
          "Volgnummer" 
       ','
          "Ovk_nr" 
       ','
          "Rpt_nr" 
       ','
          "Bgt_cd" 
       ','
          "Verleend" 
       ','
          "Ingetrokken" 
       ','
          "Gedeclareerd" 
       ','
          "Betaald" 
       ','
          "Vastgesteld" 
       ','
          "Openstaand" 
       ','
          "Opeisbaar" 
       ','
          "Def_verleend" 
       ','
          "Def_ingetrokken" 
       ','
          "Def_gedeclareerd" 
       ','
          "Def_openstaand" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Rpe_datum_van" 
       ','
          "Neg_einddeclaratie" 
       ','
          "Prg_id" 
       ','
          "Reg_id" 
       ','
          "Reg_nr" 
       ','
          "Afl_neg_einddeclaratie" 
       ','
          "Def_neg_einddeclaratie" 
       ','
          "Cvk_id" 
       ','
          "Vpl_volgnummer" 
       ','
          "Rpt_nr_oud" 
       ','
          "Per_Deelnemer" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_DAM_DOS_BUDGETREGEL   end=EFIEOD; 
       format Dos_id best12. ;
       format Tra_id best12. ;
       format Volgnummer best12. ;
       format Ovk_nr  ;
       format Rpt_nr best12. ;
       format Bgt_cd  ;
       format Verleend best12. ;
       format Ingetrokken best12. ;
       format Gedeclareerd best12. ;
       format Betaald best12. ;
       format Vastgesteld best12. ;
       format Openstaand best12. ;
       format Opeisbaar best12. ;
       format Def_verleend best12. ;
       format Def_ingetrokken best12. ;
       format Def_gedeclareerd best12. ;
       format Def_openstaand best12. ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Rpe_datum_van B8601DT19. ;
       format Neg_einddeclaratie best12. ;
       format Prg_id best12. ;
       format Reg_id best12. ;
       format Reg_nr best12. ;
       format Afl_neg_einddeclaratie best12. ;
       format Def_neg_einddeclaratie best12. ;
       format Cvk_id best12. ;
       format Vpl_volgnummer best12. ;
       format Rpt_nr_oud  ;
       format Per_Deelnemer  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Tra_id)
         then put "," @;
         else put Tra_id @;
       if missing(Volgnummer)
         then put "," @;
         else put Volgnummer @;
       if missing(Ovk_nr)
         then put "," @;
         else do;
                   attrLengte_7575938694744162813=length(Ovk_nr);
                   aantalLF_7575938694744162813 = countc(Ovk_nr,'0A'x);
                   maxPassend_7575938694744162813=20-1-aantalLF_7575938694744162813;
                   if attrLengte_7575938694744162813 > max(maxPassend_7575938694744162813,1000)
                     then passend_7575938694744162813 = substr(Ovk_nr,1,maxPassend_7575938694744162813);
                     else passend_7575938694744162813 = Ovk_nr;
                   passend_7575938694744162813 = tranwrd(passend_7575938694744162813,'9D'x,'D0'x);
                   put passend_7575938694744162813 ~ @;
              end;
       if missing(Rpt_nr)
         then put "," @;
         else put Rpt_nr @;
       if missing(Bgt_cd)
         then put "," @;
         else do;
                   attrLengte_7370879967810917187=length(Bgt_cd);
                   aantalLF_7370879967810917187 = countc(Bgt_cd,'0A'x);
                   maxPassend_7370879967810917187=1-1-aantalLF_7370879967810917187;
                   if attrLengte_7370879967810917187 > max(maxPassend_7370879967810917187,1000)
                     then passend_7370879967810917187 = substr(Bgt_cd,1,maxPassend_7370879967810917187);
                     else passend_7370879967810917187 = Bgt_cd;
                   passend_7370879967810917187 = tranwrd(passend_7370879967810917187,'9D'x,'D0'x);
                   put passend_7370879967810917187 ~ @;
              end;
       if missing(Verleend)
         then put "," @;
         else put Verleend @;
       if missing(Ingetrokken)
         then put "," @;
         else put Ingetrokken @;
       if missing(Gedeclareerd)
         then put "," @;
         else put Gedeclareerd @;
       if missing(Betaald)
         then put "," @;
         else put Betaald @;
       if missing(Vastgesteld)
         then put "," @;
         else put Vastgesteld @;
       if missing(Openstaand)
         then put "," @;
         else put Openstaand @;
       if missing(Opeisbaar)
         then put "," @;
         else put Opeisbaar @;
       if missing(Def_verleend)
         then put "," @;
         else put Def_verleend @;
       if missing(Def_ingetrokken)
         then put "," @;
         else put Def_ingetrokken @;
       if missing(Def_gedeclareerd)
         then put "," @;
         else put Def_gedeclareerd @;
       if missing(Def_openstaand)
         then put "," @;
         else put Def_openstaand @;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Rpe_datum_van)
         then put "," @;
         else put Rpe_datum_van @;
       if missing(Neg_einddeclaratie)
         then put "," @;
         else put Neg_einddeclaratie @;
       if missing(Prg_id)
         then put "," @;
         else put Prg_id @;
       if missing(Reg_id)
         then put "," @;
         else put Reg_id @;
       if missing(Reg_nr)
         then put "," @;
         else put Reg_nr @;
       if missing(Afl_neg_einddeclaratie)
         then put "," @;
         else put Afl_neg_einddeclaratie @;
       if missing(Def_neg_einddeclaratie)
         then put "," @;
         else put Def_neg_einddeclaratie @;
       if missing(Cvk_id)
         then put "," @;
         else put Cvk_id @;
       if missing(Vpl_volgnummer)
         then put "," @;
         else put Vpl_volgnummer @;
       if missing(Rpt_nr_oud)
         then put "," @;
         else do;
                   attrLengte_6398700462504815438=length(Rpt_nr_oud);
                   aantalLF_6398700462504815438 = countc(Rpt_nr_oud,'0A'x);
                   maxPassend_6398700462504815438=20-1-aantalLF_6398700462504815438;
                   if attrLengte_6398700462504815438 > max(maxPassend_6398700462504815438,1000)
                     then passend_6398700462504815438 = substr(Rpt_nr_oud,1,maxPassend_6398700462504815438);
                     else passend_6398700462504815438 = Rpt_nr_oud;
                   passend_6398700462504815438 = tranwrd(passend_6398700462504815438,'9D'x,'D0'x);
                   put passend_6398700462504815438 ~ @;
              end;
       if missing(Per_Deelnemer)
         then put "," @;
         else do;
                   attrLengte_281267618279651540=length(Per_Deelnemer);
                   aantalLF_281267618279651540 = countc(Per_Deelnemer,'0A'x);
                   maxPassend_281267618279651540=1-1-aantalLF_281267618279651540;
                   if attrLengte_281267618279651540 > max(maxPassend_281267618279651540,1000)
                     then passend_281267618279651540 = substr(Per_Deelnemer,1,maxPassend_281267618279651540);
                     else passend_281267618279651540 = Per_Deelnemer;
                   passend_281267618279651540 = tranwrd(passend_281267618279651540,'9D'x,'D0'x);
                   put passend_281267618279651540 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_DAM_DOSSIER_IN_GROEP AS
   SELECT t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Ddg_id,
          t1.Dds_id,
          t1.Dos_id,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user
     FROM DATAQASG.DAM_DOSSIER_IN_GROEP_TCMG t1;
QUIT;

data MIGRATIE.BAS_DAM_DOSSIER_IN_GROEP;
  set MIGRATIE.BAS_DAM_DOSSIER_IN_GROEP;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_DAM_DOSSIER_IN_GROEP.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Ddg_id" 
       ','
          "Dds_id" 
       ','
          "Dos_id" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_DAM_DOSSIER_IN_GROEP   end=EFIEOD; 
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Ddg_id best12. ;
       format Dds_id best12. ;
       format Dos_id best12. ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Ddg_id)
         then put "," @;
         else put Ddg_id @;
       if missing(Dds_id)
         then put "," @;
         else put Dds_id @;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_DAM_DOSSIER_NOTITIE AS
   SELECT t1.Afgehandeld,
          t1.Bezoeknr,
          t1.Cor_id_no,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Dos_id,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Notitie,
          t1.Notitietype_naam,
          t1.Rel_id
     FROM DATAQASG.DAM_DOSSIER_NOTITIE_TCMG t1;
QUIT;

data MIGRATIE.BAS_DAM_DOSSIER_NOTITIE;
  set MIGRATIE.BAS_DAM_DOSSIER_NOTITIE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_DAM_DOSSIER_NOTITIE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Afgehandeld" 
       ','
          "Bezoeknr" 
       ','
          "Cor_id_no" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Dos_id" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Notitie" 
       ','
          "Notitietype_naam" 
       ','
          "Rel_id" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_DAM_DOSSIER_NOTITIE   end=EFIEOD; 
       format Afgehandeld  ;
       format Bezoeknr best12. ;
       format Cor_id_no best12. ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Dos_id best12. ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Notitie  ;
       format Notitietype_naam  ;
       format Rel_id best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Afgehandeld)
         then put "," @;
         else do;
                   attrLengte_7804948874982929418=length(Afgehandeld);
                   aantalLF_7804948874982929418 = countc(Afgehandeld,'0A'x);
                   maxPassend_7804948874982929418=1-1-aantalLF_7804948874982929418;
                   if attrLengte_7804948874982929418 > max(maxPassend_7804948874982929418,1000)
                     then passend_7804948874982929418 = substr(Afgehandeld,1,maxPassend_7804948874982929418);
                     else passend_7804948874982929418 = Afgehandeld;
                   passend_7804948874982929418 = tranwrd(passend_7804948874982929418,'9D'x,'D0'x);
                   put passend_7804948874982929418 ~ @;
              end;
       if missing(Bezoeknr)
         then put "," @;
         else put Bezoeknr @;
       if missing(Cor_id_no)
         then put "," @;
         else put Cor_id_no @;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Notitie)
         then put "," @;
         else do;
                   attrLengte_1560041029703835131=length(Notitie);
                   aantalLF_1560041029703835131 = countc(Notitie,'0A'x);
                   maxPassend_1560041029703835131=2048-1-aantalLF_1560041029703835131;
                   if attrLengte_1560041029703835131 > max(maxPassend_1560041029703835131,1000)
                     then passend_1560041029703835131 = substr(Notitie,1,maxPassend_1560041029703835131);
                     else passend_1560041029703835131 = Notitie;
                   passend_1560041029703835131 = tranwrd(passend_1560041029703835131,'9D'x,'D0'x);
                   put passend_1560041029703835131 ~ @;
              end;
       if missing(Notitietype_naam)
         then put "," @;
         else do;
                   attrLengte_472120469883937888=length(Notitietype_naam);
                   aantalLF_472120469883937888 = countc(Notitietype_naam,'0A'x);
                   maxPassend_472120469883937888=50-1-aantalLF_472120469883937888;
                   if attrLengte_472120469883937888 > max(maxPassend_472120469883937888,1000)
                     then passend_472120469883937888 = substr(Notitietype_naam,1,maxPassend_472120469883937888);
                     else passend_472120469883937888 = Notitietype_naam;
                   passend_472120469883937888 = tranwrd(passend_472120469883937888,'9D'x,'D0'x);
                   put passend_472120469883937888 ~ @;
              end;
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_DAM_DOSSIER AS
   SELECT t1.Aangevraagd_bedrag,
          t1.Aantal_dagenopschorting,
          t1.Aantal_ICT_projecten,
          t1.Aantal_SO_projecten,
          t1.Aantal_SO_werknemers,
          t1.Aantal_SO_zlf,
          t1.Aanvang_dat FORMAT=B8601DT19. AS Aanvang_dat,
          t1.Aanvraag_volgnr,
          t1.Aanvraagsoort,
          t1.Acceptatie_sts,
          t1.Afdrachtsvermindering,
          t1.Afhandeldatum FORMAT=B8601DT19. AS Afhandeldatum,
          t1.Afhandelwijze,
          t1.Afl_neg_einddeclaratie,
          t1.Akkoord_verlenen,
          t1.aut_verwerkt_imp,
          t1.Auth_id_indiener,
          t1.Auth_id_ondertekenaar,
          t1.Auth_prg_id,
          t1.BAS_advies,
          t1.Batchstatuscert,
          t1.Batchstatusref,
          t1.Batchstatusstat,
          t1.Behandelingsronde,
          t1.Beoordelingswijze,
          t1.Berekende_rente,
          t1.Beslissing_cd,
          t1.Checksum,
          t1.Classificatie,
          t1.Cluster_nr,
          t1.Controle_activiteit,
          t1.Commercieel_perspectief,
          t1.Contractjaar,
          t1.Conversiedossier,
          t1.Correspondentie_via_email,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Jaardossier_WBSO,
          t1.Datum_in FORMAT=B8601DT19. AS Datum_in,
          t1.Datum_renteberekening FORMAT=B8601DT19. AS Datum_renteberekening,
          t1.Datum_status FORMAT=B8601DT19. AS Datum_status,
          t1.Volgnr_diskette,
          t1.Volgnr_diskette_na_import,
          t1.Dos_cd,
          t1.Dos_id,
          t1.Dos_id_aanvulling,
          t1.Dosprio,
          t1.ED_Aanvraag_id,
          t1.Eerste_jr_aflossing,
          t1.Eind_dat FORMAT=B8601DT19. AS Eind_dat,
          t1.Eindmaand,
          t1.Extern_aanvraag_id,
          t1.Extern_dossier_id,
          t1.Extrene_bron_cd,
          t1.Gecommitteerd_zegge,
          t1.Gem_uurloon,
          t1.Hand_bewerkt_imp,
          t1.Handtekening_ok,
          t1.Hoofd_dos_id,
          t1.Id_van_de_doos,
          t1.Id_van_de_doos_na_de_import,
          t1.Importlijst,
          t1.Indienings_dat FORMAT=B8601DT19. AS Indienings_dat,
          t1.Indienings_tijd FORMAT=B8601DT19. AS Indienings_tijd,
          t1.Indienkanaal,
          t1.Ingezien,
          t1.Inkoopcat_cd,
          t1.Inleen_binnen_Fiscale_eenheid,
          t1.Meldingnummer_IRWA,
          t1.Jaar,
          t1.Jaardossier_bron_dos_id,
          t1.Jaardossier_dos_id,
          t1.Korte_titel,
          t1.Krat_nr,
          t1.Laatste_jr_aflossing,
          t1.Laatste_pcs_id,
          t1.Landnaam,
          t1.'LB-nummer_komt_overeen'n AS LB_nummer_komt_overeen,
          t1.Machtiging_JN,
          t1.Mdw_cd,
          t1.Mentorterugkoppeling,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_dat_vst FORMAT=B8601DT19. AS Mutatie_dat_vst,
          t1.Mutatie_user,
          t1.Mutatie_user_vst,
          t1.Naar_batchrun,
          t1.Neg_einddeclaratie,
          t1.Notities,
          t1.Octrooien,
          t1.Offertebedrag,
          t1.Cerhoud_id_Ondertekenaar,
          t1.Ontvangstdatum FORMAT=B8601DT19. AS Ontvangstdatum,
          t1.Oorspr_einddatum FORMAT=B8601DT19. AS Oorspr_einddatum,
          t1.Overige_subsidie,
          t1.Opdrachtvorm_cd,
          t1.Perc_verrekenen,
          t1.Periode_nr,
          t1.Prioriteit,
          t1.Prioriteitsdatum FORMAT=B8601DT19. AS Prioriteitsdatum,
          t1.Projectomschrijving,
          t1.Ranking,
          t1.RDA_Afhandeling_forfaitair,
          t1.RDA_aangevraagd,
          t1.Referentie,
          t1.Reg_id,
          t1.Reg_nr,
          t1.Rel_id_Aanvrager,
          t1.Rente_perc,
          t1.Samenwerkingsverband1,
          t1.Samenwerkingsverband2,
          t1.SO_loon,
          t1.Begrote_SO_loonsom,
          t1.SO_uren,
          t1.Startmaand,
          t1.Statuscode,
          t1.Status_cert,
          t1.Status_oud,
          t1.status_SO_uurloon,
          t1.Status_TT,
          t1.Statusgroep,
          t1.Statustermijn FORMAT=B8601DT19. AS Statustermijn,
          t1.'Status_E-Diensten'n AS Status_E_Diensten,
          t1.'Status_E-Loket'n AS Status_E_Loket,
          t1.Technisch_succes,
          t1.Technisch_Cor_id,
          t1.Titel,
          t1.'Afgelost_op_onvoorw._hoofdsom'n AS Afgelost_op_onvoorw_hoofdsom,
          t1.'Afgelost_op_onvoorw._rente'n AS Afgelost_op_onvoorw_rente,
          t1.Totaal_afgelost_op_hoofdsom,
          t1.Totaal_ontvangen_rente,
          t1.Totaal_bijgeschreven_rente,
          t1.Direct_opeisbare_vordering,
          t1.Direct_opeisbare_hoofdsom,
          t1.Direct_opeisbare_rente,
          t1.Totaal_gecommitteerd_bedrag,
          t1.Zegge_Totaal_gecommitteerd,
          t1.Totaal_gedeclareerd_bedrag,
          t1.Totaal_geschoonde_kosten,
          t1.Totale_hoofdsom,
          t1.Totaal_ingetrokken_bedrag,
          t1.'Kwijtsch._onvoorw._hoofdsom'n AS Kwijtsch_onvoorw_hoofdsom,
          t1.'Kwijtsch._onvoorw._rente'n AS Kwijtsch_onvoorw_rente,
          t1.'Kwijtsch._direct_opeisbaar'n AS Kwijtsch_direct_opeisbaar,
          t1.'Kwijtsch._voorw._hoofdsom'n AS Kwijtsch_voorw_hoofdsom,
          t1.'Kwijtsch.-voorw._rente'n AS Kwijtsch_voorw_rente,
          t1.Totaal_kwijtgescholden_bedrag,
          t1.Totaal_openstaand_bedrag,
          t1.Direct_opeisbaar_gesteld,
          t1.Totaal_uitbetaald,
          t1.Totaal_verleend_bedrag,
          t1.'Uitlening_binnen_Fisc._eenheid'n AS Uitlening_binnen_Fisc_eenheid,
          t1.Uurloon_jaar,
          t1.Vaststellen_batch,
          t1.Vergoedingsperc,
          t1.Volgnr_LB,
          t1.Voorlopig_gecommitteerd,
          t1.Voorlopig_gedeclareerd,
          t1.Vorig_aanvraag_bedrijf_nr,
          t1.Vorig_aanvraagjaar,
          t1.Vorig_aanvraagnummer,
          t1.Vorie_aanvraagperiode,
          t1.Vorig_aanvraag_volgnr,
          t1.Vaststelling_conform_aanvraag,
          t1.VV_Aanvraagnummer,
          t1.Wel_akkoord_niet_verlenen,
          t1.Aangeboden_aan_ZER
     FROM DATAQASG.DAM_DOSSIER_TCMG t1;
QUIT;

data MIGRATIE.BAS_DAM_DOSSIER;
  set MIGRATIE.BAS_DAM_DOSSIER;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_DAM_DOSSIER.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Aangevraagd_bedrag" 
       ','
          "Aantal_dagenopschorting" 
       ','
          "Aantal_ICT_projecten" 
       ','
          "Aantal_SO_projecten" 
       ','
          "Aantal_SO_werknemers" 
       ','
          "Aantal_SO_zlf" 
       ','
          "Aanvang_dat" 
       ','
          "Aanvraag_volgnr" 
       ','
          "Aanvraagsoort" 
       ','
          "Acceptatie_sts" 
       ','
          "Afdrachtsvermindering" 
       ','
          "Afhandeldatum" 
       ','
          "Afhandelwijze" 
       ','
          "Afl_neg_einddeclaratie" 
       ','
          "Akkoord_verlenen" 
       ','
          "aut_verwerkt_imp" 
       ','
          "Auth_id_indiener" 
       ','
          "Auth_id_ondertekenaar" 
       ','
          "Auth_prg_id" 
       ','
          "BAS_advies" 
       ','
          "Batchstatuscert" 
       ','
          "Batchstatusref" 
       ','
          "Batchstatusstat" 
       ','
          "Behandelingsronde" 
       ','
          "Beoordelingswijze" 
       ','
          "Berekende_rente" 
       ','
          "Beslissing_cd" 
       ','
          "Checksum" 
       ','
          "Classificatie" 
       ','
          "Cluster_nr" 
       ','
          "Controle_activiteit" 
       ','
          "Commercieel_perspectief" 
       ','
          "Contractjaar" 
       ','
          "Conversiedossier" 
       ','
          "Correspondentie_via_email" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Jaardossier_WBSO" 
       ','
          "Datum_in" 
       ','
          "Datum_renteberekening" 
       ','
          "Datum_status" 
       ','
          "Volgnr_diskette" 
       ','
          "Volgnr_diskette_na_import" 
       ','
          "Dos_cd" 
       ','
          "Dos_id" 
       ','
          "Dos_id_aanvulling" 
       ','
          "Dosprio" 
       ','
          "ED_Aanvraag_id" 
       ','
          "Eerste_jr_aflossing" 
       ','
          "Eind_dat" 
       ','
          "Eindmaand" 
       ','
          "Extern_aanvraag_id" 
       ','
          "Extern_dossier_id" 
       ','
          "Extrene_bron_cd" 
       ','
          "Gecommitteerd_zegge" 
       ','
          "Gem_uurloon" 
       ','
          "Hand_bewerkt_imp" 
       ','
          "Handtekening_ok" 
       ','
          "Hoofd_dos_id" 
       ','
          "Id_van_de_doos" 
       ','
          "Id_van_de_doos_na_de_import" 
       ','
          "Importlijst" 
       ','
          "Indienings_dat" 
       ','
          "Indienings_tijd" 
       ','
          "Indienkanaal" 
       ','
          "Ingezien" 
       ','
          "Inkoopcat_cd" 
       ','
          "Inleen_binnen_Fiscale_eenheid" 
       ','
          "Meldingnummer_IRWA" 
       ','
          "Jaar" 
       ','
          "Jaardossier_bron_dos_id" 
       ','
          "Jaardossier_dos_id" 
       ','
          "Korte_titel" 
       ','
          "Krat_nr" 
       ','
          "Laatste_jr_aflossing" 
       ','
          "Laatste_pcs_id" 
       ','
          "Landnaam" 
       ','
          "LB_nummer_komt_overeen" 
       ','
          "Machtiging_JN" 
       ','
          "Mdw_cd" 
       ','
          "Mentorterugkoppeling" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_dat_vst" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_user_vst" 
       ','
          "Naar_batchrun" 
       ','
          "Neg_einddeclaratie" 
       ','
          "Notities" 
       ','
          "Octrooien" 
       ','
          "Offertebedrag" 
       ','
          "Cerhoud_id_Ondertekenaar" 
       ','
          "Ontvangstdatum" 
       ','
          "Oorspr_einddatum" 
       ','
          "Overige_subsidie" 
       ','
          "Opdrachtvorm_cd" 
       ','
          "Perc_verrekenen" 
       ','
          "Periode_nr" 
       ','
          "Prioriteit" 
       ','
          "Prioriteitsdatum" 
       ','
          "Projectomschrijving" 
       ','
          "Ranking" 
       ','
          "RDA_Afhandeling_forfaitair" 
       ','
          "RDA_aangevraagd" 
       ','
          "Referentie" 
       ','
          "Reg_id" 
       ','
          "Reg_nr" 
       ','
          "Rel_id_Aanvrager" 
       ','
          "Rente_perc" 
       ','
          "Samenwerkingsverband1" 
       ','
          "Samenwerkingsverband2" 
       ','
          "SO_loon" 
       ','
          "Begrote_SO_loonsom" 
       ','
          "SO_uren" 
       ','
          "Startmaand" 
       ','
          "Statuscode" 
       ','
          "Status_cert" 
       ','
          "Status_oud" 
       ','
          "status_SO_uurloon" 
       ','
          "Status_TT" 
       ','
          "Statusgroep" 
       ','
          "Statustermijn" 
       ','
          "Status_E_Diensten" 
       ','
          "Status_E_Loket" 
       ','
          "Technisch_succes" 
       ','
          "Technisch_Cor_id" 
       ','
          "Titel" 
       ','
          "Afgelost_op_onvoorw_hoofdsom" 
       ','
          "Afgelost_op_onvoorw_rente" 
       ','
          "Totaal_afgelost_op_hoofdsom" 
       ','
          "Totaal_ontvangen_rente" 
       ','
          "Totaal_bijgeschreven_rente" 
       ','
          "Direct_opeisbare_vordering" 
       ','
          "Direct_opeisbare_hoofdsom" 
       ','
          "Direct_opeisbare_rente" 
       ','
          "Totaal_gecommitteerd_bedrag" 
       ','
          "Zegge_Totaal_gecommitteerd" 
       ','
          "Totaal_gedeclareerd_bedrag" 
       ','
          "Totaal_geschoonde_kosten" 
       ','
          "Totale_hoofdsom" 
       ','
          "Totaal_ingetrokken_bedrag" 
       ','
          "Kwijtsch_onvoorw_hoofdsom" 
       ','
          "Kwijtsch_onvoorw_rente" 
       ','
          "Kwijtsch_direct_opeisbaar" 
       ','
          "Kwijtsch_voorw_hoofdsom" 
       ','
          "Kwijtsch_voorw_rente" 
       ','
          "Totaal_kwijtgescholden_bedrag" 
       ','
          "Totaal_openstaand_bedrag" 
       ','
          "Direct_opeisbaar_gesteld" 
       ','
          "Totaal_uitbetaald" 
       ','
          "Totaal_verleend_bedrag" 
       ','
          "Uitlening_binnen_Fisc_eenheid" 
       ','
          "Uurloon_jaar" 
       ','
          "Vaststellen_batch" 
       ','
          "Vergoedingsperc" 
       ','
          "Volgnr_LB" 
       ','
          "Voorlopig_gecommitteerd" 
       ','
          "Voorlopig_gedeclareerd" 
       ','
          "Vorig_aanvraag_bedrijf_nr" 
       ','
          "Vorig_aanvraagjaar" 
       ','
          "Vorig_aanvraagnummer" 
       ','
          "Vorie_aanvraagperiode" 
       ','
          "Vorig_aanvraag_volgnr" 
       ','
          "Vaststelling_conform_aanvraag" 
       ','
          "VV_Aanvraagnummer" 
       ','
          "Wel_akkoord_niet_verlenen" 
       ','
          "Aangeboden_aan_ZER" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_DAM_DOSSIER   end=EFIEOD; 
       format Aangevraagd_bedrag best12. ;
       format Aantal_dagenopschorting best12. ;
       format Aantal_ICT_projecten best12. ;
       format Aantal_SO_projecten best12. ;
       format Aantal_SO_werknemers best12. ;
       format Aantal_SO_zlf best12. ;
       format Aanvang_dat B8601DT19. ;
       format Aanvraag_volgnr best12. ;
       format Aanvraagsoort  ;
       format Acceptatie_sts  ;
       format Afdrachtsvermindering  ;
       format Afhandeldatum B8601DT19. ;
       format Afhandelwijze  ;
       format Afl_neg_einddeclaratie best12. ;
       format Akkoord_verlenen  ;
       format aut_verwerkt_imp  ;
       format Auth_id_indiener best12. ;
       format Auth_id_ondertekenaar best12. ;
       format Auth_prg_id best12. ;
       format BAS_advies  ;
       format Batchstatuscert  ;
       format Batchstatusref  ;
       format Batchstatusstat  ;
       format Behandelingsronde best12. ;
       format Beoordelingswijze  ;
       format Berekende_rente best12. ;
       format Beslissing_cd  ;
       format Checksum best12. ;
       format Classificatie  ;
       format Cluster_nr best12. ;
       format Controle_activiteit  ;
       format Commercieel_perspectief  ;
       format Contractjaar best12. ;
       format Conversiedossier  ;
       format Correspondentie_via_email  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Jaardossier_WBSO  ;
       format Datum_in B8601DT19. ;
       format Datum_renteberekening B8601DT19. ;
       format Datum_status B8601DT19. ;
       format Volgnr_diskette best12. ;
       format Volgnr_diskette_na_import best12. ;
       format Dos_cd  ;
       format Dos_id best12. ;
       format Dos_id_aanvulling best12. ;
       format Dosprio best12. ;
       format ED_Aanvraag_id best12. ;
       format Eerste_jr_aflossing best12. ;
       format Eind_dat B8601DT19. ;
       format Eindmaand best12. ;
       format Extern_aanvraag_id best12. ;
       format Extern_dossier_id best12. ;
       format Extrene_bron_cd  ;
       format Gecommitteerd_zegge  ;
       format Gem_uurloon best12. ;
       format Hand_bewerkt_imp  ;
       format Handtekening_ok  ;
       format Hoofd_dos_id best12. ;
       format Id_van_de_doos best12. ;
       format Id_van_de_doos_na_de_import best12. ;
       format Importlijst  ;
       format Indienings_dat B8601DT19. ;
       format Indienings_tijd B8601DT19. ;
       format Indienkanaal  ;
       format Ingezien  ;
       format Inkoopcat_cd  ;
       format Inleen_binnen_Fiscale_eenheid  ;
       format Meldingnummer_IRWA  ;
       format Jaar best12. ;
       format Jaardossier_bron_dos_id best12. ;
       format Jaardossier_dos_id best12. ;
       format Korte_titel  ;
       format Krat_nr best12. ;
       format Laatste_jr_aflossing best12. ;
       format Laatste_pcs_id best12. ;
       format Landnaam  ;
       format LB_nummer_komt_overeen  ;
       format Machtiging_JN  ;
       format Mdw_cd  ;
       format Mentorterugkoppeling  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_dat_vst B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_user_vst  ;
       format Naar_batchrun best12. ;
       format Neg_einddeclaratie best12. ;
       format Notities  ;
       format Octrooien best12. ;
       format Offertebedrag best12. ;
       format Cerhoud_id_Ondertekenaar best12. ;
       format Ontvangstdatum B8601DT19. ;
       format Oorspr_einddatum B8601DT19. ;
       format Overige_subsidie  ;
       format Opdrachtvorm_cd  ;
       format Perc_verrekenen best12. ;
       format Periode_nr best12. ;
       format Prioriteit best12. ;
       format Prioriteitsdatum B8601DT19. ;
       format Projectomschrijving  ;
       format Ranking best12. ;
       format RDA_Afhandeling_forfaitair  ;
       format RDA_aangevraagd  ;
       format Referentie  ;
       format Reg_id best12. ;
       format Reg_nr best12. ;
       format Rel_id_Aanvrager best12. ;
       format Rente_perc best12. ;
       format Samenwerkingsverband1  ;
       format Samenwerkingsverband2  ;
       format SO_loon best12. ;
       format Begrote_SO_loonsom best12. ;
       format SO_uren best12. ;
       format Startmaand best12. ;
       format Statuscode  ;
       format Status_cert  ;
       format Status_oud  ;
       format status_SO_uurloon  ;
       format Status_TT  ;
       format Statusgroep  ;
       format Statustermijn B8601DT19. ;
       format Status_E_Diensten  ;
       format Status_E_Loket  ;
       format Technisch_succes best12. ;
       format Technisch_Cor_id best12. ;
       format Titel  ;
       format Afgelost_op_onvoorw_hoofdsom best12. ;
       format Afgelost_op_onvoorw_rente best12. ;
       format Totaal_afgelost_op_hoofdsom best12. ;
       format Totaal_ontvangen_rente best12. ;
       format Totaal_bijgeschreven_rente best12. ;
       format Direct_opeisbare_vordering best12. ;
       format Direct_opeisbare_hoofdsom best12. ;
       format Direct_opeisbare_rente best12. ;
       format Totaal_gecommitteerd_bedrag best12. ;
       format Zegge_Totaal_gecommitteerd  ;
       format Totaal_gedeclareerd_bedrag best12. ;
       format Totaal_geschoonde_kosten best12. ;
       format Totale_hoofdsom best12. ;
       format Totaal_ingetrokken_bedrag best12. ;
       format Kwijtsch_onvoorw_hoofdsom best12. ;
       format Kwijtsch_onvoorw_rente best12. ;
       format Kwijtsch_direct_opeisbaar best12. ;
       format Kwijtsch_voorw_hoofdsom best12. ;
       format Kwijtsch_voorw_rente best12. ;
       format Totaal_kwijtgescholden_bedrag best12. ;
       format Totaal_openstaand_bedrag best12. ;
       format Direct_opeisbaar_gesteld best12. ;
       format Totaal_uitbetaald best12. ;
       format Totaal_verleend_bedrag best12. ;
       format Uitlening_binnen_Fisc_eenheid  ;
       format Uurloon_jaar best12. ;
       format Vaststellen_batch  ;
       format Vergoedingsperc best12. ;
       format Volgnr_LB best12. ;
       format Voorlopig_gecommitteerd best12. ;
       format Voorlopig_gedeclareerd best12. ;
       format Vorig_aanvraag_bedrijf_nr best12. ;
       format Vorig_aanvraagjaar best12. ;
       format Vorig_aanvraagnummer  ;
       format Vorie_aanvraagperiode best12. ;
       format Vorig_aanvraag_volgnr best12. ;
       format Vaststelling_conform_aanvraag  ;
       format VV_Aanvraagnummer  ;
       format Wel_akkoord_niet_verlenen  ;
       format Aangeboden_aan_ZER  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Aangevraagd_bedrag)
         then put "," @;
         else put Aangevraagd_bedrag @;
       if missing(Aantal_dagenopschorting)
         then put "," @;
         else put Aantal_dagenopschorting @;
       if missing(Aantal_ICT_projecten)
         then put "," @;
         else put Aantal_ICT_projecten @;
       if missing(Aantal_SO_projecten)
         then put "," @;
         else put Aantal_SO_projecten @;
       if missing(Aantal_SO_werknemers)
         then put "," @;
         else put Aantal_SO_werknemers @;
       if missing(Aantal_SO_zlf)
         then put "," @;
         else put Aantal_SO_zlf @;
       if missing(Aanvang_dat)
         then put "," @;
         else put Aanvang_dat @;
       if missing(Aanvraag_volgnr)
         then put "," @;
         else put Aanvraag_volgnr @;
       if missing(Aanvraagsoort)
         then put "," @;
         else do;
                   attrLengte_1808858472387685737=length(Aanvraagsoort);
                   aantalLF_1808858472387685737 = countc(Aanvraagsoort,'0A'x);
                   maxPassend_1808858472387685737=10-1-aantalLF_1808858472387685737;
                   if attrLengte_1808858472387685737 > max(maxPassend_1808858472387685737,1000)
                     then passend_1808858472387685737 = substr(Aanvraagsoort,1,maxPassend_1808858472387685737);
                     else passend_1808858472387685737 = Aanvraagsoort;
                   passend_1808858472387685737 = tranwrd(passend_1808858472387685737,'9D'x,'D0'x);
                   put passend_1808858472387685737 ~ @;
              end;
       if missing(Acceptatie_sts)
         then put "," @;
         else do;
                   attrLengte_6394433184754446902=length(Acceptatie_sts);
                   aantalLF_6394433184754446902 = countc(Acceptatie_sts,'0A'x);
                   maxPassend_6394433184754446902=1-1-aantalLF_6394433184754446902;
                   if attrLengte_6394433184754446902 > max(maxPassend_6394433184754446902,1000)
                     then passend_6394433184754446902 = substr(Acceptatie_sts,1,maxPassend_6394433184754446902);
                     else passend_6394433184754446902 = Acceptatie_sts;
                   passend_6394433184754446902 = tranwrd(passend_6394433184754446902,'9D'x,'D0'x);
                   put passend_6394433184754446902 ~ @;
              end;
       if missing(Afdrachtsvermindering)
         then put "," @;
         else do;
                   attrLengte_4671905258138635791=length(Afdrachtsvermindering);
                   aantalLF_4671905258138635791 = countc(Afdrachtsvermindering,'0A'x);
                   maxPassend_4671905258138635791=1-1-aantalLF_4671905258138635791;
                   if attrLengte_4671905258138635791 > max(maxPassend_4671905258138635791,1000)
                     then passend_4671905258138635791 = substr(Afdrachtsvermindering,1,maxPassend_4671905258138635791);
                     else passend_4671905258138635791 = Afdrachtsvermindering;
                   passend_4671905258138635791 = tranwrd(passend_4671905258138635791,'9D'x,'D0'x);
                   put passend_4671905258138635791 ~ @;
              end;
       if missing(Afhandeldatum)
         then put "," @;
         else put Afhandeldatum @;
       if missing(Afhandelwijze)
         then put "," @;
         else do;
                   attrLengte_311625208554520659=length(Afhandelwijze);
                   aantalLF_311625208554520659 = countc(Afhandelwijze,'0A'x);
                   maxPassend_311625208554520659=512-1-aantalLF_311625208554520659;
                   if attrLengte_311625208554520659 > max(maxPassend_311625208554520659,1000)
                     then passend_311625208554520659 = substr(Afhandelwijze,1,maxPassend_311625208554520659);
                     else passend_311625208554520659 = Afhandelwijze;
                   passend_311625208554520659 = tranwrd(passend_311625208554520659,'9D'x,'D0'x);
                   put passend_311625208554520659 ~ @;
              end;
       if missing(Afl_neg_einddeclaratie)
         then put "," @;
         else put Afl_neg_einddeclaratie @;
       if missing(Akkoord_verlenen)
         then put "," @;
         else do;
                   attrLengte_6168422449108145413=length(Akkoord_verlenen);
                   aantalLF_6168422449108145413 = countc(Akkoord_verlenen,'0A'x);
                   maxPassend_6168422449108145413=1-1-aantalLF_6168422449108145413;
                   if attrLengte_6168422449108145413 > max(maxPassend_6168422449108145413,1000)
                     then passend_6168422449108145413 = substr(Akkoord_verlenen,1,maxPassend_6168422449108145413);
                     else passend_6168422449108145413 = Akkoord_verlenen;
                   passend_6168422449108145413 = tranwrd(passend_6168422449108145413,'9D'x,'D0'x);
                   put passend_6168422449108145413 ~ @;
              end;
       if missing(aut_verwerkt_imp)
         then put "," @;
         else do;
                   attrLengte_6631081386547525672=length(aut_verwerkt_imp);
                   aantalLF_6631081386547525672 = countc(aut_verwerkt_imp,'0A'x);
                   maxPassend_6631081386547525672=1-1-aantalLF_6631081386547525672;
                   if attrLengte_6631081386547525672 > max(maxPassend_6631081386547525672,1000)
                     then passend_6631081386547525672 = substr(aut_verwerkt_imp,1,maxPassend_6631081386547525672);
                     else passend_6631081386547525672 = aut_verwerkt_imp;
                   passend_6631081386547525672 = tranwrd(passend_6631081386547525672,'9D'x,'D0'x);
                   put passend_6631081386547525672 ~ @;
              end;
       if missing(Auth_id_indiener)
         then put "," @;
         else put Auth_id_indiener @;
       if missing(Auth_id_ondertekenaar)
         then put "," @;
         else put Auth_id_ondertekenaar @;
       if missing(Auth_prg_id)
         then put "," @;
         else put Auth_prg_id @;
       if missing(BAS_advies)
         then put "," @;
         else do;
                   attrLengte_4281244775925214329=length(BAS_advies);
                   aantalLF_4281244775925214329 = countc(BAS_advies,'0A'x);
                   maxPassend_4281244775925214329=512-1-aantalLF_4281244775925214329;
                   if attrLengte_4281244775925214329 > max(maxPassend_4281244775925214329,1000)
                     then passend_4281244775925214329 = substr(BAS_advies,1,maxPassend_4281244775925214329);
                     else passend_4281244775925214329 = BAS_advies;
                   passend_4281244775925214329 = tranwrd(passend_4281244775925214329,'9D'x,'D0'x);
                   put passend_4281244775925214329 ~ @;
              end;
       if missing(Batchstatuscert)
         then put "," @;
         else do;
                   attrLengte_6810019192039434889=length(Batchstatuscert);
                   aantalLF_6810019192039434889 = countc(Batchstatuscert,'0A'x);
                   maxPassend_6810019192039434889=1-1-aantalLF_6810019192039434889;
                   if attrLengte_6810019192039434889 > max(maxPassend_6810019192039434889,1000)
                     then passend_6810019192039434889 = substr(Batchstatuscert,1,maxPassend_6810019192039434889);
                     else passend_6810019192039434889 = Batchstatuscert;
                   passend_6810019192039434889 = tranwrd(passend_6810019192039434889,'9D'x,'D0'x);
                   put passend_6810019192039434889 ~ @;
              end;
       if missing(Batchstatusref)
         then put "," @;
         else do;
                   attrLengte_3025511164545417087=length(Batchstatusref);
                   aantalLF_3025511164545417087 = countc(Batchstatusref,'0A'x);
                   maxPassend_3025511164545417087=1-1-aantalLF_3025511164545417087;
                   if attrLengte_3025511164545417087 > max(maxPassend_3025511164545417087,1000)
                     then passend_3025511164545417087 = substr(Batchstatusref,1,maxPassend_3025511164545417087);
                     else passend_3025511164545417087 = Batchstatusref;
                   passend_3025511164545417087 = tranwrd(passend_3025511164545417087,'9D'x,'D0'x);
                   put passend_3025511164545417087 ~ @;
              end;
       if missing(Batchstatusstat)
         then put "," @;
         else do;
                   attrLengte_1601628535260930075=length(Batchstatusstat);
                   aantalLF_1601628535260930075 = countc(Batchstatusstat,'0A'x);
                   maxPassend_1601628535260930075=1-1-aantalLF_1601628535260930075;
                   if attrLengte_1601628535260930075 > max(maxPassend_1601628535260930075,1000)
                     then passend_1601628535260930075 = substr(Batchstatusstat,1,maxPassend_1601628535260930075);
                     else passend_1601628535260930075 = Batchstatusstat;
                   passend_1601628535260930075 = tranwrd(passend_1601628535260930075,'9D'x,'D0'x);
                   put passend_1601628535260930075 ~ @;
              end;
       if missing(Behandelingsronde)
         then put "," @;
         else put Behandelingsronde @;
       if missing(Beoordelingswijze)
         then put "," @;
         else do;
                   attrLengte_7377029703752497073=length(Beoordelingswijze);
                   aantalLF_7377029703752497073 = countc(Beoordelingswijze,'0A'x);
                   maxPassend_7377029703752497073=4-1-aantalLF_7377029703752497073;
                   if attrLengte_7377029703752497073 > max(maxPassend_7377029703752497073,1000)
                     then passend_7377029703752497073 = substr(Beoordelingswijze,1,maxPassend_7377029703752497073);
                     else passend_7377029703752497073 = Beoordelingswijze;
                   passend_7377029703752497073 = tranwrd(passend_7377029703752497073,'9D'x,'D0'x);
                   put passend_7377029703752497073 ~ @;
              end;
       if missing(Berekende_rente)
         then put "," @;
         else put Berekende_rente @;
       if missing(Beslissing_cd)
         then put "," @;
         else do;
                   attrLengte_975931625280418200=length(Beslissing_cd);
                   aantalLF_975931625280418200 = countc(Beslissing_cd,'0A'x);
                   maxPassend_975931625280418200=2-1-aantalLF_975931625280418200;
                   if attrLengte_975931625280418200 > max(maxPassend_975931625280418200,1000)
                     then passend_975931625280418200 = substr(Beslissing_cd,1,maxPassend_975931625280418200);
                     else passend_975931625280418200 = Beslissing_cd;
                   passend_975931625280418200 = tranwrd(passend_975931625280418200,'9D'x,'D0'x);
                   put passend_975931625280418200 ~ @;
              end;
       if missing(Checksum)
         then put "," @;
         else put Checksum @;
       if missing(Classificatie)
         then put "," @;
         else do;
                   attrLengte_7479670163439694801=length(Classificatie);
                   aantalLF_7479670163439694801 = countc(Classificatie,'0A'x);
                   maxPassend_7479670163439694801=10-1-aantalLF_7479670163439694801;
                   if attrLengte_7479670163439694801 > max(maxPassend_7479670163439694801,1000)
                     then passend_7479670163439694801 = substr(Classificatie,1,maxPassend_7479670163439694801);
                     else passend_7479670163439694801 = Classificatie;
                   passend_7479670163439694801 = tranwrd(passend_7479670163439694801,'9D'x,'D0'x);
                   put passend_7479670163439694801 ~ @;
              end;
       if missing(Cluster_nr)
         then put "," @;
         else put Cluster_nr @;
       if missing(Controle_activiteit)
         then put "," @;
         else do;
                   attrLengte_8659873274146383362=length(Controle_activiteit);
                   aantalLF_8659873274146383362 = countc(Controle_activiteit,'0A'x);
                   maxPassend_8659873274146383362=1-1-aantalLF_8659873274146383362;
                   if attrLengte_8659873274146383362 > max(maxPassend_8659873274146383362,1000)
                     then passend_8659873274146383362 = substr(Controle_activiteit,1,maxPassend_8659873274146383362);
                     else passend_8659873274146383362 = Controle_activiteit;
                   passend_8659873274146383362 = tranwrd(passend_8659873274146383362,'9D'x,'D0'x);
                   put passend_8659873274146383362 ~ @;
              end;
       if missing(Commercieel_perspectief)
         then put "," @;
         else do;
                   attrLengte_718663045679180725=length(Commercieel_perspectief);
                   aantalLF_718663045679180725 = countc(Commercieel_perspectief,'0A'x);
                   maxPassend_718663045679180725=1-1-aantalLF_718663045679180725;
                   if attrLengte_718663045679180725 > max(maxPassend_718663045679180725,1000)
                     then passend_718663045679180725 = substr(Commercieel_perspectief,1,maxPassend_718663045679180725);
                     else passend_718663045679180725 = Commercieel_perspectief;
                   passend_718663045679180725 = tranwrd(passend_718663045679180725,'9D'x,'D0'x);
                   put passend_718663045679180725 ~ @;
              end;
       if missing(Contractjaar)
         then put "," @;
         else put Contractjaar @;
       if missing(Conversiedossier)
         then put "," @;
         else do;
                   attrLengte_7366059556598200591=length(Conversiedossier);
                   aantalLF_7366059556598200591 = countc(Conversiedossier,'0A'x);
                   maxPassend_7366059556598200591=1-1-aantalLF_7366059556598200591;
                   if attrLengte_7366059556598200591 > max(maxPassend_7366059556598200591,1000)
                     then passend_7366059556598200591 = substr(Conversiedossier,1,maxPassend_7366059556598200591);
                     else passend_7366059556598200591 = Conversiedossier;
                   passend_7366059556598200591 = tranwrd(passend_7366059556598200591,'9D'x,'D0'x);
                   put passend_7366059556598200591 ~ @;
              end;
       if missing(Correspondentie_via_email)
         then put "," @;
         else do;
                   attrLengte_740551633015528077=length(Correspondentie_via_email);
                   aantalLF_740551633015528077 = countc(Correspondentie_via_email,'0A'x);
                   maxPassend_740551633015528077=1-1-aantalLF_740551633015528077;
                   if attrLengte_740551633015528077 > max(maxPassend_740551633015528077,1000)
                     then passend_740551633015528077 = substr(Correspondentie_via_email,1,maxPassend_740551633015528077);
                     else passend_740551633015528077 = Correspondentie_via_email;
                   passend_740551633015528077 = tranwrd(passend_740551633015528077,'9D'x,'D0'x);
                   put passend_740551633015528077 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Jaardossier_WBSO)
         then put "," @;
         else do;
                   attrLengte_3488531671085302561=length(Jaardossier_WBSO);
                   aantalLF_3488531671085302561 = countc(Jaardossier_WBSO,'0A'x);
                   maxPassend_3488531671085302561=1-1-aantalLF_3488531671085302561;
                   if attrLengte_3488531671085302561 > max(maxPassend_3488531671085302561,1000)
                     then passend_3488531671085302561 = substr(Jaardossier_WBSO,1,maxPassend_3488531671085302561);
                     else passend_3488531671085302561 = Jaardossier_WBSO;
                   passend_3488531671085302561 = tranwrd(passend_3488531671085302561,'9D'x,'D0'x);
                   put passend_3488531671085302561 ~ @;
              end;
       if missing(Datum_in)
         then put "," @;
         else put Datum_in @;
       if missing(Datum_renteberekening)
         then put "," @;
         else put Datum_renteberekening @;
       if missing(Datum_status)
         then put "," @;
         else put Datum_status @;
       if missing(Volgnr_diskette)
         then put "," @;
         else put Volgnr_diskette @;
       if missing(Volgnr_diskette_na_import)
         then put "," @;
         else put Volgnr_diskette_na_import @;
       if missing(Dos_cd)
         then put "," @;
         else do;
                   attrLengte_673625142560997166=length(Dos_cd);
                   aantalLF_673625142560997166 = countc(Dos_cd,'0A'x);
                   maxPassend_673625142560997166=20-1-aantalLF_673625142560997166;
                   if attrLengte_673625142560997166 > max(maxPassend_673625142560997166,1000)
                     then passend_673625142560997166 = substr(Dos_cd,1,maxPassend_673625142560997166);
                     else passend_673625142560997166 = Dos_cd;
                   passend_673625142560997166 = tranwrd(passend_673625142560997166,'9D'x,'D0'x);
                   put passend_673625142560997166 ~ @;
              end;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Dos_id_aanvulling)
         then put "," @;
         else put Dos_id_aanvulling @;
       if missing(Dosprio)
         then put "," @;
         else put Dosprio @;
       if missing(ED_Aanvraag_id)
         then put "," @;
         else put ED_Aanvraag_id @;
       if missing(Eerste_jr_aflossing)
         then put "," @;
         else put Eerste_jr_aflossing @;
       if missing(Eind_dat)
         then put "," @;
         else put Eind_dat @;
       if missing(Eindmaand)
         then put "," @;
         else put Eindmaand @;
       if missing(Extern_aanvraag_id)
         then put "," @;
         else put Extern_aanvraag_id @;
       if missing(Extern_dossier_id)
         then put "," @;
         else put Extern_dossier_id @;
       if missing(Extrene_bron_cd)
         then put "," @;
         else do;
                   attrLengte_2660979012630279402=length(Extrene_bron_cd);
                   aantalLF_2660979012630279402 = countc(Extrene_bron_cd,'0A'x);
                   maxPassend_2660979012630279402=10-1-aantalLF_2660979012630279402;
                   if attrLengte_2660979012630279402 > max(maxPassend_2660979012630279402,1000)
                     then passend_2660979012630279402 = substr(Extrene_bron_cd,1,maxPassend_2660979012630279402);
                     else passend_2660979012630279402 = Extrene_bron_cd;
                   passend_2660979012630279402 = tranwrd(passend_2660979012630279402,'9D'x,'D0'x);
                   put passend_2660979012630279402 ~ @;
              end;
       if missing(Gecommitteerd_zegge)
         then put "," @;
         else do;
                   attrLengte_5749729584749907027=length(Gecommitteerd_zegge);
                   aantalLF_5749729584749907027 = countc(Gecommitteerd_zegge,'0A'x);
                   maxPassend_5749729584749907027=100-1-aantalLF_5749729584749907027;
                   if attrLengte_5749729584749907027 > max(maxPassend_5749729584749907027,1000)
                     then passend_5749729584749907027 = substr(Gecommitteerd_zegge,1,maxPassend_5749729584749907027);
                     else passend_5749729584749907027 = Gecommitteerd_zegge;
                   passend_5749729584749907027 = tranwrd(passend_5749729584749907027,'9D'x,'D0'x);
                   put passend_5749729584749907027 ~ @;
              end;
       if missing(Gem_uurloon)
         then put "," @;
         else put Gem_uurloon @;
       if missing(Hand_bewerkt_imp)
         then put "," @;
         else do;
                   attrLengte_8634466892657782931=length(Hand_bewerkt_imp);
                   aantalLF_8634466892657782931 = countc(Hand_bewerkt_imp,'0A'x);
                   maxPassend_8634466892657782931=1-1-aantalLF_8634466892657782931;
                   if attrLengte_8634466892657782931 > max(maxPassend_8634466892657782931,1000)
                     then passend_8634466892657782931 = substr(Hand_bewerkt_imp,1,maxPassend_8634466892657782931);
                     else passend_8634466892657782931 = Hand_bewerkt_imp;
                   passend_8634466892657782931 = tranwrd(passend_8634466892657782931,'9D'x,'D0'x);
                   put passend_8634466892657782931 ~ @;
              end;
       if missing(Handtekening_ok)
         then put "," @;
         else do;
                   attrLengte_2912998615907010652=length(Handtekening_ok);
                   aantalLF_2912998615907010652 = countc(Handtekening_ok,'0A'x);
                   maxPassend_2912998615907010652=1-1-aantalLF_2912998615907010652;
                   if attrLengte_2912998615907010652 > max(maxPassend_2912998615907010652,1000)
                     then passend_2912998615907010652 = substr(Handtekening_ok,1,maxPassend_2912998615907010652);
                     else passend_2912998615907010652 = Handtekening_ok;
                   passend_2912998615907010652 = tranwrd(passend_2912998615907010652,'9D'x,'D0'x);
                   put passend_2912998615907010652 ~ @;
              end;
       if missing(Hoofd_dos_id)
         then put "," @;
         else put Hoofd_dos_id @;
       if missing(Id_van_de_doos)
         then put "," @;
         else put Id_van_de_doos @;
       if missing(Id_van_de_doos_na_de_import)
         then put "," @;
         else put Id_van_de_doos_na_de_import @;
       if missing(Importlijst)
         then put "," @;
         else do;
                   attrLengte_1424136908970746724=length(Importlijst);
                   aantalLF_1424136908970746724 = countc(Importlijst,'0A'x);
                   maxPassend_1424136908970746724=240-1-aantalLF_1424136908970746724;
                   if attrLengte_1424136908970746724 > max(maxPassend_1424136908970746724,1000)
                     then passend_1424136908970746724 = substr(Importlijst,1,maxPassend_1424136908970746724);
                     else passend_1424136908970746724 = Importlijst;
                   passend_1424136908970746724 = tranwrd(passend_1424136908970746724,'9D'x,'D0'x);
                   put passend_1424136908970746724 ~ @;
              end;
       if missing(Indienings_dat)
         then put "," @;
         else put Indienings_dat @;
       if missing(Indienings_tijd)
         then put "," @;
         else put Indienings_tijd @;
       if missing(Indienkanaal)
         then put "," @;
         else do;
                   attrLengte_5002420659340225241=length(Indienkanaal);
                   aantalLF_5002420659340225241 = countc(Indienkanaal,'0A'x);
                   maxPassend_5002420659340225241=1-1-aantalLF_5002420659340225241;
                   if attrLengte_5002420659340225241 > max(maxPassend_5002420659340225241,1000)
                     then passend_5002420659340225241 = substr(Indienkanaal,1,maxPassend_5002420659340225241);
                     else passend_5002420659340225241 = Indienkanaal;
                   passend_5002420659340225241 = tranwrd(passend_5002420659340225241,'9D'x,'D0'x);
                   put passend_5002420659340225241 ~ @;
              end;
       if missing(Ingezien)
         then put "," @;
         else do;
                   attrLengte_1317667042141340245=length(Ingezien);
                   aantalLF_1317667042141340245 = countc(Ingezien,'0A'x);
                   maxPassend_1317667042141340245=1-1-aantalLF_1317667042141340245;
                   if attrLengte_1317667042141340245 > max(maxPassend_1317667042141340245,1000)
                     then passend_1317667042141340245 = substr(Ingezien,1,maxPassend_1317667042141340245);
                     else passend_1317667042141340245 = Ingezien;
                   passend_1317667042141340245 = tranwrd(passend_1317667042141340245,'9D'x,'D0'x);
                   put passend_1317667042141340245 ~ @;
              end;
       if missing(Inkoopcat_cd)
         then put "," @;
         else do;
                   attrLengte_9028171306283589824=length(Inkoopcat_cd);
                   aantalLF_9028171306283589824 = countc(Inkoopcat_cd,'0A'x);
                   maxPassend_9028171306283589824=6-1-aantalLF_9028171306283589824;
                   if attrLengte_9028171306283589824 > max(maxPassend_9028171306283589824,1000)
                     then passend_9028171306283589824 = substr(Inkoopcat_cd,1,maxPassend_9028171306283589824);
                     else passend_9028171306283589824 = Inkoopcat_cd;
                   passend_9028171306283589824 = tranwrd(passend_9028171306283589824,'9D'x,'D0'x);
                   put passend_9028171306283589824 ~ @;
              end;
       if missing(Inleen_binnen_Fiscale_eenheid)
         then put "," @;
         else do;
                   attrLengte_3523818910407590404=length(Inleen_binnen_Fiscale_eenheid);
                   aantalLF_3523818910407590404 = countc(Inleen_binnen_Fiscale_eenheid,'0A'x);
                   maxPassend_3523818910407590404=1-1-aantalLF_3523818910407590404;
                   if attrLengte_3523818910407590404 > max(maxPassend_3523818910407590404,1000)
                     then passend_3523818910407590404 = substr(Inleen_binnen_Fiscale_eenheid,1,maxPassend_3523818910407590404);
                     else passend_3523818910407590404 = Inleen_binnen_Fiscale_eenheid;
                   passend_3523818910407590404 = tranwrd(passend_3523818910407590404,'9D'x,'D0'x);
                   put passend_3523818910407590404 ~ @;
              end;
       if missing(Meldingnummer_IRWA)
         then put "," @;
         else do;
                   attrLengte_9183881583082799158=length(Meldingnummer_IRWA);
                   aantalLF_9183881583082799158 = countc(Meldingnummer_IRWA,'0A'x);
                   maxPassend_9183881583082799158=30-1-aantalLF_9183881583082799158;
                   if attrLengte_9183881583082799158 > max(maxPassend_9183881583082799158,1000)
                     then passend_9183881583082799158 = substr(Meldingnummer_IRWA,1,maxPassend_9183881583082799158);
                     else passend_9183881583082799158 = Meldingnummer_IRWA;
                   passend_9183881583082799158 = tranwrd(passend_9183881583082799158,'9D'x,'D0'x);
                   put passend_9183881583082799158 ~ @;
              end;
       if missing(Jaar)
         then put "," @;
         else put Jaar @;
       if missing(Jaardossier_bron_dos_id)
         then put "," @;
         else put Jaardossier_bron_dos_id @;
       if missing(Jaardossier_dos_id)
         then put "," @;
         else put Jaardossier_dos_id @;
       if missing(Korte_titel)
         then put "," @;
         else do;
                   attrLengte_4131743432680306277=length(Korte_titel);
                   aantalLF_4131743432680306277 = countc(Korte_titel,'0A'x);
                   maxPassend_4131743432680306277=25-1-aantalLF_4131743432680306277;
                   if attrLengte_4131743432680306277 > max(maxPassend_4131743432680306277,1000)
                     then passend_4131743432680306277 = substr(Korte_titel,1,maxPassend_4131743432680306277);
                     else passend_4131743432680306277 = Korte_titel;
                   passend_4131743432680306277 = tranwrd(passend_4131743432680306277,'9D'x,'D0'x);
                   put passend_4131743432680306277 ~ @;
              end;
       if missing(Krat_nr)
         then put "," @;
         else put Krat_nr @;
       if missing(Laatste_jr_aflossing)
         then put "," @;
         else put Laatste_jr_aflossing @;
       if missing(Laatste_pcs_id)
         then put "," @;
         else put Laatste_pcs_id @;
       if missing(Landnaam)
         then put "," @;
         else do;
                   attrLengte_83305570222129686=length(Landnaam);
                   aantalLF_83305570222129686 = countc(Landnaam,'0A'x);
                   maxPassend_83305570222129686=60-1-aantalLF_83305570222129686;
                   if attrLengte_83305570222129686 > max(maxPassend_83305570222129686,1000)
                     then passend_83305570222129686 = substr(Landnaam,1,maxPassend_83305570222129686);
                     else passend_83305570222129686 = Landnaam;
                   passend_83305570222129686 = tranwrd(passend_83305570222129686,'9D'x,'D0'x);
                   put passend_83305570222129686 ~ @;
              end;
       if missing(LB_nummer_komt_overeen)
         then put "," @;
         else do;
                   attrLengte_2703764941200643404=length(LB_nummer_komt_overeen);
                   aantalLF_2703764941200643404 = countc(LB_nummer_komt_overeen,'0A'x);
                   maxPassend_2703764941200643404=1-1-aantalLF_2703764941200643404;
                   if attrLengte_2703764941200643404 > max(maxPassend_2703764941200643404,1000)
                     then passend_2703764941200643404 = substr(LB_nummer_komt_overeen,1,maxPassend_2703764941200643404);
                     else passend_2703764941200643404 = LB_nummer_komt_overeen;
                   passend_2703764941200643404 = tranwrd(passend_2703764941200643404,'9D'x,'D0'x);
                   put passend_2703764941200643404 ~ @;
              end;
       if missing(Machtiging_JN)
         then put "," @;
         else do;
                   attrLengte_1692682703785774829=length(Machtiging_JN);
                   aantalLF_1692682703785774829 = countc(Machtiging_JN,'0A'x);
                   maxPassend_1692682703785774829=1-1-aantalLF_1692682703785774829;
                   if attrLengte_1692682703785774829 > max(maxPassend_1692682703785774829,1000)
                     then passend_1692682703785774829 = substr(Machtiging_JN,1,maxPassend_1692682703785774829);
                     else passend_1692682703785774829 = Machtiging_JN;
                   passend_1692682703785774829 = tranwrd(passend_1692682703785774829,'9D'x,'D0'x);
                   put passend_1692682703785774829 ~ @;
              end;
       if missing(Mdw_cd)
         then put "," @;
         else do;
                   attrLengte_1226307818193438914=length(Mdw_cd);
                   aantalLF_1226307818193438914 = countc(Mdw_cd,'0A'x);
                   maxPassend_1226307818193438914=30-1-aantalLF_1226307818193438914;
                   if attrLengte_1226307818193438914 > max(maxPassend_1226307818193438914,1000)
                     then passend_1226307818193438914 = substr(Mdw_cd,1,maxPassend_1226307818193438914);
                     else passend_1226307818193438914 = Mdw_cd;
                   passend_1226307818193438914 = tranwrd(passend_1226307818193438914,'9D'x,'D0'x);
                   put passend_1226307818193438914 ~ @;
              end;
       if missing(Mentorterugkoppeling)
         then put "," @;
         else do;
                   attrLengte_3493612579047046991=length(Mentorterugkoppeling);
                   aantalLF_3493612579047046991 = countc(Mentorterugkoppeling,'0A'x);
                   maxPassend_3493612579047046991=1-1-aantalLF_3493612579047046991;
                   if attrLengte_3493612579047046991 > max(maxPassend_3493612579047046991,1000)
                     then passend_3493612579047046991 = substr(Mentorterugkoppeling,1,maxPassend_3493612579047046991);
                     else passend_3493612579047046991 = Mentorterugkoppeling;
                   passend_3493612579047046991 = tranwrd(passend_3493612579047046991,'9D'x,'D0'x);
                   put passend_3493612579047046991 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_dat_vst)
         then put "," @;
         else put Mutatie_dat_vst @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_user_vst)
         then put "," @;
         else do;
                   attrLengte_4762281330357685227=length(Mutatie_user_vst);
                   aantalLF_4762281330357685227 = countc(Mutatie_user_vst,'0A'x);
                   maxPassend_4762281330357685227=30-1-aantalLF_4762281330357685227;
                   if attrLengte_4762281330357685227 > max(maxPassend_4762281330357685227,1000)
                     then passend_4762281330357685227 = substr(Mutatie_user_vst,1,maxPassend_4762281330357685227);
                     else passend_4762281330357685227 = Mutatie_user_vst;
                   passend_4762281330357685227 = tranwrd(passend_4762281330357685227,'9D'x,'D0'x);
                   put passend_4762281330357685227 ~ @;
              end;
       if missing(Naar_batchrun)
         then put "," @;
         else put Naar_batchrun @;
       if missing(Neg_einddeclaratie)
         then put "," @;
         else put Neg_einddeclaratie @;
       if missing(Notities)
         then put "," @;
         else do;
                   attrLengte_2449201397129185301=length(Notities);
                   aantalLF_2449201397129185301 = countc(Notities,'0A'x);
                   maxPassend_2449201397129185301=2048-1-aantalLF_2449201397129185301;
                   if attrLengte_2449201397129185301 > max(maxPassend_2449201397129185301,1000)
                     then passend_2449201397129185301 = substr(Notities,1,maxPassend_2449201397129185301);
                     else passend_2449201397129185301 = Notities;
                   passend_2449201397129185301 = tranwrd(passend_2449201397129185301,'9D'x,'D0'x);
                   put passend_2449201397129185301 ~ @;
              end;
       if missing(Octrooien)
         then put "," @;
         else put Octrooien @;
       if missing(Offertebedrag)
         then put "," @;
         else put Offertebedrag @;
       if missing(Cerhoud_id_Ondertekenaar)
         then put "," @;
         else put Cerhoud_id_Ondertekenaar @;
       if missing(Ontvangstdatum)
         then put "," @;
         else put Ontvangstdatum @;
       if missing(Oorspr_einddatum)
         then put "," @;
         else put Oorspr_einddatum @;
       if missing(Overige_subsidie)
         then put "," @;
         else do;
                   attrLengte_7561575571707057934=length(Overige_subsidie);
                   aantalLF_7561575571707057934 = countc(Overige_subsidie,'0A'x);
                   maxPassend_7561575571707057934=1-1-aantalLF_7561575571707057934;
                   if attrLengte_7561575571707057934 > max(maxPassend_7561575571707057934,1000)
                     then passend_7561575571707057934 = substr(Overige_subsidie,1,maxPassend_7561575571707057934);
                     else passend_7561575571707057934 = Overige_subsidie;
                   passend_7561575571707057934 = tranwrd(passend_7561575571707057934,'9D'x,'D0'x);
                   put passend_7561575571707057934 ~ @;
              end;
       if missing(Opdrachtvorm_cd)
         then put "," @;
         else do;
                   attrLengte_8637308590533283956=length(Opdrachtvorm_cd);
                   aantalLF_8637308590533283956 = countc(Opdrachtvorm_cd,'0A'x);
                   maxPassend_8637308590533283956=3-1-aantalLF_8637308590533283956;
                   if attrLengte_8637308590533283956 > max(maxPassend_8637308590533283956,1000)
                     then passend_8637308590533283956 = substr(Opdrachtvorm_cd,1,maxPassend_8637308590533283956);
                     else passend_8637308590533283956 = Opdrachtvorm_cd;
                   passend_8637308590533283956 = tranwrd(passend_8637308590533283956,'9D'x,'D0'x);
                   put passend_8637308590533283956 ~ @;
              end;
       if missing(Perc_verrekenen)
         then put "," @;
         else put Perc_verrekenen @;
       if missing(Periode_nr)
         then put "," @;
         else put Periode_nr @;
       if missing(Prioriteit)
         then put "," @;
         else put Prioriteit @;
       if missing(Prioriteitsdatum)
         then put "," @;
         else put Prioriteitsdatum @;
       if missing(Projectomschrijving)
         then put "," @;
         else do;
                   attrLengte_8371357541136350691=length(Projectomschrijving);
                   aantalLF_8371357541136350691 = countc(Projectomschrijving,'0A'x);
                   maxPassend_8371357541136350691=2048-1-aantalLF_8371357541136350691;
                   if attrLengte_8371357541136350691 > max(maxPassend_8371357541136350691,1000)
                     then passend_8371357541136350691 = substr(Projectomschrijving,1,maxPassend_8371357541136350691);
                     else passend_8371357541136350691 = Projectomschrijving;
                   passend_8371357541136350691 = tranwrd(passend_8371357541136350691,'9D'x,'D0'x);
                   put passend_8371357541136350691 ~ @;
              end;
       if missing(Ranking)
         then put "," @;
         else put Ranking @;
       if missing(RDA_Afhandeling_forfaitair)
         then put "," @;
         else do;
                   attrLengte_8385991183994979473=length(RDA_Afhandeling_forfaitair);
                   aantalLF_8385991183994979473 = countc(RDA_Afhandeling_forfaitair,'0A'x);
                   maxPassend_8385991183994979473=1-1-aantalLF_8385991183994979473;
                   if attrLengte_8385991183994979473 > max(maxPassend_8385991183994979473,1000)
                     then passend_8385991183994979473 = substr(RDA_Afhandeling_forfaitair,1,maxPassend_8385991183994979473);
                     else passend_8385991183994979473 = RDA_Afhandeling_forfaitair;
                   passend_8385991183994979473 = tranwrd(passend_8385991183994979473,'9D'x,'D0'x);
                   put passend_8385991183994979473 ~ @;
              end;
       if missing(RDA_aangevraagd)
         then put "," @;
         else do;
                   attrLengte_4999820424640454704=length(RDA_aangevraagd);
                   aantalLF_4999820424640454704 = countc(RDA_aangevraagd,'0A'x);
                   maxPassend_4999820424640454704=1-1-aantalLF_4999820424640454704;
                   if attrLengte_4999820424640454704 > max(maxPassend_4999820424640454704,1000)
                     then passend_4999820424640454704 = substr(RDA_aangevraagd,1,maxPassend_4999820424640454704);
                     else passend_4999820424640454704 = RDA_aangevraagd;
                   passend_4999820424640454704 = tranwrd(passend_4999820424640454704,'9D'x,'D0'x);
                   put passend_4999820424640454704 ~ @;
              end;
       if missing(Referentie)
         then put "," @;
         else do;
                   attrLengte_6085349322089225769=length(Referentie);
                   aantalLF_6085349322089225769 = countc(Referentie,'0A'x);
                   maxPassend_6085349322089225769=10-1-aantalLF_6085349322089225769;
                   if attrLengte_6085349322089225769 > max(maxPassend_6085349322089225769,1000)
                     then passend_6085349322089225769 = substr(Referentie,1,maxPassend_6085349322089225769);
                     else passend_6085349322089225769 = Referentie;
                   passend_6085349322089225769 = tranwrd(passend_6085349322089225769,'9D'x,'D0'x);
                   put passend_6085349322089225769 ~ @;
              end;
       if missing(Reg_id)
         then put "," @;
         else put Reg_id @;
       if missing(Reg_nr)
         then put "," @;
         else put Reg_nr @;
       if missing(Rel_id_Aanvrager)
         then put "," @;
         else put Rel_id_Aanvrager @;
       if missing(Rente_perc)
         then put "," @;
         else put Rente_perc @;
       if missing(Samenwerkingsverband1)
         then put "," @;
         else do;
                   attrLengte_464951838875667826=length(Samenwerkingsverband1);
                   aantalLF_464951838875667826 = countc(Samenwerkingsverband1,'0A'x);
                   maxPassend_464951838875667826=1-1-aantalLF_464951838875667826;
                   if attrLengte_464951838875667826 > max(maxPassend_464951838875667826,1000)
                     then passend_464951838875667826 = substr(Samenwerkingsverband1,1,maxPassend_464951838875667826);
                     else passend_464951838875667826 = Samenwerkingsverband1;
                   passend_464951838875667826 = tranwrd(passend_464951838875667826,'9D'x,'D0'x);
                   put passend_464951838875667826 ~ @;
              end;
       if missing(Samenwerkingsverband2)
         then put "," @;
         else do;
                   attrLengte_464951838892445423=length(Samenwerkingsverband2);
                   aantalLF_464951838892445423 = countc(Samenwerkingsverband2,'0A'x);
                   maxPassend_464951838892445423=1-1-aantalLF_464951838892445423;
                   if attrLengte_464951838892445423 > max(maxPassend_464951838892445423,1000)
                     then passend_464951838892445423 = substr(Samenwerkingsverband2,1,maxPassend_464951838892445423);
                     else passend_464951838892445423 = Samenwerkingsverband2;
                   passend_464951838892445423 = tranwrd(passend_464951838892445423,'9D'x,'D0'x);
                   put passend_464951838892445423 ~ @;
              end;
       if missing(SO_loon)
         then put "," @;
         else put SO_loon @;
       if missing(Begrote_SO_loonsom)
         then put "," @;
         else put Begrote_SO_loonsom @;
       if missing(SO_uren)
         then put "," @;
         else put SO_uren @;
       if missing(Startmaand)
         then put "," @;
         else put Startmaand @;
       if missing(Statuscode)
         then put "," @;
         else do;
                   attrLengte_4224671235319231711=length(Statuscode);
                   aantalLF_4224671235319231711 = countc(Statuscode,'0A'x);
                   maxPassend_4224671235319231711=3-1-aantalLF_4224671235319231711;
                   if attrLengte_4224671235319231711 > max(maxPassend_4224671235319231711,1000)
                     then passend_4224671235319231711 = substr(Statuscode,1,maxPassend_4224671235319231711);
                     else passend_4224671235319231711 = Statuscode;
                   passend_4224671235319231711 = tranwrd(passend_4224671235319231711,'9D'x,'D0'x);
                   put passend_4224671235319231711 ~ @;
              end;
       if missing(Status_cert)
         then put "," @;
         else do;
                   attrLengte_8962378222074036406=length(Status_cert);
                   aantalLF_8962378222074036406 = countc(Status_cert,'0A'x);
                   maxPassend_8962378222074036406=1-1-aantalLF_8962378222074036406;
                   if attrLengte_8962378222074036406 > max(maxPassend_8962378222074036406,1000)
                     then passend_8962378222074036406 = substr(Status_cert,1,maxPassend_8962378222074036406);
                     else passend_8962378222074036406 = Status_cert;
                   passend_8962378222074036406 = tranwrd(passend_8962378222074036406,'9D'x,'D0'x);
                   put passend_8962378222074036406 ~ @;
              end;
       if missing(Status_oud)
         then put "," @;
         else do;
                   attrLengte_629741750285978823=length(Status_oud);
                   aantalLF_629741750285978823 = countc(Status_oud,'0A'x);
                   maxPassend_629741750285978823=1-1-aantalLF_629741750285978823;
                   if attrLengte_629741750285978823 > max(maxPassend_629741750285978823,1000)
                     then passend_629741750285978823 = substr(Status_oud,1,maxPassend_629741750285978823);
                     else passend_629741750285978823 = Status_oud;
                   passend_629741750285978823 = tranwrd(passend_629741750285978823,'9D'x,'D0'x);
                   put passend_629741750285978823 ~ @;
              end;
       if missing(status_SO_uurloon)
         then put "," @;
         else do;
                   attrLengte_822751248562635347=length(status_SO_uurloon);
                   aantalLF_822751248562635347 = countc(status_SO_uurloon,'0A'x);
                   maxPassend_822751248562635347=1-1-aantalLF_822751248562635347;
                   if attrLengte_822751248562635347 > max(maxPassend_822751248562635347,1000)
                     then passend_822751248562635347 = substr(status_SO_uurloon,1,maxPassend_822751248562635347);
                     else passend_822751248562635347 = status_SO_uurloon;
                   passend_822751248562635347 = tranwrd(passend_822751248562635347,'9D'x,'D0'x);
                   put passend_822751248562635347 ~ @;
              end;
       if missing(Status_TT)
         then put "," @;
         else do;
                   attrLengte_4353842848593816882=length(Status_TT);
                   aantalLF_4353842848593816882 = countc(Status_TT,'0A'x);
                   maxPassend_4353842848593816882=3-1-aantalLF_4353842848593816882;
                   if attrLengte_4353842848593816882 > max(maxPassend_4353842848593816882,1000)
                     then passend_4353842848593816882 = substr(Status_TT,1,maxPassend_4353842848593816882);
                     else passend_4353842848593816882 = Status_TT;
                   passend_4353842848593816882 = tranwrd(passend_4353842848593816882,'9D'x,'D0'x);
                   put passend_4353842848593816882 ~ @;
              end;
       if missing(Statusgroep)
         then put "," @;
         else do;
                   attrLengte_6104227251393262734=length(Statusgroep);
                   aantalLF_6104227251393262734 = countc(Statusgroep,'0A'x);
                   maxPassend_6104227251393262734=1-1-aantalLF_6104227251393262734;
                   if attrLengte_6104227251393262734 > max(maxPassend_6104227251393262734,1000)
                     then passend_6104227251393262734 = substr(Statusgroep,1,maxPassend_6104227251393262734);
                     else passend_6104227251393262734 = Statusgroep;
                   passend_6104227251393262734 = tranwrd(passend_6104227251393262734,'9D'x,'D0'x);
                   put passend_6104227251393262734 ~ @;
              end;
       if missing(Statustermijn)
         then put "," @;
         else put Statustermijn @;
       if missing(Status_E_Diensten)
         then put "," @;
         else do;
                   attrLengte_3643621599713209674=length(Status_E_Diensten);
                   aantalLF_3643621599713209674 = countc(Status_E_Diensten,'0A'x);
                   maxPassend_3643621599713209674=50-1-aantalLF_3643621599713209674;
                   if attrLengte_3643621599713209674 > max(maxPassend_3643621599713209674,1000)
                     then passend_3643621599713209674 = substr(Status_E_Diensten,1,maxPassend_3643621599713209674);
                     else passend_3643621599713209674 = Status_E_Diensten;
                   passend_3643621599713209674 = tranwrd(passend_3643621599713209674,'9D'x,'D0'x);
                   put passend_3643621599713209674 ~ @;
              end;
       if missing(Status_E_Loket)
         then put "," @;
         else do;
                   attrLengte_7139562934942460596=length(Status_E_Loket);
                   aantalLF_7139562934942460596 = countc(Status_E_Loket,'0A'x);
                   maxPassend_7139562934942460596=50-1-aantalLF_7139562934942460596;
                   if attrLengte_7139562934942460596 > max(maxPassend_7139562934942460596,1000)
                     then passend_7139562934942460596 = substr(Status_E_Loket,1,maxPassend_7139562934942460596);
                     else passend_7139562934942460596 = Status_E_Loket;
                   passend_7139562934942460596 = tranwrd(passend_7139562934942460596,'9D'x,'D0'x);
                   put passend_7139562934942460596 ~ @;
              end;
       if missing(Technisch_succes)
         then put "," @;
         else put Technisch_succes @;
       if missing(Technisch_Cor_id)
         then put "," @;
         else put Technisch_Cor_id @;
       if missing(Titel)
         then put "," @;
         else do;
                   attrLengte_5382860804518864833=length(Titel);
                   aantalLF_5382860804518864833 = countc(Titel,'0A'x);
                   maxPassend_5382860804518864833=200-1-aantalLF_5382860804518864833;
                   if attrLengte_5382860804518864833 > max(maxPassend_5382860804518864833,1000)
                     then passend_5382860804518864833 = substr(Titel,1,maxPassend_5382860804518864833);
                     else passend_5382860804518864833 = Titel;
                   passend_5382860804518864833 = tranwrd(passend_5382860804518864833,'9D'x,'D0'x);
                   put passend_5382860804518864833 ~ @;
              end;
       if missing(Afgelost_op_onvoorw_hoofdsom)
         then put "," @;
         else put Afgelost_op_onvoorw_hoofdsom @;
       if missing(Afgelost_op_onvoorw_rente)
         then put "," @;
         else put Afgelost_op_onvoorw_rente @;
       if missing(Totaal_afgelost_op_hoofdsom)
         then put "," @;
         else put Totaal_afgelost_op_hoofdsom @;
       if missing(Totaal_ontvangen_rente)
         then put "," @;
         else put Totaal_ontvangen_rente @;
       if missing(Totaal_bijgeschreven_rente)
         then put "," @;
         else put Totaal_bijgeschreven_rente @;
       if missing(Direct_opeisbare_vordering)
         then put "," @;
         else put Direct_opeisbare_vordering @;
       if missing(Direct_opeisbare_hoofdsom)
         then put "," @;
         else put Direct_opeisbare_hoofdsom @;
       if missing(Direct_opeisbare_rente)
         then put "," @;
         else put Direct_opeisbare_rente @;
       if missing(Totaal_gecommitteerd_bedrag)
         then put "," @;
         else put Totaal_gecommitteerd_bedrag @;
       if missing(Zegge_Totaal_gecommitteerd)
         then put "," @;
         else do;
                   attrLengte_2245082838448298726=length(Zegge_Totaal_gecommitteerd);
                   aantalLF_2245082838448298726 = countc(Zegge_Totaal_gecommitteerd,'0A'x);
                   maxPassend_2245082838448298726=100-1-aantalLF_2245082838448298726;
                   if attrLengte_2245082838448298726 > max(maxPassend_2245082838448298726,1000)
                     then passend_2245082838448298726 = substr(Zegge_Totaal_gecommitteerd,1,maxPassend_2245082838448298726);
                     else passend_2245082838448298726 = Zegge_Totaal_gecommitteerd;
                   passend_2245082838448298726 = tranwrd(passend_2245082838448298726,'9D'x,'D0'x);
                   put passend_2245082838448298726 ~ @;
              end;
       if missing(Totaal_gedeclareerd_bedrag)
         then put "," @;
         else put Totaal_gedeclareerd_bedrag @;
       if missing(Totaal_geschoonde_kosten)
         then put "," @;
         else put Totaal_geschoonde_kosten @;
       if missing(Totale_hoofdsom)
         then put "," @;
         else put Totale_hoofdsom @;
       if missing(Totaal_ingetrokken_bedrag)
         then put "," @;
         else put Totaal_ingetrokken_bedrag @;
       if missing(Kwijtsch_onvoorw_hoofdsom)
         then put "," @;
         else put Kwijtsch_onvoorw_hoofdsom @;
       if missing(Kwijtsch_onvoorw_rente)
         then put "," @;
         else put Kwijtsch_onvoorw_rente @;
       if missing(Kwijtsch_direct_opeisbaar)
         then put "," @;
         else put Kwijtsch_direct_opeisbaar @;
       if missing(Kwijtsch_voorw_hoofdsom)
         then put "," @;
         else put Kwijtsch_voorw_hoofdsom @;
       if missing(Kwijtsch_voorw_rente)
         then put "," @;
         else put Kwijtsch_voorw_rente @;
       if missing(Totaal_kwijtgescholden_bedrag)
         then put "," @;
         else put Totaal_kwijtgescholden_bedrag @;
       if missing(Totaal_openstaand_bedrag)
         then put "," @;
         else put Totaal_openstaand_bedrag @;
       if missing(Direct_opeisbaar_gesteld)
         then put "," @;
         else put Direct_opeisbaar_gesteld @;
       if missing(Totaal_uitbetaald)
         then put "," @;
         else put Totaal_uitbetaald @;
       if missing(Totaal_verleend_bedrag)
         then put "," @;
         else put Totaal_verleend_bedrag @;
       if missing(Uitlening_binnen_Fisc_eenheid)
         then put "," @;
         else do;
                   attrLengte_6926417215196739940=length(Uitlening_binnen_Fisc_eenheid);
                   aantalLF_6926417215196739940 = countc(Uitlening_binnen_Fisc_eenheid,'0A'x);
                   maxPassend_6926417215196739940=1-1-aantalLF_6926417215196739940;
                   if attrLengte_6926417215196739940 > max(maxPassend_6926417215196739940,1000)
                     then passend_6926417215196739940 = substr(Uitlening_binnen_Fisc_eenheid,1,maxPassend_6926417215196739940);
                     else passend_6926417215196739940 = Uitlening_binnen_Fisc_eenheid;
                   passend_6926417215196739940 = tranwrd(passend_6926417215196739940,'9D'x,'D0'x);
                   put passend_6926417215196739940 ~ @;
              end;
       if missing(Uurloon_jaar)
         then put "," @;
         else put Uurloon_jaar @;
       if missing(Vaststellen_batch)
         then put "," @;
         else do;
                   attrLengte_866165905967819389=length(Vaststellen_batch);
                   aantalLF_866165905967819389 = countc(Vaststellen_batch,'0A'x);
                   maxPassend_866165905967819389=1-1-aantalLF_866165905967819389;
                   if attrLengte_866165905967819389 > max(maxPassend_866165905967819389,1000)
                     then passend_866165905967819389 = substr(Vaststellen_batch,1,maxPassend_866165905967819389);
                     else passend_866165905967819389 = Vaststellen_batch;
                   passend_866165905967819389 = tranwrd(passend_866165905967819389,'9D'x,'D0'x);
                   put passend_866165905967819389 ~ @;
              end;
       if missing(Vergoedingsperc)
         then put "," @;
         else put Vergoedingsperc @;
       if missing(Volgnr_LB)
         then put "," @;
         else put Volgnr_LB @;
       if missing(Voorlopig_gecommitteerd)
         then put "," @;
         else put Voorlopig_gecommitteerd @;
       if missing(Voorlopig_gedeclareerd)
         then put "," @;
         else put Voorlopig_gedeclareerd @;
       if missing(Vorig_aanvraag_bedrijf_nr)
         then put "," @;
         else put Vorig_aanvraag_bedrijf_nr @;
       if missing(Vorig_aanvraagjaar)
         then put "," @;
         else put Vorig_aanvraagjaar @;
       if missing(Vorig_aanvraagnummer)
         then put "," @;
         else do;
                   attrLengte_7036857090880684579=length(Vorig_aanvraagnummer);
                   aantalLF_7036857090880684579 = countc(Vorig_aanvraagnummer,'0A'x);
                   maxPassend_7036857090880684579=40-1-aantalLF_7036857090880684579;
                   if attrLengte_7036857090880684579 > max(maxPassend_7036857090880684579,1000)
                     then passend_7036857090880684579 = substr(Vorig_aanvraagnummer,1,maxPassend_7036857090880684579);
                     else passend_7036857090880684579 = Vorig_aanvraagnummer;
                   passend_7036857090880684579 = tranwrd(passend_7036857090880684579,'9D'x,'D0'x);
                   put passend_7036857090880684579 ~ @;
              end;
       if missing(Vorie_aanvraagperiode)
         then put "," @;
         else put Vorie_aanvraagperiode @;
       if missing(Vorig_aanvraag_volgnr)
         then put "," @;
         else put Vorig_aanvraag_volgnr @;
       if missing(Vaststelling_conform_aanvraag)
         then put "," @;
         else do;
                   attrLengte_6645381449595001144=length(Vaststelling_conform_aanvraag);
                   aantalLF_6645381449595001144 = countc(Vaststelling_conform_aanvraag,'0A'x);
                   maxPassend_6645381449595001144=1-1-aantalLF_6645381449595001144;
                   if attrLengte_6645381449595001144 > max(maxPassend_6645381449595001144,1000)
                     then passend_6645381449595001144 = substr(Vaststelling_conform_aanvraag,1,maxPassend_6645381449595001144);
                     else passend_6645381449595001144 = Vaststelling_conform_aanvraag;
                   passend_6645381449595001144 = tranwrd(passend_6645381449595001144,'9D'x,'D0'x);
                   put passend_6645381449595001144 ~ @;
              end;
       if missing(VV_Aanvraagnummer)
         then put "," @;
         else do;
                   attrLengte_1884661362277667705=length(VV_Aanvraagnummer);
                   aantalLF_1884661362277667705 = countc(VV_Aanvraagnummer,'0A'x);
                   maxPassend_1884661362277667705=12-1-aantalLF_1884661362277667705;
                   if attrLengte_1884661362277667705 > max(maxPassend_1884661362277667705,1000)
                     then passend_1884661362277667705 = substr(VV_Aanvraagnummer,1,maxPassend_1884661362277667705);
                     else passend_1884661362277667705 = VV_Aanvraagnummer;
                   passend_1884661362277667705 = tranwrd(passend_1884661362277667705,'9D'x,'D0'x);
                   put passend_1884661362277667705 ~ @;
              end;
       if missing(Wel_akkoord_niet_verlenen)
         then put "," @;
         else do;
                   attrLengte_5408814446742826170=length(Wel_akkoord_niet_verlenen);
                   aantalLF_5408814446742826170 = countc(Wel_akkoord_niet_verlenen,'0A'x);
                   maxPassend_5408814446742826170=1-1-aantalLF_5408814446742826170;
                   if attrLengte_5408814446742826170 > max(maxPassend_5408814446742826170,1000)
                     then passend_5408814446742826170 = substr(Wel_akkoord_niet_verlenen,1,maxPassend_5408814446742826170);
                     else passend_5408814446742826170 = Wel_akkoord_niet_verlenen;
                   passend_5408814446742826170 = tranwrd(passend_5408814446742826170,'9D'x,'D0'x);
                   put passend_5408814446742826170 ~ @;
              end;
       if missing(Aangeboden_aan_ZER)
         then put "," @;
         else do;
                   attrLengte_9196365527337984101=length(Aangeboden_aan_ZER);
                   aantalLF_9196365527337984101 = countc(Aangeboden_aan_ZER,'0A'x);
                   maxPassend_9196365527337984101=1-1-aantalLF_9196365527337984101;
                   if attrLengte_9196365527337984101 > max(maxPassend_9196365527337984101,1000)
                     then passend_9196365527337984101 = substr(Aangeboden_aan_ZER,1,maxPassend_9196365527337984101);
                     else passend_9196365527337984101 = Aangeboden_aan_ZER;
                   passend_9196365527337984101 = tranwrd(passend_9196365527337984101,'9D'x,'D0'x);
                   put passend_9196365527337984101 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_DAM_DOSSIERGROEP AS
   SELECT t1.Ddg_id,
          t1.Age_id,
          t1.Naam,
          t1.Toelichting,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat
     FROM DATAQASG.DAM_DOSSIERGROEP_TCMG t1;
QUIT;

data MIGRATIE.BAS_DAM_DOSSIERGROEP;
  set MIGRATIE.BAS_DAM_DOSSIERGROEP;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_DAM_DOSSIERGROEP.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Ddg_id" 
       ','
          "Age_id" 
       ','
          "Naam" 
       ','
          "Toelichting" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_DAM_DOSSIERGROEP   end=EFIEOD; 
       format Ddg_id best12. ;
       format Age_id best12. ;
       format Naam  ;
       format Toelichting  ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Ddg_id)
         then put "," @;
         else put Ddg_id @;
       if missing(Age_id)
         then put "," @;
         else put Age_id @;
       if missing(Naam)
         then put "," @;
         else do;
                   attrLengte_3121428435771779831=length(Naam);
                   aantalLF_3121428435771779831 = countc(Naam,'0A'x);
                   maxPassend_3121428435771779831=30-1-aantalLF_3121428435771779831;
                   if attrLengte_3121428435771779831 > max(maxPassend_3121428435771779831,1000)
                     then passend_3121428435771779831 = substr(Naam,1,maxPassend_3121428435771779831);
                     else passend_3121428435771779831 = Naam;
                   passend_3121428435771779831 = tranwrd(passend_3121428435771779831,'9D'x,'D0'x);
                   put passend_3121428435771779831 ~ @;
              end;
       if missing(Toelichting)
         then put "," @;
         else do;
                   attrLengte_4385385912596099835=length(Toelichting);
                   aantalLF_4385385912596099835 = countc(Toelichting,'0A'x);
                   maxPassend_4385385912596099835=2048-1-aantalLF_4385385912596099835;
                   if attrLengte_4385385912596099835 > max(maxPassend_4385385912596099835,1000)
                     then passend_4385385912596099835 = substr(Toelichting,1,maxPassend_4385385912596099835);
                     else passend_4385385912596099835 = Toelichting;
                   passend_4385385912596099835 = tranwrd(passend_4385385912596099835,'9D'x,'D0'x);
                   put passend_4385385912596099835 ~ @;
              end;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_DAM_LOKATIEADRES AS
   SELECT t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.DLS_id,
          t1.Lok_id,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.RAE_id,
          t1.RAS_id
     FROM DATAQASG.DAM_LOKATIEADRES_TCMG t1;
QUIT;

data MIGRATIE.BAS_DAM_LOKATIEADRES;
  set MIGRATIE.BAS_DAM_LOKATIEADRES;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_DAM_LOKATIEADRES.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "DLS_id" 
       ','
          "Lok_id" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "RAE_id" 
       ','
          "RAS_id" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_DAM_LOKATIEADRES   end=EFIEOD; 
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format DLS_id best12. ;
       format Lok_id best12. ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format RAE_id best12. ;
       format RAS_id best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(DLS_id)
         then put "," @;
         else put DLS_id @;
       if missing(Lok_id)
         then put "," @;
         else put Lok_id @;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(RAE_id)
         then put "," @;
         else put RAE_id @;
       if missing(RAS_id)
         then put "," @;
         else put RAS_id @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_DAM_MDW_INTERN_HIST AS
   SELECT t1.Dos_id,
          t1.Prg_id,
          t1.Mdw_id,
          t1.Rol_cd,
          t1.Datum_van FORMAT=B8601DT19. AS Datum_van,
          t1.Datum_tot FORMAT=B8601DT19. AS Datum_tot,
          t1.Behandelend,
          t1.Notitie,
          t1.Mdw_id_voorheen,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user
     FROM DATAQASG.DAM_MDW_INTERN_HIST_TCMG t1;
QUIT;

data MIGRATIE.BAS_DAM_MDW_INTERN_HIST;
  set MIGRATIE.BAS_DAM_MDW_INTERN_HIST;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_DAM_MDW_INTERN_HIST.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Dos_id" 
       ','
          "Prg_id" 
       ','
          "Mdw_id" 
       ','
          "Rol_cd" 
       ','
          "Datum_van" 
       ','
          "Datum_tot" 
       ','
          "Behandelend" 
       ','
          "Notitie" 
       ','
          "Mdw_id_voorheen" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_DAM_MDW_INTERN_HIST   end=EFIEOD; 
       format Dos_id best12. ;
       format Prg_id best12. ;
       format Mdw_id best12. ;
       format Rol_cd  ;
       format Datum_van B8601DT19. ;
       format Datum_tot B8601DT19. ;
       format Behandelend  ;
       format Notitie  ;
       format Mdw_id_voorheen best12. ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Prg_id)
         then put "," @;
         else put Prg_id @;
       if missing(Mdw_id)
         then put "," @;
         else put Mdw_id @;
       if missing(Rol_cd)
         then put "," @;
         else do;
                   attrLengte_3864349925788261245=length(Rol_cd);
                   aantalLF_3864349925788261245 = countc(Rol_cd,'0A'x);
                   maxPassend_3864349925788261245=3-1-aantalLF_3864349925788261245;
                   if attrLengte_3864349925788261245 > max(maxPassend_3864349925788261245,1000)
                     then passend_3864349925788261245 = substr(Rol_cd,1,maxPassend_3864349925788261245);
                     else passend_3864349925788261245 = Rol_cd;
                   passend_3864349925788261245 = tranwrd(passend_3864349925788261245,'9D'x,'D0'x);
                   put passend_3864349925788261245 ~ @;
              end;
       if missing(Datum_van)
         then put "," @;
         else put Datum_van @;
       if missing(Datum_tot)
         then put "," @;
         else put Datum_tot @;
       if missing(Behandelend)
         then put "," @;
         else do;
                   attrLengte_3572830677776901123=length(Behandelend);
                   aantalLF_3572830677776901123 = countc(Behandelend,'0A'x);
                   maxPassend_3572830677776901123=1-1-aantalLF_3572830677776901123;
                   if attrLengte_3572830677776901123 > max(maxPassend_3572830677776901123,1000)
                     then passend_3572830677776901123 = substr(Behandelend,1,maxPassend_3572830677776901123);
                     else passend_3572830677776901123 = Behandelend;
                   passend_3572830677776901123 = tranwrd(passend_3572830677776901123,'9D'x,'D0'x);
                   put passend_3572830677776901123 ~ @;
              end;
       if missing(Notitie)
         then put "," @;
         else do;
                   attrLengte_1560041029703835131=length(Notitie);
                   aantalLF_1560041029703835131 = countc(Notitie,'0A'x);
                   maxPassend_1560041029703835131=2048-1-aantalLF_1560041029703835131;
                   if attrLengte_1560041029703835131 > max(maxPassend_1560041029703835131,1000)
                     then passend_1560041029703835131 = substr(Notitie,1,maxPassend_1560041029703835131);
                     else passend_1560041029703835131 = Notitie;
                   passend_1560041029703835131 = tranwrd(passend_1560041029703835131,'9D'x,'D0'x);
                   put passend_1560041029703835131 ~ @;
              end;
       if missing(Mdw_id_voorheen)
         then put "," @;
         else put Mdw_id_voorheen @;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_DAM_MDW_INTERN AS
   SELECT t1.Behandelend,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Dos_id,
          t1.Mdw_id,
          t1.Mdw_id_voorheen,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Notitie,
          t1.Prg_id,
          t1.Rol_cd
     FROM DATAQASG.DAM_MDW_INTERN_TCMG t1;
QUIT;

data MIGRATIE.BAS_DAM_MDW_INTERN;
  set MIGRATIE.BAS_DAM_MDW_INTERN;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_DAM_MDW_INTERN.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Behandelend" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Dos_id" 
       ','
          "Mdw_id" 
       ','
          "Mdw_id_voorheen" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Notitie" 
       ','
          "Prg_id" 
       ','
          "Rol_cd" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_DAM_MDW_INTERN   end=EFIEOD; 
       format Behandelend  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Dos_id best12. ;
       format Mdw_id best12. ;
       format Mdw_id_voorheen best12. ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Notitie  ;
       format Prg_id best12. ;
       format Rol_cd  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Behandelend)
         then put "," @;
         else do;
                   attrLengte_3572830677776901123=length(Behandelend);
                   aantalLF_3572830677776901123 = countc(Behandelend,'0A'x);
                   maxPassend_3572830677776901123=1-1-aantalLF_3572830677776901123;
                   if attrLengte_3572830677776901123 > max(maxPassend_3572830677776901123,1000)
                     then passend_3572830677776901123 = substr(Behandelend,1,maxPassend_3572830677776901123);
                     else passend_3572830677776901123 = Behandelend;
                   passend_3572830677776901123 = tranwrd(passend_3572830677776901123,'9D'x,'D0'x);
                   put passend_3572830677776901123 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Mdw_id)
         then put "," @;
         else put Mdw_id @;
       if missing(Mdw_id_voorheen)
         then put "," @;
         else put Mdw_id_voorheen @;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Notitie)
         then put "," @;
         else do;
                   attrLengte_1560041029703835131=length(Notitie);
                   aantalLF_1560041029703835131 = countc(Notitie,'0A'x);
                   maxPassend_1560041029703835131=2048-1-aantalLF_1560041029703835131;
                   if attrLengte_1560041029703835131 > max(maxPassend_1560041029703835131,1000)
                     then passend_1560041029703835131 = substr(Notitie,1,maxPassend_1560041029703835131);
                     else passend_1560041029703835131 = Notitie;
                   passend_1560041029703835131 = tranwrd(passend_1560041029703835131,'9D'x,'D0'x);
                   put passend_1560041029703835131 ~ @;
              end;
       if missing(Prg_id)
         then put "," @;
         else put Prg_id @;
       if missing(Rol_cd)
         then put "," @;
         else do;
                   attrLengte_3864349925788261245=length(Rol_cd);
                   aantalLF_3864349925788261245 = countc(Rol_cd,'0A'x);
                   maxPassend_3864349925788261245=3-1-aantalLF_3864349925788261245;
                   if attrLengte_3864349925788261245 > max(maxPassend_3864349925788261245,1000)
                     then passend_3864349925788261245 = substr(Rol_cd,1,maxPassend_3864349925788261245);
                     else passend_3864349925788261245 = Rol_cd;
                   passend_3864349925788261245 = tranwrd(passend_3864349925788261245,'9D'x,'D0'x);
                   put passend_3864349925788261245 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_DAM_STATUSHISTORIE AS
   SELECT t1.Commentaar,
          t1.Cor_id_tot,
          t1.Cor_id_van,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Datum_tot FORMAT=B8601DT19. AS Datum_tot,
          t1.Datum_van FORMAT=B8601DT19. AS Datum_van,
          t1.Dos_id,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Ssg_cd,
          t1.Sts_cd,
          t1.Volg_nr
     FROM DATAQASG.DAM_STATUSHISTORIE_TCMG t1;
QUIT;

data MIGRATIE.BAS_DAM_STATUSHISTORIE;
  set MIGRATIE.BAS_DAM_STATUSHISTORIE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_DAM_STATUSHISTORIE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Commentaar" 
       ','
          "Cor_id_tot" 
       ','
          "Cor_id_van" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Datum_tot" 
       ','
          "Datum_van" 
       ','
          "Dos_id" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Ssg_cd" 
       ','
          "Sts_cd" 
       ','
          "Volg_nr" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_DAM_STATUSHISTORIE   end=EFIEOD; 
       format Commentaar  ;
       format Cor_id_tot best12. ;
       format Cor_id_van best12. ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Datum_tot B8601DT19. ;
       format Datum_van B8601DT19. ;
       format Dos_id best12. ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Ssg_cd  ;
       format Sts_cd  ;
       format Volg_nr best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Commentaar)
         then put "," @;
         else do;
                   attrLengte_4287257797458721857=length(Commentaar);
                   aantalLF_4287257797458721857 = countc(Commentaar,'0A'x);
                   maxPassend_4287257797458721857=2048-1-aantalLF_4287257797458721857;
                   if attrLengte_4287257797458721857 > max(maxPassend_4287257797458721857,1000)
                     then passend_4287257797458721857 = substr(Commentaar,1,maxPassend_4287257797458721857);
                     else passend_4287257797458721857 = Commentaar;
                   passend_4287257797458721857 = tranwrd(passend_4287257797458721857,'9D'x,'D0'x);
                   put passend_4287257797458721857 ~ @;
              end;
       if missing(Cor_id_tot)
         then put "," @;
         else put Cor_id_tot @;
       if missing(Cor_id_van)
         then put "," @;
         else put Cor_id_van @;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Datum_tot)
         then put "," @;
         else put Datum_tot @;
       if missing(Datum_van)
         then put "," @;
         else put Datum_van @;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Ssg_cd)
         then put "," @;
         else do;
                   attrLengte_1782260468804165719=length(Ssg_cd);
                   aantalLF_1782260468804165719 = countc(Ssg_cd,'0A'x);
                   maxPassend_1782260468804165719=1-1-aantalLF_1782260468804165719;
                   if attrLengte_1782260468804165719 > max(maxPassend_1782260468804165719,1000)
                     then passend_1782260468804165719 = substr(Ssg_cd,1,maxPassend_1782260468804165719);
                     else passend_1782260468804165719 = Ssg_cd;
                   passend_1782260468804165719 = tranwrd(passend_1782260468804165719,'9D'x,'D0'x);
                   put passend_1782260468804165719 ~ @;
              end;
       if missing(Sts_cd)
         then put "," @;
         else do;
                   attrLengte_1792820026946084444=length(Sts_cd);
                   aantalLF_1792820026946084444 = countc(Sts_cd,'0A'x);
                   maxPassend_1792820026946084444=3-1-aantalLF_1792820026946084444;
                   if attrLengte_1792820026946084444 > max(maxPassend_1792820026946084444,1000)
                     then passend_1792820026946084444 = substr(Sts_cd,1,maxPassend_1792820026946084444);
                     else passend_1792820026946084444 = Sts_cd;
                   passend_1792820026946084444 = tranwrd(passend_1792820026946084444,'9D'x,'D0'x);
                   put passend_1792820026946084444 ~ @;
              end;
       if missing(Volg_nr)
         then put "," @;
         else put Volg_nr @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_DAM_TERMIJN_PARAAF_NOTITIE AS
   SELECT t1.Cor_id,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Dos_id,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Ter_id,
          t1.Toelichting
     FROM DATAQASG.DAM_TERMIJN_PARAAF_NOTITIE_TCMG t1;
QUIT;

data MIGRATIE.BAS_DAM_TERMIJN_PARAAF_NOTITIE;
  set MIGRATIE.BAS_DAM_TERMIJN_PARAAF_NOTITIE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_DAM_TERMIJN_PARAAF_NOTITIE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Cor_id" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Dos_id" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Ter_id" 
       ','
          "Toelichting" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_DAM_TERMIJN_PARAAF_NOTITIE   end=EFIEOD; 
       format Cor_id best12. ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Dos_id best12. ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Ter_id best12. ;
       format Toelichting  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Cor_id)
         then put "," @;
         else put Cor_id @;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Ter_id)
         then put "," @;
         else put Ter_id @;
       if missing(Toelichting)
         then put "," @;
         else do;
                   attrLengte_4385385912596099835=length(Toelichting);
                   aantalLF_4385385912596099835 = countc(Toelichting,'0A'x);
                   maxPassend_4385385912596099835=2048-1-aantalLF_4385385912596099835;
                   if attrLengte_4385385912596099835 > max(maxPassend_4385385912596099835,1000)
                     then passend_4385385912596099835 = substr(Toelichting,1,maxPassend_4385385912596099835);
                     else passend_4385385912596099835 = Toelichting;
                   passend_4385385912596099835 = tranwrd(passend_4385385912596099835,'9D'x,'D0'x);
                   put passend_4385385912596099835 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_DAM_TERMIJN AS
   SELECT t1.Aanvullende_voorwaarden,
          t1.Actie,
          t1.Actie_dat FORMAT=B8601DT19. AS Actie_dat,
          t1.Con_id,
          t1.Cor_id,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Dos_id,
          t1.Dossiergroep_ter_id,
          t1.Mdw_id,
          t1.Mdw_id_afgemeld,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Notitie,
          t1.Opgevoerd_dat FORMAT=B8601DT19. AS Opgevoerd_dat,
          t1.Opschortend_jn,
          t1.Prg_id,
          t1.Reactie_cd,
          t1.Rol_cd,
          t1.Ter_id,
          t1.Voldaan_dat FORMAT=B8601DT19. AS Voldaan_dat,
          t1.Volgorde_paraaf
     FROM DATAQASG.DAM_TERMIJN_TCMG t1;
QUIT;

data MIGRATIE.BAS_DAM_TERMIJN;
  set MIGRATIE.BAS_DAM_TERMIJN;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_DAM_TERMIJN.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Aanvullende_voorwaarden" 
       ','
          "Actie" 
       ','
          "Actie_dat" 
       ','
          "Con_id" 
       ','
          "Cor_id" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Dos_id" 
       ','
          "Dossiergroep_ter_id" 
       ','
          "Mdw_id" 
       ','
          "Mdw_id_afgemeld" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Notitie" 
       ','
          "Opgevoerd_dat" 
       ','
          "Opschortend_jn" 
       ','
          "Prg_id" 
       ','
          "Reactie_cd" 
       ','
          "Rol_cd" 
       ','
          "Ter_id" 
       ','
          "Voldaan_dat" 
       ','
          "Volgorde_paraaf" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_DAM_TERMIJN   end=EFIEOD; 
       format Aanvullende_voorwaarden  ;
       format Actie  ;
       format Actie_dat B8601DT19. ;
       format Con_id best12. ;
       format Cor_id best12. ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Dos_id best12. ;
       format Dossiergroep_ter_id best12. ;
       format Mdw_id  ;
       format Mdw_id_afgemeld best12. ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Notitie  ;
       format Opgevoerd_dat B8601DT19. ;
       format Opschortend_jn  ;
       format Prg_id best12. ;
       format Reactie_cd  ;
       format Rol_cd  ;
       format Ter_id best12. ;
       format Voldaan_dat B8601DT19. ;
       format Volgorde_paraaf best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Aanvullende_voorwaarden)
         then put "," @;
         else do;
                   attrLengte_8516838639269582457=length(Aanvullende_voorwaarden);
                   aantalLF_8516838639269582457 = countc(Aanvullende_voorwaarden,'0A'x);
                   maxPassend_8516838639269582457=1-1-aantalLF_8516838639269582457;
                   if attrLengte_8516838639269582457 > max(maxPassend_8516838639269582457,1000)
                     then passend_8516838639269582457 = substr(Aanvullende_voorwaarden,1,maxPassend_8516838639269582457);
                     else passend_8516838639269582457 = Aanvullende_voorwaarden;
                   passend_8516838639269582457 = tranwrd(passend_8516838639269582457,'9D'x,'D0'x);
                   put passend_8516838639269582457 ~ @;
              end;
       if missing(Actie)
         then put "," @;
         else do;
                   attrLengte_2824924400165242775=length(Actie);
                   aantalLF_2824924400165242775 = countc(Actie,'0A'x);
                   maxPassend_2824924400165242775=2048-1-aantalLF_2824924400165242775;
                   if attrLengte_2824924400165242775 > max(maxPassend_2824924400165242775,1000)
                     then passend_2824924400165242775 = substr(Actie,1,maxPassend_2824924400165242775);
                     else passend_2824924400165242775 = Actie;
                   passend_2824924400165242775 = tranwrd(passend_2824924400165242775,'9D'x,'D0'x);
                   put passend_2824924400165242775 ~ @;
              end;
       if missing(Actie_dat)
         then put "," @;
         else put Actie_dat @;
       if missing(Con_id)
         then put "," @;
         else put Con_id @;
       if missing(Cor_id)
         then put "," @;
         else put Cor_id @;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Dossiergroep_ter_id)
         then put "," @;
         else put Dossiergroep_ter_id @;
       if missing(Mdw_id)
         then put "," @;
         else do;
                   attrLengte_1224618887063362992=length(Mdw_id);
                   aantalLF_1224618887063362992 = countc(Mdw_id,'0A'x);
                   maxPassend_1224618887063362992=12-1-aantalLF_1224618887063362992;
                   if attrLengte_1224618887063362992 > max(maxPassend_1224618887063362992,1000)
                     then passend_1224618887063362992 = substr(Mdw_id,1,maxPassend_1224618887063362992);
                     else passend_1224618887063362992 = Mdw_id;
                   passend_1224618887063362992 = tranwrd(passend_1224618887063362992,'9D'x,'D0'x);
                   put passend_1224618887063362992 ~ @;
              end;
       if missing(Mdw_id_afgemeld)
         then put "," @;
         else put Mdw_id_afgemeld @;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Notitie)
         then put "," @;
         else do;
                   attrLengte_1560041029703835131=length(Notitie);
                   aantalLF_1560041029703835131 = countc(Notitie,'0A'x);
                   maxPassend_1560041029703835131=2048-1-aantalLF_1560041029703835131;
                   if attrLengte_1560041029703835131 > max(maxPassend_1560041029703835131,1000)
                     then passend_1560041029703835131 = substr(Notitie,1,maxPassend_1560041029703835131);
                     else passend_1560041029703835131 = Notitie;
                   passend_1560041029703835131 = tranwrd(passend_1560041029703835131,'9D'x,'D0'x);
                   put passend_1560041029703835131 ~ @;
              end;
       if missing(Opgevoerd_dat)
         then put "," @;
         else put Opgevoerd_dat @;
       if missing(Opschortend_jn)
         then put "," @;
         else do;
                   attrLengte_1225657355697171178=length(Opschortend_jn);
                   aantalLF_1225657355697171178 = countc(Opschortend_jn,'0A'x);
                   maxPassend_1225657355697171178=1-1-aantalLF_1225657355697171178;
                   if attrLengte_1225657355697171178 > max(maxPassend_1225657355697171178,1000)
                     then passend_1225657355697171178 = substr(Opschortend_jn,1,maxPassend_1225657355697171178);
                     else passend_1225657355697171178 = Opschortend_jn;
                   passend_1225657355697171178 = tranwrd(passend_1225657355697171178,'9D'x,'D0'x);
                   put passend_1225657355697171178 ~ @;
              end;
       if missing(Prg_id)
         then put "," @;
         else put Prg_id @;
       if missing(Reactie_cd)
         then put "," @;
         else do;
                   attrLengte_4412363972584569639=length(Reactie_cd);
                   aantalLF_4412363972584569639 = countc(Reactie_cd,'0A'x);
                   maxPassend_4412363972584569639=3-1-aantalLF_4412363972584569639;
                   if attrLengte_4412363972584569639 > max(maxPassend_4412363972584569639,1000)
                     then passend_4412363972584569639 = substr(Reactie_cd,1,maxPassend_4412363972584569639);
                     else passend_4412363972584569639 = Reactie_cd;
                   passend_4412363972584569639 = tranwrd(passend_4412363972584569639,'9D'x,'D0'x);
                   put passend_4412363972584569639 ~ @;
              end;
       if missing(Rol_cd)
         then put "," @;
         else do;
                   attrLengte_3864349925788261245=length(Rol_cd);
                   aantalLF_3864349925788261245 = countc(Rol_cd,'0A'x);
                   maxPassend_3864349925788261245=3-1-aantalLF_3864349925788261245;
                   if attrLengte_3864349925788261245 > max(maxPassend_3864349925788261245,1000)
                     then passend_3864349925788261245 = substr(Rol_cd,1,maxPassend_3864349925788261245);
                     else passend_3864349925788261245 = Rol_cd;
                   passend_3864349925788261245 = tranwrd(passend_3864349925788261245,'9D'x,'D0'x);
                   put passend_3864349925788261245 ~ @;
              end;
       if missing(Ter_id)
         then put "," @;
         else put Ter_id @;
       if missing(Voldaan_dat)
         then put "," @;
         else put Voldaan_dat @;
       if missing(Volgorde_paraaf)
         then put "," @;
         else put Volgorde_paraaf @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_FAM_DECLARATIE AS
   SELECT t1.Tra_id,
          t1.Begindatum FORMAT=B8601DT19. AS Begindatum,
          t1.Einddatum FORMAT=B8601DT19. AS Einddatum,
          t1.Totaal_ingediend,
          t1.Totaal_geschoond,
          t1.Vergoedings_pct,
          t1.Betalingsverzoeknummer,
          t1.Afgerekend_jn,
          t1.Periodiek_jn,
          t1.Betaalritme_tra_id,
          t1.Betaaldata_volgnr,
          t1.Creditering_op_tra_id,
          t1.Netto_verstrekking,
          t1.Bruto_vergoeding,
          t1.Verrekenen_nj
     FROM DATAQASG.FAM_DECLARATIE_TCMG t1;
QUIT;

data MIGRATIE.BAS_FAM_DECLARATIE;
  set MIGRATIE.BAS_FAM_DECLARATIE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_FAM_DECLARATIE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Tra_id" 
       ','
          "Begindatum" 
       ','
          "Einddatum" 
       ','
          "Totaal_ingediend" 
       ','
          "Totaal_geschoond" 
       ','
          "Vergoedings_pct" 
       ','
          "Betalingsverzoeknummer" 
       ','
          "Afgerekend_jn" 
       ','
          "Periodiek_jn" 
       ','
          "Betaalritme_tra_id" 
       ','
          "Betaaldata_volgnr" 
       ','
          "Creditering_op_tra_id" 
       ','
          "Netto_verstrekking" 
       ','
          "Bruto_vergoeding" 
       ','
          "Verrekenen_nj" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_FAM_DECLARATIE   end=EFIEOD; 
       format Tra_id best12. ;
       format Begindatum B8601DT19. ;
       format Einddatum B8601DT19. ;
       format Totaal_ingediend best12. ;
       format Totaal_geschoond best12. ;
       format Vergoedings_pct best12. ;
       format Betalingsverzoeknummer  ;
       format Afgerekend_jn  ;
       format Periodiek_jn  ;
       format Betaalritme_tra_id best12. ;
       format Betaaldata_volgnr best12. ;
       format Creditering_op_tra_id best12. ;
       format Netto_verstrekking best12. ;
       format Bruto_vergoeding best12. ;
       format Verrekenen_nj  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Tra_id)
         then put "," @;
         else put Tra_id @;
       if missing(Begindatum)
         then put "," @;
         else put Begindatum @;
       if missing(Einddatum)
         then put "," @;
         else put Einddatum @;
       if missing(Totaal_ingediend)
         then put "," @;
         else put Totaal_ingediend @;
       if missing(Totaal_geschoond)
         then put "," @;
         else put Totaal_geschoond @;
       if missing(Vergoedings_pct)
         then put "," @;
         else put Vergoedings_pct @;
       if missing(Betalingsverzoeknummer)
         then put "," @;
         else do;
                   attrLengte_7008902060440754439=length(Betalingsverzoeknummer);
                   aantalLF_7008902060440754439 = countc(Betalingsverzoeknummer,'0A'x);
                   maxPassend_7008902060440754439=40-1-aantalLF_7008902060440754439;
                   if attrLengte_7008902060440754439 > max(maxPassend_7008902060440754439,1000)
                     then passend_7008902060440754439 = substr(Betalingsverzoeknummer,1,maxPassend_7008902060440754439);
                     else passend_7008902060440754439 = Betalingsverzoeknummer;
                   passend_7008902060440754439 = tranwrd(passend_7008902060440754439,'9D'x,'D0'x);
                   put passend_7008902060440754439 ~ @;
              end;
       if missing(Afgerekend_jn)
         then put "," @;
         else do;
                   attrLengte_2840709479069709876=length(Afgerekend_jn);
                   aantalLF_2840709479069709876 = countc(Afgerekend_jn,'0A'x);
                   maxPassend_2840709479069709876=1-1-aantalLF_2840709479069709876;
                   if attrLengte_2840709479069709876 > max(maxPassend_2840709479069709876,1000)
                     then passend_2840709479069709876 = substr(Afgerekend_jn,1,maxPassend_2840709479069709876);
                     else passend_2840709479069709876 = Afgerekend_jn;
                   passend_2840709479069709876 = tranwrd(passend_2840709479069709876,'9D'x,'D0'x);
                   put passend_2840709479069709876 ~ @;
              end;
       if missing(Periodiek_jn)
         then put "," @;
         else do;
                   attrLengte_8896703581310580981=length(Periodiek_jn);
                   aantalLF_8896703581310580981 = countc(Periodiek_jn,'0A'x);
                   maxPassend_8896703581310580981=1-1-aantalLF_8896703581310580981;
                   if attrLengte_8896703581310580981 > max(maxPassend_8896703581310580981,1000)
                     then passend_8896703581310580981 = substr(Periodiek_jn,1,maxPassend_8896703581310580981);
                     else passend_8896703581310580981 = Periodiek_jn;
                   passend_8896703581310580981 = tranwrd(passend_8896703581310580981,'9D'x,'D0'x);
                   put passend_8896703581310580981 ~ @;
              end;
       if missing(Betaalritme_tra_id)
         then put "," @;
         else put Betaalritme_tra_id @;
       if missing(Betaaldata_volgnr)
         then put "," @;
         else put Betaaldata_volgnr @;
       if missing(Creditering_op_tra_id)
         then put "," @;
         else put Creditering_op_tra_id @;
       if missing(Netto_verstrekking)
         then put "," @;
         else put Netto_verstrekking @;
       if missing(Bruto_vergoeding)
         then put "," @;
         else put Bruto_vergoeding @;
       if missing(Verrekenen_nj)
         then put "," @;
         else do;
                   attrLengte_1950177874282827721=length(Verrekenen_nj);
                   aantalLF_1950177874282827721 = countc(Verrekenen_nj,'0A'x);
                   maxPassend_1950177874282827721=1-1-aantalLF_1950177874282827721;
                   if attrLengte_1950177874282827721 > max(maxPassend_1950177874282827721,1000)
                     then passend_1950177874282827721 = substr(Verrekenen_nj,1,maxPassend_1950177874282827721);
                     else passend_1950177874282827721 = Verrekenen_nj;
                   passend_1950177874282827721 = tranwrd(passend_1950177874282827721,'9D'x,'D0'x);
                   put passend_1950177874282827721 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_FAM_STATUSHISTORIE AS
   SELECT t1.Commentaar,
          t1.Datum_van FORMAT=B8601DT19. AS Datum_van,
          t1.Datum_tot FORMAT=B8601DT19. AS Datum_tot,
          t1.Dos_id,
          t1.Ssg_cd,
          t1.Sts_cd,
          t1.Tra_id,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat
     FROM DATAQASG.FAM_STATUSHISTORIE_TCMG t1;
QUIT;

data MIGRATIE.BAS_FAM_STATUSHISTORIE;
  set MIGRATIE.BAS_FAM_STATUSHISTORIE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_FAM_STATUSHISTORIE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Commentaar" 
       ','
          "Datum_van" 
       ','
          "Datum_tot" 
       ','
          "Dos_id" 
       ','
          "Ssg_cd" 
       ','
          "Sts_cd" 
       ','
          "Tra_id" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_FAM_STATUSHISTORIE   end=EFIEOD; 
       format Commentaar  ;
       format Datum_van B8601DT19. ;
       format Datum_tot B8601DT19. ;
       format Dos_id best12. ;
       format Ssg_cd  ;
       format Sts_cd  ;
       format Tra_id best12. ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Commentaar)
         then put "," @;
         else do;
                   attrLengte_4287257797458721857=length(Commentaar);
                   aantalLF_4287257797458721857 = countc(Commentaar,'0A'x);
                   maxPassend_4287257797458721857=2048-1-aantalLF_4287257797458721857;
                   if attrLengte_4287257797458721857 > max(maxPassend_4287257797458721857,1000)
                     then passend_4287257797458721857 = substr(Commentaar,1,maxPassend_4287257797458721857);
                     else passend_4287257797458721857 = Commentaar;
                   passend_4287257797458721857 = tranwrd(passend_4287257797458721857,'9D'x,'D0'x);
                   put passend_4287257797458721857 ~ @;
              end;
       if missing(Datum_van)
         then put "," @;
         else put Datum_van @;
       if missing(Datum_tot)
         then put "," @;
         else put Datum_tot @;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Ssg_cd)
         then put "," @;
         else do;
                   attrLengte_1782260468804165719=length(Ssg_cd);
                   aantalLF_1782260468804165719 = countc(Ssg_cd,'0A'x);
                   maxPassend_1782260468804165719=1-1-aantalLF_1782260468804165719;
                   if attrLengte_1782260468804165719 > max(maxPassend_1782260468804165719,1000)
                     then passend_1782260468804165719 = substr(Ssg_cd,1,maxPassend_1782260468804165719);
                     else passend_1782260468804165719 = Ssg_cd;
                   passend_1782260468804165719 = tranwrd(passend_1782260468804165719,'9D'x,'D0'x);
                   put passend_1782260468804165719 ~ @;
              end;
       if missing(Sts_cd)
         then put "," @;
         else do;
                   attrLengte_1792820026946084444=length(Sts_cd);
                   aantalLF_1792820026946084444 = countc(Sts_cd,'0A'x);
                   maxPassend_1792820026946084444=3-1-aantalLF_1792820026946084444;
                   if attrLengte_1792820026946084444 > max(maxPassend_1792820026946084444,1000)
                     then passend_1792820026946084444 = substr(Sts_cd,1,maxPassend_1792820026946084444);
                     else passend_1792820026946084444 = Sts_cd;
                   passend_1792820026946084444 = tranwrd(passend_1792820026946084444,'9D'x,'D0'x);
                   put passend_1792820026946084444 ~ @;
              end;
       if missing(Tra_id)
         then put "," @;
         else put Tra_id @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_FAM_TRANSACTIE_REGEL AS
   SELECT t1.Tra_id,
          t1.Rpt_nr,
          t1.Ovk_nr,
          t1.Bgt_cd,
          t1.Rpe_datum_van FORMAT=B8601DT19. AS Rpe_datum_van,
          t1.Vpl_tra_id,
          t1.Prg_id,
          t1.Vpl_volgnummer,
          t1.Jaar,
          t1.Reg_id,
          t1.Reg_nr,
          t1.Bedrag,
          t1.Valutadatum FORMAT=B8601DT19. AS Valutadatum,
          t1.Iban,
          t1.Bic,
          t1.Omhang_jaar,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Cvk_id_geselecteerd,
          t1.Cvk_id_verwerkt,
          t1.Volgnummer,
          t1.Gecorrigeerd_jn,
          t1.Rpt_nr_oud,
          t1.Naar_oracle,
          t1.Boeking,
          t1.Imvb
     FROM DATAQASG.FAM_TRANSACTIE_REGEL_TCMG t1;
QUIT;

data MIGRATIE.BAS_FAM_TRANSACTIE_REGEL;
  set MIGRATIE.BAS_FAM_TRANSACTIE_REGEL;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_FAM_TRANSACTIE_REGEL.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Tra_id" 
       ','
          "Rpt_nr" 
       ','
          "Ovk_nr" 
       ','
          "Bgt_cd" 
       ','
          "Rpe_datum_van" 
       ','
          "Vpl_tra_id" 
       ','
          "Prg_id" 
       ','
          "Vpl_volgnummer" 
       ','
          "Jaar" 
       ','
          "Reg_id" 
       ','
          "Reg_nr" 
       ','
          "Bedrag" 
       ','
          "Valutadatum" 
       ','
          "Iban" 
       ','
          "Bic" 
       ','
          "Omhang_jaar" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Cvk_id_geselecteerd" 
       ','
          "Cvk_id_verwerkt" 
       ','
          "Volgnummer" 
       ','
          "Gecorrigeerd_jn" 
       ','
          "Rpt_nr_oud" 
       ','
          "Naar_oracle" 
       ','
          "Boeking" 
       ','
          "Imvb" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_FAM_TRANSACTIE_REGEL   end=EFIEOD; 
       format Tra_id best12. ;
       format Rpt_nr best12. ;
       format Ovk_nr  ;
       format Bgt_cd  ;
       format Rpe_datum_van B8601DT19. ;
       format Vpl_tra_id best12. ;
       format Prg_id best12. ;
       format Vpl_volgnummer best12. ;
       format Jaar best12. ;
       format Reg_id best12. ;
       format Reg_nr best12. ;
       format Bedrag best12. ;
       format Valutadatum B8601DT19. ;
       format Iban  ;
       format Bic  ;
       format Omhang_jaar best12. ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Cvk_id_geselecteerd best12. ;
       format Cvk_id_verwerkt best12. ;
       format Volgnummer best12. ;
       format Gecorrigeerd_jn  ;
       format Rpt_nr_oud  ;
       format Naar_oracle  ;
       format Boeking  ;
       format Imvb  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Tra_id)
         then put "," @;
         else put Tra_id @;
       if missing(Rpt_nr)
         then put "," @;
         else put Rpt_nr @;
       if missing(Ovk_nr)
         then put "," @;
         else do;
                   attrLengte_7575938694744162813=length(Ovk_nr);
                   aantalLF_7575938694744162813 = countc(Ovk_nr,'0A'x);
                   maxPassend_7575938694744162813=20-1-aantalLF_7575938694744162813;
                   if attrLengte_7575938694744162813 > max(maxPassend_7575938694744162813,1000)
                     then passend_7575938694744162813 = substr(Ovk_nr,1,maxPassend_7575938694744162813);
                     else passend_7575938694744162813 = Ovk_nr;
                   passend_7575938694744162813 = tranwrd(passend_7575938694744162813,'9D'x,'D0'x);
                   put passend_7575938694744162813 ~ @;
              end;
       if missing(Bgt_cd)
         then put "," @;
         else do;
                   attrLengte_7370879967810917187=length(Bgt_cd);
                   aantalLF_7370879967810917187 = countc(Bgt_cd,'0A'x);
                   maxPassend_7370879967810917187=1-1-aantalLF_7370879967810917187;
                   if attrLengte_7370879967810917187 > max(maxPassend_7370879967810917187,1000)
                     then passend_7370879967810917187 = substr(Bgt_cd,1,maxPassend_7370879967810917187);
                     else passend_7370879967810917187 = Bgt_cd;
                   passend_7370879967810917187 = tranwrd(passend_7370879967810917187,'9D'x,'D0'x);
                   put passend_7370879967810917187 ~ @;
              end;
       if missing(Rpe_datum_van)
         then put "," @;
         else put Rpe_datum_van @;
       if missing(Vpl_tra_id)
         then put "," @;
         else put Vpl_tra_id @;
       if missing(Prg_id)
         then put "," @;
         else put Prg_id @;
       if missing(Vpl_volgnummer)
         then put "," @;
         else put Vpl_volgnummer @;
       if missing(Jaar)
         then put "," @;
         else put Jaar @;
       if missing(Reg_id)
         then put "," @;
         else put Reg_id @;
       if missing(Reg_nr)
         then put "," @;
         else put Reg_nr @;
       if missing(Bedrag)
         then put "," @;
         else put Bedrag @;
       if missing(Valutadatum)
         then put "," @;
         else put Valutadatum @;
       if missing(Iban)
         then put "," @;
         else do;
                   attrLengte_8433717562044549680=length(Iban);
                   aantalLF_8433717562044549680 = countc(Iban,'0A'x);
                   maxPassend_8433717562044549680=34-1-aantalLF_8433717562044549680;
                   if attrLengte_8433717562044549680 > max(maxPassend_8433717562044549680,1000)
                     then passend_8433717562044549680 = substr(Iban,1,maxPassend_8433717562044549680);
                     else passend_8433717562044549680 = Iban;
                   passend_8433717562044549680 = tranwrd(passend_8433717562044549680,'9D'x,'D0'x);
                   put passend_8433717562044549680 ~ @;
              end;
       if missing(Bic)
         then put "," @;
         else do;
                   attrLengte_8393283933206478573=length(Bic);
                   aantalLF_8393283933206478573 = countc(Bic,'0A'x);
                   maxPassend_8393283933206478573=11-1-aantalLF_8393283933206478573;
                   if attrLengte_8393283933206478573 > max(maxPassend_8393283933206478573,1000)
                     then passend_8393283933206478573 = substr(Bic,1,maxPassend_8393283933206478573);
                     else passend_8393283933206478573 = Bic;
                   passend_8393283933206478573 = tranwrd(passend_8393283933206478573,'9D'x,'D0'x);
                   put passend_8393283933206478573 ~ @;
              end;
       if missing(Omhang_jaar)
         then put "," @;
         else put Omhang_jaar @;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Cvk_id_geselecteerd)
         then put "," @;
         else put Cvk_id_geselecteerd @;
       if missing(Cvk_id_verwerkt)
         then put "," @;
         else put Cvk_id_verwerkt @;
       if missing(Volgnummer)
         then put "," @;
         else put Volgnummer @;
       if missing(Gecorrigeerd_jn)
         then put "," @;
         else do;
                   attrLengte_4433448625209033040=length(Gecorrigeerd_jn);
                   aantalLF_4433448625209033040 = countc(Gecorrigeerd_jn,'0A'x);
                   maxPassend_4433448625209033040=1-1-aantalLF_4433448625209033040;
                   if attrLengte_4433448625209033040 > max(maxPassend_4433448625209033040,1000)
                     then passend_4433448625209033040 = substr(Gecorrigeerd_jn,1,maxPassend_4433448625209033040);
                     else passend_4433448625209033040 = Gecorrigeerd_jn;
                   passend_4433448625209033040 = tranwrd(passend_4433448625209033040,'9D'x,'D0'x);
                   put passend_4433448625209033040 ~ @;
              end;
       if missing(Rpt_nr_oud)
         then put "," @;
         else do;
                   attrLengte_6398700462504815438=length(Rpt_nr_oud);
                   aantalLF_6398700462504815438 = countc(Rpt_nr_oud,'0A'x);
                   maxPassend_6398700462504815438=20-1-aantalLF_6398700462504815438;
                   if attrLengte_6398700462504815438 > max(maxPassend_6398700462504815438,1000)
                     then passend_6398700462504815438 = substr(Rpt_nr_oud,1,maxPassend_6398700462504815438);
                     else passend_6398700462504815438 = Rpt_nr_oud;
                   passend_6398700462504815438 = tranwrd(passend_6398700462504815438,'9D'x,'D0'x);
                   put passend_6398700462504815438 ~ @;
              end;
       if missing(Naar_oracle)
         then put "," @;
         else do;
                   attrLengte_568356442792058170=length(Naar_oracle);
                   aantalLF_568356442792058170 = countc(Naar_oracle,'0A'x);
                   maxPassend_568356442792058170=1-1-aantalLF_568356442792058170;
                   if attrLengte_568356442792058170 > max(maxPassend_568356442792058170,1000)
                     then passend_568356442792058170 = substr(Naar_oracle,1,maxPassend_568356442792058170);
                     else passend_568356442792058170 = Naar_oracle;
                   passend_568356442792058170 = tranwrd(passend_568356442792058170,'9D'x,'D0'x);
                   put passend_568356442792058170 ~ @;
              end;
       if missing(Boeking)
         then put "," @;
         else do;
                   attrLengte_1952708952664785282=length(Boeking);
                   aantalLF_1952708952664785282 = countc(Boeking,'0A'x);
                   maxPassend_1952708952664785282=1-1-aantalLF_1952708952664785282;
                   if attrLengte_1952708952664785282 > max(maxPassend_1952708952664785282,1000)
                     then passend_1952708952664785282 = substr(Boeking,1,maxPassend_1952708952664785282);
                     else passend_1952708952664785282 = Boeking;
                   passend_1952708952664785282 = tranwrd(passend_1952708952664785282,'9D'x,'D0'x);
                   put passend_1952708952664785282 ~ @;
              end;
       if missing(Imvb)
         then put "," @;
         else do;
                   attrLengte_6245674353508173474=length(Imvb);
                   aantalLF_6245674353508173474 = countc(Imvb,'0A'x);
                   maxPassend_6245674353508173474=1-1-aantalLF_6245674353508173474;
                   if attrLengte_6245674353508173474 > max(maxPassend_6245674353508173474,1000)
                     then passend_6245674353508173474 = substr(Imvb,1,maxPassend_6245674353508173474);
                     else passend_6245674353508173474 = Imvb;
                   passend_6245674353508173474 = tranwrd(passend_6245674353508173474,'9D'x,'D0'x);
                   put passend_6245674353508173474 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_FAM_TRANSACTIE AS
   SELECT t1.Volgnummer,
          t1.Tra_id,
          t1.Prg_id,
          t1.Jaar,
          t1.Dos_id,
          t1.Tra_cd,
          t1.Reden,
          t1.bedrag,
          t1.Bedrag_nlg,
          t1.Datum FORMAT=B8601DT19. AS Datum,
          t1.Valutadatum FORMAT=B8601DT19. AS Valutadatum,
          t1.Fam_verplichting,
          t1.Fam_declaratie,
          t1.Fam_bij_rente,
          t1.Fam_kwijtschelding,
          t1.Fam_rest_voorschot,
          t1.Fam_overboeking,
          t1.Fam_aflossing,
          t1.Fam_budgetmutatie,
          t1.Fam_rest_aflossing,
          t1.Fam_betaalritme,
          t1.Sts_cd,
          t1.Ssg_cd,
          t1.Correctie,
          t1.Correctie_volgnr,
          t1.Tra_id_van,
          t1.Vst_id,
          t1.Rel_id,
          t1.Rol_cd,
          t1.Datum_acc_afd FORMAT=B8601DT19. AS Datum_acc_afd,
          t1.Referentie,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Bedrag_ex_btw,
          t1.Vst_volgnr,
          t1.Duurzaam_jn,
          t1.Run_id,
          t1.Fam_vordering,
          t1.Fam_vordering_afhandeling,
          t1.Vordering_tra_id,
          t1.Storneren,
          t1.Vordering_bedrag,
          t1.Afgelost,
          t1.Kwijtgescholden,
          t1.Tmp_vordering_id,
          t1.Omhang_jaar,
          t1.Omhang_jn,
          t1.Tra_id_rv,
          t1.Tra_id_dcv,
          t1.Jz_id,
          t1.Afreken_tra_id,
          t1.Correctie_bedrag_bob,
          t1.Vordering_status,
          t1.On_hold,
          t1.Termijn_uitstel FORMAT=B8601DT19. AS Termijn_uitstel,
          t1.Tra_id_ean_eap
     FROM DATAQASG.FAM_TRANSACTIE_TCMG t1;
QUIT;

data MIGRATIE.BAS_FAM_TRANSACTIE;
  set MIGRATIE.BAS_FAM_TRANSACTIE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_FAM_TRANSACTIE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Volgnummer" 
       ','
          "Tra_id" 
       ','
          "Prg_id" 
       ','
          "Jaar" 
       ','
          "Dos_id" 
       ','
          "Tra_cd" 
       ','
          "Reden" 
       ','
          "bedrag" 
       ','
          "Bedrag_nlg" 
       ','
          "Datum" 
       ','
          "Valutadatum" 
       ','
          "Fam_verplichting" 
       ','
          "Fam_declaratie" 
       ','
          "Fam_bij_rente" 
       ','
          "Fam_kwijtschelding" 
       ','
          "Fam_rest_voorschot" 
       ','
          "Fam_overboeking" 
       ','
          "Fam_aflossing" 
       ','
          "Fam_budgetmutatie" 
       ','
          "Fam_rest_aflossing" 
       ','
          "Fam_betaalritme" 
       ','
          "Sts_cd" 
       ','
          "Ssg_cd" 
       ','
          "Correctie" 
       ','
          "Correctie_volgnr" 
       ','
          "Tra_id_van" 
       ','
          "Vst_id" 
       ','
          "Rel_id" 
       ','
          "Rol_cd" 
       ','
          "Datum_acc_afd" 
       ','
          "Referentie" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Bedrag_ex_btw" 
       ','
          "Vst_volgnr" 
       ','
          "Duurzaam_jn" 
       ','
          "Run_id" 
       ','
          "Fam_vordering" 
       ','
          "Fam_vordering_afhandeling" 
       ','
          "Vordering_tra_id" 
       ','
          "Storneren" 
       ','
          "Vordering_bedrag" 
       ','
          "Afgelost" 
       ','
          "Kwijtgescholden" 
       ','
          "Tmp_vordering_id" 
       ','
          "Omhang_jaar" 
       ','
          "Omhang_jn" 
       ','
          "Tra_id_rv" 
       ','
          "Tra_id_dcv" 
       ','
          "Jz_id" 
       ','
          "Afreken_tra_id" 
       ','
          "Correctie_bedrag_bob" 
       ','
          "Vordering_status" 
       ','
          "On_hold" 
       ','
          "Termijn_uitstel" 
       ','
          "Tra_id_ean_eap" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_FAM_TRANSACTIE   end=EFIEOD; 
       format Volgnummer best12. ;
       format Tra_id best12. ;
       format Prg_id best12. ;
       format Jaar best12. ;
       format Dos_id best12. ;
       format Tra_cd  ;
       format Reden  ;
       format bedrag best12. ;
       format Bedrag_nlg best12. ;
       format Datum B8601DT19. ;
       format Valutadatum B8601DT19. ;
       format Fam_verplichting  ;
       format Fam_declaratie  ;
       format Fam_bij_rente  ;
       format Fam_kwijtschelding  ;
       format Fam_rest_voorschot  ;
       format Fam_overboeking  ;
       format Fam_aflossing  ;
       format Fam_budgetmutatie  ;
       format Fam_rest_aflossing  ;
       format Fam_betaalritme  ;
       format Sts_cd  ;
       format Ssg_cd  ;
       format Correctie  ;
       format Correctie_volgnr best12. ;
       format Tra_id_van best12. ;
       format Vst_id best12. ;
       format Rel_id best12. ;
       format Rol_cd  ;
       format Datum_acc_afd B8601DT19. ;
       format Referentie  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Bedrag_ex_btw best12. ;
       format Vst_volgnr best12. ;
       format Duurzaam_jn  ;
       format Run_id best12. ;
       format Fam_vordering  ;
       format Fam_vordering_afhandeling  ;
       format Vordering_tra_id best12. ;
       format Storneren  ;
       format Vordering_bedrag best12. ;
       format Afgelost best12. ;
       format Kwijtgescholden best12. ;
       format Tmp_vordering_id best12. ;
       format Omhang_jaar best12. ;
       format Omhang_jn  ;
       format Tra_id_rv best12. ;
       format Tra_id_dcv best12. ;
       format Jz_id best12. ;
       format Afreken_tra_id best12. ;
       format Correctie_bedrag_bob best12. ;
       format Vordering_status  ;
       format On_hold  ;
       format Termijn_uitstel B8601DT19. ;
       format Tra_id_ean_eap best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Volgnummer)
         then put "," @;
         else put Volgnummer @;
       if missing(Tra_id)
         then put "," @;
         else put Tra_id @;
       if missing(Prg_id)
         then put "," @;
         else put Prg_id @;
       if missing(Jaar)
         then put "," @;
         else put Jaar @;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Tra_cd)
         then put "," @;
         else do;
                   attrLengte_6253283794989270681=length(Tra_cd);
                   aantalLF_6253283794989270681 = countc(Tra_cd,'0A'x);
                   maxPassend_6253283794989270681=3-1-aantalLF_6253283794989270681;
                   if attrLengte_6253283794989270681 > max(maxPassend_6253283794989270681,1000)
                     then passend_6253283794989270681 = substr(Tra_cd,1,maxPassend_6253283794989270681);
                     else passend_6253283794989270681 = Tra_cd;
                   passend_6253283794989270681 = tranwrd(passend_6253283794989270681,'9D'x,'D0'x);
                   put passend_6253283794989270681 ~ @;
              end;
       if missing(Reden)
         then put "," @;
         else do;
                   attrLengte_1098176494781784809=length(Reden);
                   aantalLF_1098176494781784809 = countc(Reden,'0A'x);
                   maxPassend_1098176494781784809=8000-1-aantalLF_1098176494781784809;
                   if attrLengte_1098176494781784809 > max(maxPassend_1098176494781784809,1000)
                     then passend_1098176494781784809 = substr(Reden,1,maxPassend_1098176494781784809);
                     else passend_1098176494781784809 = Reden;
                   passend_1098176494781784809 = tranwrd(passend_1098176494781784809,'9D'x,'D0'x);
                   put passend_1098176494781784809 ~ @;
              end;
       if missing(bedrag)
         then put "," @;
         else put bedrag @;
       if missing(Bedrag_nlg)
         then put "," @;
         else put Bedrag_nlg @;
       if missing(Datum)
         then put "," @;
         else put Datum @;
       if missing(Valutadatum)
         then put "," @;
         else put Valutadatum @;
       if missing(Fam_verplichting)
         then put "," @;
         else do;
                   attrLengte_1212276818799146410=length(Fam_verplichting);
                   aantalLF_1212276818799146410 = countc(Fam_verplichting,'0A'x);
                   maxPassend_1212276818799146410=1-1-aantalLF_1212276818799146410;
                   if attrLengte_1212276818799146410 > max(maxPassend_1212276818799146410,1000)
                     then passend_1212276818799146410 = substr(Fam_verplichting,1,maxPassend_1212276818799146410);
                     else passend_1212276818799146410 = Fam_verplichting;
                   passend_1212276818799146410 = tranwrd(passend_1212276818799146410,'9D'x,'D0'x);
                   put passend_1212276818799146410 ~ @;
              end;
       if missing(Fam_declaratie)
         then put "," @;
         else do;
                   attrLengte_4153370524296179899=length(Fam_declaratie);
                   aantalLF_4153370524296179899 = countc(Fam_declaratie,'0A'x);
                   maxPassend_4153370524296179899=1-1-aantalLF_4153370524296179899;
                   if attrLengte_4153370524296179899 > max(maxPassend_4153370524296179899,1000)
                     then passend_4153370524296179899 = substr(Fam_declaratie,1,maxPassend_4153370524296179899);
                     else passend_4153370524296179899 = Fam_declaratie;
                   passend_4153370524296179899 = tranwrd(passend_4153370524296179899,'9D'x,'D0'x);
                   put passend_4153370524296179899 ~ @;
              end;
       if missing(Fam_bij_rente)
         then put "," @;
         else do;
                   attrLengte_4443879735266284666=length(Fam_bij_rente);
                   aantalLF_4443879735266284666 = countc(Fam_bij_rente,'0A'x);
                   maxPassend_4443879735266284666=1-1-aantalLF_4443879735266284666;
                   if attrLengte_4443879735266284666 > max(maxPassend_4443879735266284666,1000)
                     then passend_4443879735266284666 = substr(Fam_bij_rente,1,maxPassend_4443879735266284666);
                     else passend_4443879735266284666 = Fam_bij_rente;
                   passend_4443879735266284666 = tranwrd(passend_4443879735266284666,'9D'x,'D0'x);
                   put passend_4443879735266284666 ~ @;
              end;
       if missing(Fam_kwijtschelding)
         then put "," @;
         else do;
                   attrLengte_3567572823611571931=length(Fam_kwijtschelding);
                   aantalLF_3567572823611571931 = countc(Fam_kwijtschelding,'0A'x);
                   maxPassend_3567572823611571931=1-1-aantalLF_3567572823611571931;
                   if attrLengte_3567572823611571931 > max(maxPassend_3567572823611571931,1000)
                     then passend_3567572823611571931 = substr(Fam_kwijtschelding,1,maxPassend_3567572823611571931);
                     else passend_3567572823611571931 = Fam_kwijtschelding;
                   passend_3567572823611571931 = tranwrd(passend_3567572823611571931,'9D'x,'D0'x);
                   put passend_3567572823611571931 ~ @;
              end;
       if missing(Fam_rest_voorschot)
         then put "," @;
         else do;
                   attrLengte_1702809178028524379=length(Fam_rest_voorschot);
                   aantalLF_1702809178028524379 = countc(Fam_rest_voorschot,'0A'x);
                   maxPassend_1702809178028524379=1-1-aantalLF_1702809178028524379;
                   if attrLengte_1702809178028524379 > max(maxPassend_1702809178028524379,1000)
                     then passend_1702809178028524379 = substr(Fam_rest_voorschot,1,maxPassend_1702809178028524379);
                     else passend_1702809178028524379 = Fam_rest_voorschot;
                   passend_1702809178028524379 = tranwrd(passend_1702809178028524379,'9D'x,'D0'x);
                   put passend_1702809178028524379 ~ @;
              end;
       if missing(Fam_overboeking)
         then put "," @;
         else do;
                   attrLengte_4845185038860361699=length(Fam_overboeking);
                   aantalLF_4845185038860361699 = countc(Fam_overboeking,'0A'x);
                   maxPassend_4845185038860361699=1-1-aantalLF_4845185038860361699;
                   if attrLengte_4845185038860361699 > max(maxPassend_4845185038860361699,1000)
                     then passend_4845185038860361699 = substr(Fam_overboeking,1,maxPassend_4845185038860361699);
                     else passend_4845185038860361699 = Fam_overboeking;
                   passend_4845185038860361699 = tranwrd(passend_4845185038860361699,'9D'x,'D0'x);
                   put passend_4845185038860361699 ~ @;
              end;
       if missing(Fam_aflossing)
         then put "," @;
         else do;
                   attrLengte_3391817755152401814=length(Fam_aflossing);
                   aantalLF_3391817755152401814 = countc(Fam_aflossing,'0A'x);
                   maxPassend_3391817755152401814=1-1-aantalLF_3391817755152401814;
                   if attrLengte_3391817755152401814 > max(maxPassend_3391817755152401814,1000)
                     then passend_3391817755152401814 = substr(Fam_aflossing,1,maxPassend_3391817755152401814);
                     else passend_3391817755152401814 = Fam_aflossing;
                   passend_3391817755152401814 = tranwrd(passend_3391817755152401814,'9D'x,'D0'x);
                   put passend_3391817755152401814 ~ @;
              end;
       if missing(Fam_budgetmutatie)
         then put "," @;
         else do;
                   attrLengte_3285042740688401232=length(Fam_budgetmutatie);
                   aantalLF_3285042740688401232 = countc(Fam_budgetmutatie,'0A'x);
                   maxPassend_3285042740688401232=1-1-aantalLF_3285042740688401232;
                   if attrLengte_3285042740688401232 > max(maxPassend_3285042740688401232,1000)
                     then passend_3285042740688401232 = substr(Fam_budgetmutatie,1,maxPassend_3285042740688401232);
                     else passend_3285042740688401232 = Fam_budgetmutatie;
                   passend_3285042740688401232 = tranwrd(passend_3285042740688401232,'9D'x,'D0'x);
                   put passend_3285042740688401232 ~ @;
              end;
       if missing(Fam_rest_aflossing)
         then put "," @;
         else do;
                   attrLengte_931749659403633718=length(Fam_rest_aflossing);
                   aantalLF_931749659403633718 = countc(Fam_rest_aflossing,'0A'x);
                   maxPassend_931749659403633718=1-1-aantalLF_931749659403633718;
                   if attrLengte_931749659403633718 > max(maxPassend_931749659403633718,1000)
                     then passend_931749659403633718 = substr(Fam_rest_aflossing,1,maxPassend_931749659403633718);
                     else passend_931749659403633718 = Fam_rest_aflossing;
                   passend_931749659403633718 = tranwrd(passend_931749659403633718,'9D'x,'D0'x);
                   put passend_931749659403633718 ~ @;
              end;
       if missing(Fam_betaalritme)
         then put "," @;
         else do;
                   attrLengte_4931477478695952912=length(Fam_betaalritme);
                   aantalLF_4931477478695952912 = countc(Fam_betaalritme,'0A'x);
                   maxPassend_4931477478695952912=1-1-aantalLF_4931477478695952912;
                   if attrLengte_4931477478695952912 > max(maxPassend_4931477478695952912,1000)
                     then passend_4931477478695952912 = substr(Fam_betaalritme,1,maxPassend_4931477478695952912);
                     else passend_4931477478695952912 = Fam_betaalritme;
                   passend_4931477478695952912 = tranwrd(passend_4931477478695952912,'9D'x,'D0'x);
                   put passend_4931477478695952912 ~ @;
              end;
       if missing(Sts_cd)
         then put "," @;
         else do;
                   attrLengte_1792820026946084444=length(Sts_cd);
                   aantalLF_1792820026946084444 = countc(Sts_cd,'0A'x);
                   maxPassend_1792820026946084444=3-1-aantalLF_1792820026946084444;
                   if attrLengte_1792820026946084444 > max(maxPassend_1792820026946084444,1000)
                     then passend_1792820026946084444 = substr(Sts_cd,1,maxPassend_1792820026946084444);
                     else passend_1792820026946084444 = Sts_cd;
                   passend_1792820026946084444 = tranwrd(passend_1792820026946084444,'9D'x,'D0'x);
                   put passend_1792820026946084444 ~ @;
              end;
       if missing(Ssg_cd)
         then put "," @;
         else do;
                   attrLengte_1782260468804165719=length(Ssg_cd);
                   aantalLF_1782260468804165719 = countc(Ssg_cd,'0A'x);
                   maxPassend_1782260468804165719=1-1-aantalLF_1782260468804165719;
                   if attrLengte_1782260468804165719 > max(maxPassend_1782260468804165719,1000)
                     then passend_1782260468804165719 = substr(Ssg_cd,1,maxPassend_1782260468804165719);
                     else passend_1782260468804165719 = Ssg_cd;
                   passend_1782260468804165719 = tranwrd(passend_1782260468804165719,'9D'x,'D0'x);
                   put passend_1782260468804165719 ~ @;
              end;
       if missing(Correctie)
         then put "," @;
         else do;
                   attrLengte_7673245136764010259=length(Correctie);
                   aantalLF_7673245136764010259 = countc(Correctie,'0A'x);
                   maxPassend_7673245136764010259=1-1-aantalLF_7673245136764010259;
                   if attrLengte_7673245136764010259 > max(maxPassend_7673245136764010259,1000)
                     then passend_7673245136764010259 = substr(Correctie,1,maxPassend_7673245136764010259);
                     else passend_7673245136764010259 = Correctie;
                   passend_7673245136764010259 = tranwrd(passend_7673245136764010259,'9D'x,'D0'x);
                   put passend_7673245136764010259 ~ @;
              end;
       if missing(Correctie_volgnr)
         then put "," @;
         else put Correctie_volgnr @;
       if missing(Tra_id_van)
         then put "," @;
         else put Tra_id_van @;
       if missing(Vst_id)
         then put "," @;
         else put Vst_id @;
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(Rol_cd)
         then put "," @;
         else do;
                   attrLengte_3864349925788261245=length(Rol_cd);
                   aantalLF_3864349925788261245 = countc(Rol_cd,'0A'x);
                   maxPassend_3864349925788261245=3-1-aantalLF_3864349925788261245;
                   if attrLengte_3864349925788261245 > max(maxPassend_3864349925788261245,1000)
                     then passend_3864349925788261245 = substr(Rol_cd,1,maxPassend_3864349925788261245);
                     else passend_3864349925788261245 = Rol_cd;
                   passend_3864349925788261245 = tranwrd(passend_3864349925788261245,'9D'x,'D0'x);
                   put passend_3864349925788261245 ~ @;
              end;
       if missing(Datum_acc_afd)
         then put "," @;
         else put Datum_acc_afd @;
       if missing(Referentie)
         then put "," @;
         else do;
                   attrLengte_6085349322089225769=length(Referentie);
                   aantalLF_6085349322089225769 = countc(Referentie,'0A'x);
                   maxPassend_6085349322089225769=10-1-aantalLF_6085349322089225769;
                   if attrLengte_6085349322089225769 > max(maxPassend_6085349322089225769,1000)
                     then passend_6085349322089225769 = substr(Referentie,1,maxPassend_6085349322089225769);
                     else passend_6085349322089225769 = Referentie;
                   passend_6085349322089225769 = tranwrd(passend_6085349322089225769,'9D'x,'D0'x);
                   put passend_6085349322089225769 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Bedrag_ex_btw)
         then put "," @;
         else put Bedrag_ex_btw @;
       if missing(Vst_volgnr)
         then put "," @;
         else put Vst_volgnr @;
       if missing(Duurzaam_jn)
         then put "," @;
         else do;
                   attrLengte_422512166785287787=length(Duurzaam_jn);
                   aantalLF_422512166785287787 = countc(Duurzaam_jn,'0A'x);
                   maxPassend_422512166785287787=1-1-aantalLF_422512166785287787;
                   if attrLengte_422512166785287787 > max(maxPassend_422512166785287787,1000)
                     then passend_422512166785287787 = substr(Duurzaam_jn,1,maxPassend_422512166785287787);
                     else passend_422512166785287787 = Duurzaam_jn;
                   passend_422512166785287787 = tranwrd(passend_422512166785287787,'9D'x,'D0'x);
                   put passend_422512166785287787 ~ @;
              end;
       if missing(Run_id)
         then put "," @;
         else put Run_id @;
       if missing(Fam_vordering)
         then put "," @;
         else do;
                   attrLengte_6608173593154079080=length(Fam_vordering);
                   aantalLF_6608173593154079080 = countc(Fam_vordering,'0A'x);
                   maxPassend_6608173593154079080=1-1-aantalLF_6608173593154079080;
                   if attrLengte_6608173593154079080 > max(maxPassend_6608173593154079080,1000)
                     then passend_6608173593154079080 = substr(Fam_vordering,1,maxPassend_6608173593154079080);
                     else passend_6608173593154079080 = Fam_vordering;
                   passend_6608173593154079080 = tranwrd(passend_6608173593154079080,'9D'x,'D0'x);
                   put passend_6608173593154079080 ~ @;
              end;
       if missing(Fam_vordering_afhandeling)
         then put "," @;
         else do;
                   attrLengte_5559502497052717358=length(Fam_vordering_afhandeling);
                   aantalLF_5559502497052717358 = countc(Fam_vordering_afhandeling,'0A'x);
                   maxPassend_5559502497052717358=1-1-aantalLF_5559502497052717358;
                   if attrLengte_5559502497052717358 > max(maxPassend_5559502497052717358,1000)
                     then passend_5559502497052717358 = substr(Fam_vordering_afhandeling,1,maxPassend_5559502497052717358);
                     else passend_5559502497052717358 = Fam_vordering_afhandeling;
                   passend_5559502497052717358 = tranwrd(passend_5559502497052717358,'9D'x,'D0'x);
                   put passend_5559502497052717358 ~ @;
              end;
       if missing(Vordering_tra_id)
         then put "," @;
         else put Vordering_tra_id @;
       if missing(Storneren)
         then put "," @;
         else do;
                   attrLengte_3758669671063171765=length(Storneren);
                   aantalLF_3758669671063171765 = countc(Storneren,'0A'x);
                   maxPassend_3758669671063171765=1-1-aantalLF_3758669671063171765;
                   if attrLengte_3758669671063171765 > max(maxPassend_3758669671063171765,1000)
                     then passend_3758669671063171765 = substr(Storneren,1,maxPassend_3758669671063171765);
                     else passend_3758669671063171765 = Storneren;
                   passend_3758669671063171765 = tranwrd(passend_3758669671063171765,'9D'x,'D0'x);
                   put passend_3758669671063171765 ~ @;
              end;
       if missing(Vordering_bedrag)
         then put "," @;
         else put Vordering_bedrag @;
       if missing(Afgelost)
         then put "," @;
         else put Afgelost @;
       if missing(Kwijtgescholden)
         then put "," @;
         else put Kwijtgescholden @;
       if missing(Tmp_vordering_id)
         then put "," @;
         else put Tmp_vordering_id @;
       if missing(Omhang_jaar)
         then put "," @;
         else put Omhang_jaar @;
       if missing(Omhang_jn)
         then put "," @;
         else do;
                   attrLengte_2494011778403761468=length(Omhang_jn);
                   aantalLF_2494011778403761468 = countc(Omhang_jn,'0A'x);
                   maxPassend_2494011778403761468=1-1-aantalLF_2494011778403761468;
                   if attrLengte_2494011778403761468 > max(maxPassend_2494011778403761468,1000)
                     then passend_2494011778403761468 = substr(Omhang_jn,1,maxPassend_2494011778403761468);
                     else passend_2494011778403761468 = Omhang_jn;
                   passend_2494011778403761468 = tranwrd(passend_2494011778403761468,'9D'x,'D0'x);
                   put passend_2494011778403761468 ~ @;
              end;
       if missing(Tra_id_rv)
         then put "," @;
         else put Tra_id_rv @;
       if missing(Tra_id_dcv)
         then put "," @;
         else put Tra_id_dcv @;
       if missing(Jz_id)
         then put "," @;
         else put Jz_id @;
       if missing(Afreken_tra_id)
         then put "," @;
         else put Afreken_tra_id @;
       if missing(Correctie_bedrag_bob)
         then put "," @;
         else put Correctie_bedrag_bob @;
       if missing(Vordering_status)
         then put "," @;
         else do;
                   attrLengte_4684164286917011191=length(Vordering_status);
                   aantalLF_4684164286917011191 = countc(Vordering_status,'0A'x);
                   maxPassend_4684164286917011191=3-1-aantalLF_4684164286917011191;
                   if attrLengte_4684164286917011191 > max(maxPassend_4684164286917011191,1000)
                     then passend_4684164286917011191 = substr(Vordering_status,1,maxPassend_4684164286917011191);
                     else passend_4684164286917011191 = Vordering_status;
                   passend_4684164286917011191 = tranwrd(passend_4684164286917011191,'9D'x,'D0'x);
                   put passend_4684164286917011191 ~ @;
              end;
       if missing(On_hold)
         then put "," @;
         else do;
                   attrLengte_6530276695478526136=length(On_hold);
                   aantalLF_6530276695478526136 = countc(On_hold,'0A'x);
                   maxPassend_6530276695478526136=255-1-aantalLF_6530276695478526136;
                   if attrLengte_6530276695478526136 > max(maxPassend_6530276695478526136,1000)
                     then passend_6530276695478526136 = substr(On_hold,1,maxPassend_6530276695478526136);
                     else passend_6530276695478526136 = On_hold;
                   passend_6530276695478526136 = tranwrd(passend_6530276695478526136,'9D'x,'D0'x);
                   put passend_6530276695478526136 ~ @;
              end;
       if missing(Termijn_uitstel)
         then put "," @;
         else put Termijn_uitstel @;
       if missing(Tra_id_ean_eap)
         then put "," @;
         else put Tra_id_ean_eap @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_FAM_VERPLICHTING AS
   SELECT t1.Tra_id,
          t1.Reg_id,
          t1.Reg_nr,
          t1.Verplichtingssoort,
          t1.Omschrijving,
          t1.Totaal_ingediend,
          t1.Gevraagd,
          t1.Totaal_geschoond,
          t1.Vergoedings_pct,
          t1.Intake_datum FORMAT=B8601DT19. AS Intake_datum,
          t1.Nota_datum FORMAT=B8601DT19. AS Nota_datum,
          t1.Panel_datum FORMAT=B8601DT19. AS Panel_datum,
          t1.Overige_subsidie,
          t1.Ikb_naam,
          t1.Inkoopbevinding,
          t1.Inkoopbevinding_user,
          t1.Betalingsverzoeknummer
     FROM DATAQASG.FAM_VERPLICHTING_TCMG t1;
QUIT;

data MIGRATIE.BAS_FAM_VERPLICHTING;
  set MIGRATIE.BAS_FAM_VERPLICHTING;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_FAM_VERPLICHTING.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Tra_id" 
       ','
          "Reg_id" 
       ','
          "Reg_nr" 
       ','
          "Verplichtingssoort" 
       ','
          "Omschrijving" 
       ','
          "Totaal_ingediend" 
       ','
          "Gevraagd" 
       ','
          "Totaal_geschoond" 
       ','
          "Vergoedings_pct" 
       ','
          "Intake_datum" 
       ','
          "Nota_datum" 
       ','
          "Panel_datum" 
       ','
          "Overige_subsidie" 
       ','
          "Ikb_naam" 
       ','
          "Inkoopbevinding" 
       ','
          "Inkoopbevinding_user" 
       ','
          "Betalingsverzoeknummer" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_FAM_VERPLICHTING   end=EFIEOD; 
       format Tra_id best12. ;
       format Reg_id best12. ;
       format Reg_nr best12. ;
       format Verplichtingssoort  ;
       format Omschrijving  ;
       format Totaal_ingediend best12. ;
       format Gevraagd best12. ;
       format Totaal_geschoond best12. ;
       format Vergoedings_pct best12. ;
       format Intake_datum B8601DT19. ;
       format Nota_datum B8601DT19. ;
       format Panel_datum B8601DT19. ;
       format Overige_subsidie best12. ;
       format Ikb_naam  ;
       format Inkoopbevinding  ;
       format Inkoopbevinding_user  ;
       format Betalingsverzoeknummer  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Tra_id)
         then put "," @;
         else put Tra_id @;
       if missing(Reg_id)
         then put "," @;
         else put Reg_id @;
       if missing(Reg_nr)
         then put "," @;
         else put Reg_nr @;
       if missing(Verplichtingssoort)
         then put "," @;
         else do;
                   attrLengte_6135999788213756481=length(Verplichtingssoort);
                   aantalLF_6135999788213756481 = countc(Verplichtingssoort,'0A'x);
                   maxPassend_6135999788213756481=1-1-aantalLF_6135999788213756481;
                   if attrLengte_6135999788213756481 > max(maxPassend_6135999788213756481,1000)
                     then passend_6135999788213756481 = substr(Verplichtingssoort,1,maxPassend_6135999788213756481);
                     else passend_6135999788213756481 = Verplichtingssoort;
                   passend_6135999788213756481 = tranwrd(passend_6135999788213756481,'9D'x,'D0'x);
                   put passend_6135999788213756481 ~ @;
              end;
       if missing(Omschrijving)
         then put "," @;
         else do;
                   attrLengte_2792940614022500175=length(Omschrijving);
                   aantalLF_2792940614022500175 = countc(Omschrijving,'0A'x);
                   maxPassend_2792940614022500175=30-1-aantalLF_2792940614022500175;
                   if attrLengte_2792940614022500175 > max(maxPassend_2792940614022500175,1000)
                     then passend_2792940614022500175 = substr(Omschrijving,1,maxPassend_2792940614022500175);
                     else passend_2792940614022500175 = Omschrijving;
                   passend_2792940614022500175 = tranwrd(passend_2792940614022500175,'9D'x,'D0'x);
                   put passend_2792940614022500175 ~ @;
              end;
       if missing(Totaal_ingediend)
         then put "," @;
         else put Totaal_ingediend @;
       if missing(Gevraagd)
         then put "," @;
         else put Gevraagd @;
       if missing(Totaal_geschoond)
         then put "," @;
         else put Totaal_geschoond @;
       if missing(Vergoedings_pct)
         then put "," @;
         else put Vergoedings_pct @;
       if missing(Intake_datum)
         then put "," @;
         else put Intake_datum @;
       if missing(Nota_datum)
         then put "," @;
         else put Nota_datum @;
       if missing(Panel_datum)
         then put "," @;
         else put Panel_datum @;
       if missing(Overige_subsidie)
         then put "," @;
         else put Overige_subsidie @;
       if missing(Ikb_naam)
         then put "," @;
         else do;
                   attrLengte_2756989652093128784=length(Ikb_naam);
                   aantalLF_2756989652093128784 = countc(Ikb_naam,'0A'x);
                   maxPassend_2756989652093128784=10-1-aantalLF_2756989652093128784;
                   if attrLengte_2756989652093128784 > max(maxPassend_2756989652093128784,1000)
                     then passend_2756989652093128784 = substr(Ikb_naam,1,maxPassend_2756989652093128784);
                     else passend_2756989652093128784 = Ikb_naam;
                   passend_2756989652093128784 = tranwrd(passend_2756989652093128784,'9D'x,'D0'x);
                   put passend_2756989652093128784 ~ @;
              end;
       if missing(Inkoopbevinding)
         then put "," @;
         else do;
                   attrLengte_1618217091633064195=length(Inkoopbevinding);
                   aantalLF_1618217091633064195 = countc(Inkoopbevinding,'0A'x);
                   maxPassend_1618217091633064195=30-1-aantalLF_1618217091633064195;
                   if attrLengte_1618217091633064195 > max(maxPassend_1618217091633064195,1000)
                     then passend_1618217091633064195 = substr(Inkoopbevinding,1,maxPassend_1618217091633064195);
                     else passend_1618217091633064195 = Inkoopbevinding;
                   passend_1618217091633064195 = tranwrd(passend_1618217091633064195,'9D'x,'D0'x);
                   put passend_1618217091633064195 ~ @;
              end;
       if missing(Inkoopbevinding_user)
         then put "," @;
         else do;
                   attrLengte_496588120254909598=length(Inkoopbevinding_user);
                   aantalLF_496588120254909598 = countc(Inkoopbevinding_user,'0A'x);
                   maxPassend_496588120254909598=30-1-aantalLF_496588120254909598;
                   if attrLengte_496588120254909598 > max(maxPassend_496588120254909598,1000)
                     then passend_496588120254909598 = substr(Inkoopbevinding_user,1,maxPassend_496588120254909598);
                     else passend_496588120254909598 = Inkoopbevinding_user;
                   passend_496588120254909598 = tranwrd(passend_496588120254909598,'9D'x,'D0'x);
                   put passend_496588120254909598 ~ @;
              end;
       if missing(Betalingsverzoeknummer)
         then put "," @;
         else do;
                   attrLengte_7008902060440754439=length(Betalingsverzoeknummer);
                   aantalLF_7008902060440754439 = countc(Betalingsverzoeknummer,'0A'x);
                   maxPassend_7008902060440754439=40-1-aantalLF_7008902060440754439;
                   if attrLengte_7008902060440754439 > max(maxPassend_7008902060440754439,1000)
                     then passend_7008902060440754439 = substr(Betalingsverzoeknummer,1,maxPassend_7008902060440754439);
                     else passend_7008902060440754439 = Betalingsverzoeknummer;
                   passend_7008902060440754439 = tranwrd(passend_7008902060440754439,'9D'x,'D0'x);
                   put passend_7008902060440754439 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_IOM_FUNCTIE AS
   SELECT t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Fun_cd,
          t1.Fun_oms,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user
     FROM DATAQASG.IOM_FUNCTIE_TCMG t1;
QUIT;

data MIGRATIE.BAS_IOM_FUNCTIE;
  set MIGRATIE.BAS_IOM_FUNCTIE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_IOM_FUNCTIE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Fun_cd" 
       ','
          "Fun_oms" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_IOM_FUNCTIE   end=EFIEOD; 
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Fun_cd  ;
       format Fun_oms  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Fun_cd)
         then put "," @;
         else do;
                   attrLengte_5965997888822023319=length(Fun_cd);
                   aantalLF_5965997888822023319 = countc(Fun_cd,'0A'x);
                   maxPassend_5965997888822023319=7-1-aantalLF_5965997888822023319;
                   if attrLengte_5965997888822023319 > max(maxPassend_5965997888822023319,1000)
                     then passend_5965997888822023319 = substr(Fun_cd,1,maxPassend_5965997888822023319);
                     else passend_5965997888822023319 = Fun_cd;
                   passend_5965997888822023319 = tranwrd(passend_5965997888822023319,'9D'x,'D0'x);
                   put passend_5965997888822023319 ~ @;
              end;
       if missing(Fun_oms)
         then put "," @;
         else do;
                   attrLengte_2219022917313083260=length(Fun_oms);
                   aantalLF_2219022917313083260 = countc(Fun_oms,'0A'x);
                   maxPassend_2219022917313083260=50-1-aantalLF_2219022917313083260;
                   if attrLengte_2219022917313083260 > max(maxPassend_2219022917313083260,1000)
                     then passend_2219022917313083260 = substr(Fun_oms,1,maxPassend_2219022917313083260);
                     else passend_2219022917313083260 = Fun_oms;
                   passend_2219022917313083260 = tranwrd(passend_2219022917313083260,'9D'x,'D0'x);
                   put passend_2219022917313083260 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_IOM_LOCATIE AS
   SELECT t1.Loc_cd,
          t1.Omschrijving,
          t1.Actief,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user
     FROM DATAQASG.IOM_LOCATIE_TCMG t1;
QUIT;

data MIGRATIE.BAS_IOM_LOCATIE;
  set MIGRATIE.BAS_IOM_LOCATIE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_IOM_LOCATIE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Loc_cd" 
       ','
          "Omschrijving" 
       ','
          "Actief" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_IOM_LOCATIE   end=EFIEOD; 
       format Loc_cd  ;
       format Omschrijving  ;
       format Actief  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Loc_cd)
         then put "," @;
         else do;
                   attrLengte_70411504366861046=length(Loc_cd);
                   aantalLF_70411504366861046 = countc(Loc_cd,'0A'x);
                   maxPassend_70411504366861046=2-1-aantalLF_70411504366861046;
                   if attrLengte_70411504366861046 > max(maxPassend_70411504366861046,1000)
                     then passend_70411504366861046 = substr(Loc_cd,1,maxPassend_70411504366861046);
                     else passend_70411504366861046 = Loc_cd;
                   passend_70411504366861046 = tranwrd(passend_70411504366861046,'9D'x,'D0'x);
                   put passend_70411504366861046 ~ @;
              end;
       if missing(Omschrijving)
         then put "," @;
         else do;
                   attrLengte_2792940614022500175=length(Omschrijving);
                   aantalLF_2792940614022500175 = countc(Omschrijving,'0A'x);
                   maxPassend_2792940614022500175=34-1-aantalLF_2792940614022500175;
                   if attrLengte_2792940614022500175 > max(maxPassend_2792940614022500175,1000)
                     then passend_2792940614022500175 = substr(Omschrijving,1,maxPassend_2792940614022500175);
                     else passend_2792940614022500175 = Omschrijving;
                   passend_2792940614022500175 = tranwrd(passend_2792940614022500175,'9D'x,'D0'x);
                   put passend_2792940614022500175 ~ @;
              end;
       if missing(Actief)
         then put "," @;
         else do;
                   attrLengte_9040032925271508250=length(Actief);
                   aantalLF_9040032925271508250 = countc(Actief,'0A'x);
                   maxPassend_9040032925271508250=1-1-aantalLF_9040032925271508250;
                   if attrLengte_9040032925271508250 > max(maxPassend_9040032925271508250,1000)
                     then passend_9040032925271508250 = substr(Actief,1,maxPassend_9040032925271508250);
                     else passend_9040032925271508250 = Actief;
                   passend_9040032925271508250 = tranwrd(passend_9040032925271508250,'9D'x,'D0'x);
                   put passend_9040032925271508250 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_IOM_MEDEWERKER AS
   SELECT t1.Aanspreeknaam,
          t1.Achternaam,
          t1.Actief,
          t1.Banknaam,
          t1.Beveiligingspas,
          t1.Beveiligingspasnr,
          t1.Bic,
          t1.Certhoud_id,
          t1.Certserienummer,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Datum_inlog FORMAT=B8601DT19. AS Datum_inlog,
          t1.Datum_uit_dienst FORMAT=B8601DT19. AS Datum_uit_dienst,
          t1.Dienstverband,
          t1.Eigen_vervoer_jn,
          t1.Fun_cd,
          t1.Geslacht,
          t1.Iban,
          t1.Inleen_jn,
          t1.Loc_cd,
          t1.Mdw_cd,
          t1.Mdw_emailadres,
          t1.Mdw_handtekening,
          t1.Mdw_handtekening_image,
          t1.Mdw_id,
          t1.Mobiel,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Parkeerkaart,
          t1.Plaatsnaam,
          t1.Standplaats,
          t1.Telefoon,
          t1.Titel_na_cd,
          t1.Titel_voor_cd,
          t1.Toestel_dh,
          t1.Toestel_zw,
          t1.Tvs_cd_oud,
          t1.Voorletters,
          t1.Voornaam,
          t1.Voorvoegsel
     FROM DATAQASG.IOM_MEDEWERKER_TCMG t1;
QUIT;

data MIGRATIE.BAS_IOM_MEDEWERKER;
  set MIGRATIE.BAS_IOM_MEDEWERKER;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_IOM_MEDEWERKER.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Aanspreeknaam" 
       ','
          "Achternaam" 
       ','
          "Actief" 
       ','
          "Banknaam" 
       ','
          "Beveiligingspas" 
       ','
          "Beveiligingspasnr" 
       ','
          "Bic" 
       ','
          "Certhoud_id" 
       ','
          "Certserienummer" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Datum_inlog" 
       ','
          "Datum_uit_dienst" 
       ','
          "Dienstverband" 
       ','
          "Eigen_vervoer_jn" 
       ','
          "Fun_cd" 
       ','
          "Geslacht" 
       ','
          "Iban" 
       ','
          "Inleen_jn" 
       ','
          "Loc_cd" 
       ','
          "Mdw_cd" 
       ','
          "Mdw_emailadres" 
       ','
          "Mdw_handtekening" 
       ','
          "Mdw_handtekening_image" 
       ','
          "Mdw_id" 
       ','
          "Mobiel" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Parkeerkaart" 
       ','
          "Plaatsnaam" 
       ','
          "Standplaats" 
       ','
          "Telefoon" 
       ','
          "Titel_na_cd" 
       ','
          "Titel_voor_cd" 
       ','
          "Toestel_dh" 
       ','
          "Toestel_zw" 
       ','
          "Tvs_cd_oud" 
       ','
          "Voorletters" 
       ','
          "Voornaam" 
       ','
          "Voorvoegsel" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_IOM_MEDEWERKER   end=EFIEOD; 
       format Aanspreeknaam  ;
       format Achternaam  ;
       format Actief  ;
       format Banknaam  ;
       format Beveiligingspas  ;
       format Beveiligingspasnr  ;
       format Bic  ;
       format Certhoud_id best12. ;
       format Certserienummer  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Datum_inlog B8601DT19. ;
       format Datum_uit_dienst B8601DT19. ;
       format Dienstverband  ;
       format Eigen_vervoer_jn  ;
       format Fun_cd  ;
       format Geslacht  ;
       format Iban  ;
       format Inleen_jn  ;
       format Loc_cd  ;
       format Mdw_cd  ;
       format Mdw_emailadres  ;
       format Mdw_handtekening  ;
       format Mdw_handtekening_image  ;
       format Mdw_id best12. ;
       format Mobiel  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Parkeerkaart  ;
       format Plaatsnaam  ;
       format Standplaats  ;
       format Telefoon  ;
       format Titel_na_cd  ;
       format Titel_voor_cd  ;
       format Toestel_dh  ;
       format Toestel_zw  ;
       format Tvs_cd_oud  ;
       format Voorletters  ;
       format Voornaam  ;
       format Voorvoegsel  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Aanspreeknaam)
         then put "," @;
         else do;
                   attrLengte_5000095886126416684=length(Aanspreeknaam);
                   aantalLF_5000095886126416684 = countc(Aanspreeknaam,'0A'x);
                   maxPassend_5000095886126416684=50-1-aantalLF_5000095886126416684;
                   if attrLengte_5000095886126416684 > max(maxPassend_5000095886126416684,1000)
                     then passend_5000095886126416684 = substr(Aanspreeknaam,1,maxPassend_5000095886126416684);
                     else passend_5000095886126416684 = Aanspreeknaam;
                   passend_5000095886126416684 = tranwrd(passend_5000095886126416684,'9D'x,'D0'x);
                   put passend_5000095886126416684 ~ @;
              end;
       if missing(Achternaam)
         then put "," @;
         else do;
                   attrLengte_403642515580817570=length(Achternaam);
                   aantalLF_403642515580817570 = countc(Achternaam,'0A'x);
                   maxPassend_403642515580817570=25-1-aantalLF_403642515580817570;
                   if attrLengte_403642515580817570 > max(maxPassend_403642515580817570,1000)
                     then passend_403642515580817570 = substr(Achternaam,1,maxPassend_403642515580817570);
                     else passend_403642515580817570 = Achternaam;
                   passend_403642515580817570 = tranwrd(passend_403642515580817570,'9D'x,'D0'x);
                   put passend_403642515580817570 ~ @;
              end;
       if missing(Actief)
         then put "," @;
         else do;
                   attrLengte_9040032925271508250=length(Actief);
                   aantalLF_9040032925271508250 = countc(Actief,'0A'x);
                   maxPassend_9040032925271508250=1-1-aantalLF_9040032925271508250;
                   if attrLengte_9040032925271508250 > max(maxPassend_9040032925271508250,1000)
                     then passend_9040032925271508250 = substr(Actief,1,maxPassend_9040032925271508250);
                     else passend_9040032925271508250 = Actief;
                   passend_9040032925271508250 = tranwrd(passend_9040032925271508250,'9D'x,'D0'x);
                   put passend_9040032925271508250 ~ @;
              end;
       if missing(Banknaam)
         then put "," @;
         else do;
                   attrLengte_9171161243242669933=length(Banknaam);
                   aantalLF_9171161243242669933 = countc(Banknaam,'0A'x);
                   maxPassend_9171161243242669933=50-1-aantalLF_9171161243242669933;
                   if attrLengte_9171161243242669933 > max(maxPassend_9171161243242669933,1000)
                     then passend_9171161243242669933 = substr(Banknaam,1,maxPassend_9171161243242669933);
                     else passend_9171161243242669933 = Banknaam;
                   passend_9171161243242669933 = tranwrd(passend_9171161243242669933,'9D'x,'D0'x);
                   put passend_9171161243242669933 ~ @;
              end;
       if missing(Beveiligingspas)
         then put "," @;
         else do;
                   attrLengte_568964889479556025=length(Beveiligingspas);
                   aantalLF_568964889479556025 = countc(Beveiligingspas,'0A'x);
                   maxPassend_568964889479556025=1-1-aantalLF_568964889479556025;
                   if attrLengte_568964889479556025 > max(maxPassend_568964889479556025,1000)
                     then passend_568964889479556025 = substr(Beveiligingspas,1,maxPassend_568964889479556025);
                     else passend_568964889479556025 = Beveiligingspas;
                   passend_568964889479556025 = tranwrd(passend_568964889479556025,'9D'x,'D0'x);
                   put passend_568964889479556025 ~ @;
              end;
       if missing(Beveiligingspasnr)
         then put "," @;
         else do;
                   attrLengte_4548269248070471921=length(Beveiligingspasnr);
                   aantalLF_4548269248070471921 = countc(Beveiligingspasnr,'0A'x);
                   maxPassend_4548269248070471921=6-1-aantalLF_4548269248070471921;
                   if attrLengte_4548269248070471921 > max(maxPassend_4548269248070471921,1000)
                     then passend_4548269248070471921 = substr(Beveiligingspasnr,1,maxPassend_4548269248070471921);
                     else passend_4548269248070471921 = Beveiligingspasnr;
                   passend_4548269248070471921 = tranwrd(passend_4548269248070471921,'9D'x,'D0'x);
                   put passend_4548269248070471921 ~ @;
              end;
       if missing(Bic)
         then put "," @;
         else do;
                   attrLengte_8393283933206478573=length(Bic);
                   aantalLF_8393283933206478573 = countc(Bic,'0A'x);
                   maxPassend_8393283933206478573=11-1-aantalLF_8393283933206478573;
                   if attrLengte_8393283933206478573 > max(maxPassend_8393283933206478573,1000)
                     then passend_8393283933206478573 = substr(Bic,1,maxPassend_8393283933206478573);
                     else passend_8393283933206478573 = Bic;
                   passend_8393283933206478573 = tranwrd(passend_8393283933206478573,'9D'x,'D0'x);
                   put passend_8393283933206478573 ~ @;
              end;
       if missing(Certhoud_id)
         then put "," @;
         else put Certhoud_id @;
       if missing(Certserienummer)
         then put "," @;
         else do;
                   attrLengte_5407225052503955637=length(Certserienummer);
                   aantalLF_5407225052503955637 = countc(Certserienummer,'0A'x);
                   maxPassend_5407225052503955637=50-1-aantalLF_5407225052503955637;
                   if attrLengte_5407225052503955637 > max(maxPassend_5407225052503955637,1000)
                     then passend_5407225052503955637 = substr(Certserienummer,1,maxPassend_5407225052503955637);
                     else passend_5407225052503955637 = Certserienummer;
                   passend_5407225052503955637 = tranwrd(passend_5407225052503955637,'9D'x,'D0'x);
                   put passend_5407225052503955637 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Datum_inlog)
         then put "," @;
         else put Datum_inlog @;
       if missing(Datum_uit_dienst)
         then put "," @;
         else put Datum_uit_dienst @;
       if missing(Dienstverband)
         then put "," @;
         else do;
                   attrLengte_3093319845566984286=length(Dienstverband);
                   aantalLF_3093319845566984286 = countc(Dienstverband,'0A'x);
                   maxPassend_3093319845566984286=1-1-aantalLF_3093319845566984286;
                   if attrLengte_3093319845566984286 > max(maxPassend_3093319845566984286,1000)
                     then passend_3093319845566984286 = substr(Dienstverband,1,maxPassend_3093319845566984286);
                     else passend_3093319845566984286 = Dienstverband;
                   passend_3093319845566984286 = tranwrd(passend_3093319845566984286,'9D'x,'D0'x);
                   put passend_3093319845566984286 ~ @;
              end;
       if missing(Eigen_vervoer_jn)
         then put "," @;
         else do;
                   attrLengte_8873931148360804801=length(Eigen_vervoer_jn);
                   aantalLF_8873931148360804801 = countc(Eigen_vervoer_jn,'0A'x);
                   maxPassend_8873931148360804801=1-1-aantalLF_8873931148360804801;
                   if attrLengte_8873931148360804801 > max(maxPassend_8873931148360804801,1000)
                     then passend_8873931148360804801 = substr(Eigen_vervoer_jn,1,maxPassend_8873931148360804801);
                     else passend_8873931148360804801 = Eigen_vervoer_jn;
                   passend_8873931148360804801 = tranwrd(passend_8873931148360804801,'9D'x,'D0'x);
                   put passend_8873931148360804801 ~ @;
              end;
       if missing(Fun_cd)
         then put "," @;
         else do;
                   attrLengte_5965997888822023319=length(Fun_cd);
                   aantalLF_5965997888822023319 = countc(Fun_cd,'0A'x);
                   maxPassend_5965997888822023319=7-1-aantalLF_5965997888822023319;
                   if attrLengte_5965997888822023319 > max(maxPassend_5965997888822023319,1000)
                     then passend_5965997888822023319 = substr(Fun_cd,1,maxPassend_5965997888822023319);
                     else passend_5965997888822023319 = Fun_cd;
                   passend_5965997888822023319 = tranwrd(passend_5965997888822023319,'9D'x,'D0'x);
                   put passend_5965997888822023319 ~ @;
              end;
       if missing(Geslacht)
         then put "," @;
         else do;
                   attrLengte_731654219873503099=length(Geslacht);
                   aantalLF_731654219873503099 = countc(Geslacht,'0A'x);
                   maxPassend_731654219873503099=1-1-aantalLF_731654219873503099;
                   if attrLengte_731654219873503099 > max(maxPassend_731654219873503099,1000)
                     then passend_731654219873503099 = substr(Geslacht,1,maxPassend_731654219873503099);
                     else passend_731654219873503099 = Geslacht;
                   passend_731654219873503099 = tranwrd(passend_731654219873503099,'9D'x,'D0'x);
                   put passend_731654219873503099 ~ @;
              end;
       if missing(Iban)
         then put "," @;
         else do;
                   attrLengte_8433717562044549680=length(Iban);
                   aantalLF_8433717562044549680 = countc(Iban,'0A'x);
                   maxPassend_8433717562044549680=34-1-aantalLF_8433717562044549680;
                   if attrLengte_8433717562044549680 > max(maxPassend_8433717562044549680,1000)
                     then passend_8433717562044549680 = substr(Iban,1,maxPassend_8433717562044549680);
                     else passend_8433717562044549680 = Iban;
                   passend_8433717562044549680 = tranwrd(passend_8433717562044549680,'9D'x,'D0'x);
                   put passend_8433717562044549680 ~ @;
              end;
       if missing(Inleen_jn)
         then put "," @;
         else do;
                   attrLengte_1425693773166182115=length(Inleen_jn);
                   aantalLF_1425693773166182115 = countc(Inleen_jn,'0A'x);
                   maxPassend_1425693773166182115=1-1-aantalLF_1425693773166182115;
                   if attrLengte_1425693773166182115 > max(maxPassend_1425693773166182115,1000)
                     then passend_1425693773166182115 = substr(Inleen_jn,1,maxPassend_1425693773166182115);
                     else passend_1425693773166182115 = Inleen_jn;
                   passend_1425693773166182115 = tranwrd(passend_1425693773166182115,'9D'x,'D0'x);
                   put passend_1425693773166182115 ~ @;
              end;
       if missing(Loc_cd)
         then put "," @;
         else do;
                   attrLengte_70411504366861046=length(Loc_cd);
                   aantalLF_70411504366861046 = countc(Loc_cd,'0A'x);
                   maxPassend_70411504366861046=2-1-aantalLF_70411504366861046;
                   if attrLengte_70411504366861046 > max(maxPassend_70411504366861046,1000)
                     then passend_70411504366861046 = substr(Loc_cd,1,maxPassend_70411504366861046);
                     else passend_70411504366861046 = Loc_cd;
                   passend_70411504366861046 = tranwrd(passend_70411504366861046,'9D'x,'D0'x);
                   put passend_70411504366861046 ~ @;
              end;
       if missing(Mdw_cd)
         then put "," @;
         else do;
                   attrLengte_1226307818193438914=length(Mdw_cd);
                   aantalLF_1226307818193438914 = countc(Mdw_cd,'0A'x);
                   maxPassend_1226307818193438914=30-1-aantalLF_1226307818193438914;
                   if attrLengte_1226307818193438914 > max(maxPassend_1226307818193438914,1000)
                     then passend_1226307818193438914 = substr(Mdw_cd,1,maxPassend_1226307818193438914);
                     else passend_1226307818193438914 = Mdw_cd;
                   passend_1226307818193438914 = tranwrd(passend_1226307818193438914,'9D'x,'D0'x);
                   put passend_1226307818193438914 ~ @;
              end;
       if missing(Mdw_emailadres)
         then put "," @;
         else do;
                   attrLengte_3550688932720166220=length(Mdw_emailadres);
                   aantalLF_3550688932720166220 = countc(Mdw_emailadres,'0A'x);
                   maxPassend_3550688932720166220=60-1-aantalLF_3550688932720166220;
                   if attrLengte_3550688932720166220 > max(maxPassend_3550688932720166220,1000)
                     then passend_3550688932720166220 = substr(Mdw_emailadres,1,maxPassend_3550688932720166220);
                     else passend_3550688932720166220 = Mdw_emailadres;
                   passend_3550688932720166220 = tranwrd(passend_3550688932720166220,'9D'x,'D0'x);
                   put passend_3550688932720166220 ~ @;
              end;
       if missing(Mdw_handtekening)
         then put "," @;
         else do;
                   attrLengte_8870325337959155145=length(Mdw_handtekening);
                   aantalLF_8870325337959155145 = countc(Mdw_handtekening,'0A'x);
                   maxPassend_8870325337959155145=500-1-aantalLF_8870325337959155145;
                   if attrLengte_8870325337959155145 > max(maxPassend_8870325337959155145,1000)
                     then passend_8870325337959155145 = substr(Mdw_handtekening,1,maxPassend_8870325337959155145);
                     else passend_8870325337959155145 = Mdw_handtekening;
                   passend_8870325337959155145 = tranwrd(passend_8870325337959155145,'9D'x,'D0'x);
                   put passend_8870325337959155145 ~ @;
              end;
       if missing(Mdw_handtekening_image)
         then put "," @;
         else do;
                   attrLengte_4406024425837339997=length(Mdw_handtekening_image);
                   aantalLF_4406024425837339997 = countc(Mdw_handtekening_image,'0A'x);
                   maxPassend_4406024425837339997=1-1-aantalLF_4406024425837339997;
                   if attrLengte_4406024425837339997 > max(maxPassend_4406024425837339997,1000)
                     then passend_4406024425837339997 = substr(Mdw_handtekening_image,1,maxPassend_4406024425837339997);
                     else passend_4406024425837339997 = Mdw_handtekening_image;
                   passend_4406024425837339997 = tranwrd(passend_4406024425837339997,'9D'x,'D0'x);
                   put passend_4406024425837339997 ~ @;
              end;
       if missing(Mdw_id)
         then put "," @;
         else put Mdw_id @;
       if missing(Mobiel)
         then put "," @;
         else do;
                   attrLengte_469422463784359626=length(Mobiel);
                   aantalLF_469422463784359626 = countc(Mobiel,'0A'x);
                   maxPassend_469422463784359626=10-1-aantalLF_469422463784359626;
                   if attrLengte_469422463784359626 > max(maxPassend_469422463784359626,1000)
                     then passend_469422463784359626 = substr(Mobiel,1,maxPassend_469422463784359626);
                     else passend_469422463784359626 = Mobiel;
                   passend_469422463784359626 = tranwrd(passend_469422463784359626,'9D'x,'D0'x);
                   put passend_469422463784359626 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Parkeerkaart)
         then put "," @;
         else do;
                   attrLengte_1297276606184209975=length(Parkeerkaart);
                   aantalLF_1297276606184209975 = countc(Parkeerkaart,'0A'x);
                   maxPassend_1297276606184209975=1-1-aantalLF_1297276606184209975;
                   if attrLengte_1297276606184209975 > max(maxPassend_1297276606184209975,1000)
                     then passend_1297276606184209975 = substr(Parkeerkaart,1,maxPassend_1297276606184209975);
                     else passend_1297276606184209975 = Parkeerkaart;
                   passend_1297276606184209975 = tranwrd(passend_1297276606184209975,'9D'x,'D0'x);
                   put passend_1297276606184209975 ~ @;
              end;
       if missing(Plaatsnaam)
         then put "," @;
         else do;
                   attrLengte_4214898722065367578=length(Plaatsnaam);
                   aantalLF_4214898722065367578 = countc(Plaatsnaam,'0A'x);
                   maxPassend_4214898722065367578=30-1-aantalLF_4214898722065367578;
                   if attrLengte_4214898722065367578 > max(maxPassend_4214898722065367578,1000)
                     then passend_4214898722065367578 = substr(Plaatsnaam,1,maxPassend_4214898722065367578);
                     else passend_4214898722065367578 = Plaatsnaam;
                   passend_4214898722065367578 = tranwrd(passend_4214898722065367578,'9D'x,'D0'x);
                   put passend_4214898722065367578 ~ @;
              end;
       if missing(Standplaats)
         then put "," @;
         else do;
                   attrLengte_8614162211722129764=length(Standplaats);
                   aantalLF_8614162211722129764 = countc(Standplaats,'0A'x);
                   maxPassend_8614162211722129764=1-1-aantalLF_8614162211722129764;
                   if attrLengte_8614162211722129764 > max(maxPassend_8614162211722129764,1000)
                     then passend_8614162211722129764 = substr(Standplaats,1,maxPassend_8614162211722129764);
                     else passend_8614162211722129764 = Standplaats;
                   passend_8614162211722129764 = tranwrd(passend_8614162211722129764,'9D'x,'D0'x);
                   put passend_8614162211722129764 ~ @;
              end;
       if missing(Telefoon)
         then put "," @;
         else do;
                   attrLengte_5105696030762504490=length(Telefoon);
                   aantalLF_5105696030762504490 = countc(Telefoon,'0A'x);
                   maxPassend_5105696030762504490=10-1-aantalLF_5105696030762504490;
                   if attrLengte_5105696030762504490 > max(maxPassend_5105696030762504490,1000)
                     then passend_5105696030762504490 = substr(Telefoon,1,maxPassend_5105696030762504490);
                     else passend_5105696030762504490 = Telefoon;
                   passend_5105696030762504490 = tranwrd(passend_5105696030762504490,'9D'x,'D0'x);
                   put passend_5105696030762504490 ~ @;
              end;
       if missing(Titel_na_cd)
         then put "," @;
         else do;
                   attrLengte_7837891438217984867=length(Titel_na_cd);
                   aantalLF_7837891438217984867 = countc(Titel_na_cd,'0A'x);
                   maxPassend_7837891438217984867=4-1-aantalLF_7837891438217984867;
                   if attrLengte_7837891438217984867 > max(maxPassend_7837891438217984867,1000)
                     then passend_7837891438217984867 = substr(Titel_na_cd,1,maxPassend_7837891438217984867);
                     else passend_7837891438217984867 = Titel_na_cd;
                   passend_7837891438217984867 = tranwrd(passend_7837891438217984867,'9D'x,'D0'x);
                   put passend_7837891438217984867 ~ @;
              end;
       if missing(Titel_voor_cd)
         then put "," @;
         else do;
                   attrLengte_205177972285722878=length(Titel_voor_cd);
                   aantalLF_205177972285722878 = countc(Titel_voor_cd,'0A'x);
                   maxPassend_205177972285722878=4-1-aantalLF_205177972285722878;
                   if attrLengte_205177972285722878 > max(maxPassend_205177972285722878,1000)
                     then passend_205177972285722878 = substr(Titel_voor_cd,1,maxPassend_205177972285722878);
                     else passend_205177972285722878 = Titel_voor_cd;
                   passend_205177972285722878 = tranwrd(passend_205177972285722878,'9D'x,'D0'x);
                   put passend_205177972285722878 ~ @;
              end;
       if missing(Toestel_dh)
         then put "," @;
         else do;
                   attrLengte_2044038105122318573=length(Toestel_dh);
                   aantalLF_2044038105122318573 = countc(Toestel_dh,'0A'x);
                   maxPassend_2044038105122318573=5-1-aantalLF_2044038105122318573;
                   if attrLengte_2044038105122318573 > max(maxPassend_2044038105122318573,1000)
                     then passend_2044038105122318573 = substr(Toestel_dh,1,maxPassend_2044038105122318573);
                     else passend_2044038105122318573 = Toestel_dh;
                   passend_2044038105122318573 = tranwrd(passend_2044038105122318573,'9D'x,'D0'x);
                   put passend_2044038105122318573 ~ @;
              end;
       if missing(Toestel_zw)
         then put "," @;
         else do;
                   attrLengte_2040097266282988894=length(Toestel_zw);
                   aantalLF_2040097266282988894 = countc(Toestel_zw,'0A'x);
                   maxPassend_2040097266282988894=5-1-aantalLF_2040097266282988894;
                   if attrLengte_2040097266282988894 > max(maxPassend_2040097266282988894,1000)
                     then passend_2040097266282988894 = substr(Toestel_zw,1,maxPassend_2040097266282988894);
                     else passend_2040097266282988894 = Toestel_zw;
                   passend_2040097266282988894 = tranwrd(passend_2040097266282988894,'9D'x,'D0'x);
                   put passend_2040097266282988894 ~ @;
              end;
       if missing(Tvs_cd_oud)
         then put "," @;
         else do;
                   attrLengte_911718119053123258=length(Tvs_cd_oud);
                   aantalLF_911718119053123258 = countc(Tvs_cd_oud,'0A'x);
                   maxPassend_911718119053123258=30-1-aantalLF_911718119053123258;
                   if attrLengte_911718119053123258 > max(maxPassend_911718119053123258,1000)
                     then passend_911718119053123258 = substr(Tvs_cd_oud,1,maxPassend_911718119053123258);
                     else passend_911718119053123258 = Tvs_cd_oud;
                   passend_911718119053123258 = tranwrd(passend_911718119053123258,'9D'x,'D0'x);
                   put passend_911718119053123258 ~ @;
              end;
       if missing(Voorletters)
         then put "," @;
         else do;
                   attrLengte_933604317395829620=length(Voorletters);
                   aantalLF_933604317395829620 = countc(Voorletters,'0A'x);
                   maxPassend_933604317395829620=10-1-aantalLF_933604317395829620;
                   if attrLengte_933604317395829620 > max(maxPassend_933604317395829620,1000)
                     then passend_933604317395829620 = substr(Voorletters,1,maxPassend_933604317395829620);
                     else passend_933604317395829620 = Voorletters;
                   passend_933604317395829620 = tranwrd(passend_933604317395829620,'9D'x,'D0'x);
                   put passend_933604317395829620 ~ @;
              end;
       if missing(Voornaam)
         then put "," @;
         else do;
                   attrLengte_7272765945587119437=length(Voornaam);
                   aantalLF_7272765945587119437 = countc(Voornaam,'0A'x);
                   maxPassend_7272765945587119437=15-1-aantalLF_7272765945587119437;
                   if attrLengte_7272765945587119437 > max(maxPassend_7272765945587119437,1000)
                     then passend_7272765945587119437 = substr(Voornaam,1,maxPassend_7272765945587119437);
                     else passend_7272765945587119437 = Voornaam;
                   passend_7272765945587119437 = tranwrd(passend_7272765945587119437,'9D'x,'D0'x);
                   put passend_7272765945587119437 ~ @;
              end;
       if missing(Voorvoegsel)
         then put "," @;
         else do;
                   attrLengte_7678909970887993684=length(Voorvoegsel);
                   aantalLF_7678909970887993684 = countc(Voorvoegsel,'0A'x);
                   maxPassend_7678909970887993684=10-1-aantalLF_7678909970887993684;
                   if attrLengte_7678909970887993684 > max(maxPassend_7678909970887993684,1000)
                     then passend_7678909970887993684 = substr(Voorvoegsel,1,maxPassend_7678909970887993684);
                     else passend_7678909970887993684 = Voorvoegsel;
                   passend_7678909970887993684 = tranwrd(passend_7678909970887993684,'9D'x,'D0'x);
                   put passend_7678909970887993684 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_IOM_MEDEWERKERROL AS
   SELECT t1.Mdw_id,
          t1.Rol_cd,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Actief
     FROM DATAQASG.IOM_MEDEWERKERROL_TCMG t1;
QUIT;

data MIGRATIE.BAS_IOM_MEDEWERKERROL;
  set MIGRATIE.BAS_IOM_MEDEWERKERROL;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_IOM_MEDEWERKERROL.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Mdw_id" 
       ','
          "Rol_cd" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Actief" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_IOM_MEDEWERKERROL   end=EFIEOD; 
       format Mdw_id best12. ;
       format Rol_cd  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Actief  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Mdw_id)
         then put "," @;
         else put Mdw_id @;
       if missing(Rol_cd)
         then put "," @;
         else do;
                   attrLengte_3864349925788261245=length(Rol_cd);
                   aantalLF_3864349925788261245 = countc(Rol_cd,'0A'x);
                   maxPassend_3864349925788261245=3-1-aantalLF_3864349925788261245;
                   if attrLengte_3864349925788261245 > max(maxPassend_3864349925788261245,1000)
                     then passend_3864349925788261245 = substr(Rol_cd,1,maxPassend_3864349925788261245);
                     else passend_3864349925788261245 = Rol_cd;
                   passend_3864349925788261245 = tranwrd(passend_3864349925788261245,'9D'x,'D0'x);
                   put passend_3864349925788261245 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Actief)
         then put "," @;
         else do;
                   attrLengte_9040032925271508250=length(Actief);
                   aantalLF_9040032925271508250 = countc(Actief,'0A'x);
                   maxPassend_9040032925271508250=1-1-aantalLF_9040032925271508250;
                   if attrLengte_9040032925271508250 > max(maxPassend_9040032925271508250,1000)
                     then passend_9040032925271508250 = substr(Actief,1,maxPassend_9040032925271508250);
                     else passend_9040032925271508250 = Actief;
                   passend_9040032925271508250 = tranwrd(passend_9040032925271508250,'9D'x,'D0'x);
                   put passend_9040032925271508250 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_JZM_BEHANDELAAR AS
   SELECT t1.Mdw_id,
          t1.Jz_id,
          t1.Rol_cd,
          t1.Eigenaar,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat
     FROM DATAQASG.JZM_BEHANDELAAR_TCMG t1;
QUIT;

data MIGRATIE.BAS_JZM_BEHANDELAAR;
  set MIGRATIE.BAS_JZM_BEHANDELAAR;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_JZM_BEHANDELAAR.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Mdw_id" 
       ','
          "Jz_id" 
       ','
          "Rol_cd" 
       ','
          "Eigenaar" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_JZM_BEHANDELAAR   end=EFIEOD; 
       format Mdw_id best12. ;
       format Jz_id best12. ;
       format Rol_cd  ;
       format Eigenaar  ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Mdw_id)
         then put "," @;
         else put Mdw_id @;
       if missing(Jz_id)
         then put "," @;
         else put Jz_id @;
       if missing(Rol_cd)
         then put "," @;
         else do;
                   attrLengte_3864349925788261245=length(Rol_cd);
                   aantalLF_3864349925788261245 = countc(Rol_cd,'0A'x);
                   maxPassend_3864349925788261245=3-1-aantalLF_3864349925788261245;
                   if attrLengte_3864349925788261245 > max(maxPassend_3864349925788261245,1000)
                     then passend_3864349925788261245 = substr(Rol_cd,1,maxPassend_3864349925788261245);
                     else passend_3864349925788261245 = Rol_cd;
                   passend_3864349925788261245 = tranwrd(passend_3864349925788261245,'9D'x,'D0'x);
                   put passend_3864349925788261245 ~ @;
              end;
       if missing(Eigenaar)
         then put "," @;
         else do;
                   attrLengte_2715310130859233840=length(Eigenaar);
                   aantalLF_2715310130859233840 = countc(Eigenaar,'0A'x);
                   maxPassend_2715310130859233840=1-1-aantalLF_2715310130859233840;
                   if attrLengte_2715310130859233840 > max(maxPassend_2715310130859233840,1000)
                     then passend_2715310130859233840 = substr(Eigenaar,1,maxPassend_2715310130859233840);
                     else passend_2715310130859233840 = Eigenaar;
                   passend_2715310130859233840 = tranwrd(passend_2715310130859233840,'9D'x,'D0'x);
                   put passend_2715310130859233840 ~ @;
              end;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_JZM_BEROEP AS
   SELECT t1.Jz_id,
          t1.Bzr_id,
          t1.Zaaknummer,
          t1.Datum_zitting FORMAT=B8601DT19. AS Datum_zitting,
          t1.Uitspraak,
          t1.Datum_uitspr FORMAT=B8601DT19. AS Datum_uitspr,
          t1.Bedrag_schade,
          t1.Bedrag_schade_nlg,
          t1.Datum_schade FORMAT=B8601DT19. AS Datum_schade
     FROM DATAQASG.JZM_BEROEP_TCMG t1;
QUIT;

data MIGRATIE.BAS_JZM_BEROEP;
  set MIGRATIE.BAS_JZM_BEROEP;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_JZM_BEROEP.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Jz_id" 
       ','
          "Bzr_id" 
       ','
          "Zaaknummer" 
       ','
          "Datum_zitting" 
       ','
          "Uitspraak" 
       ','
          "Datum_uitspr" 
       ','
          "Bedrag_schade" 
       ','
          "Bedrag_schade_nlg" 
       ','
          "Datum_schade" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_JZM_BEROEP   end=EFIEOD; 
       format Jz_id best12. ;
       format Bzr_id best12. ;
       format Zaaknummer  ;
       format Datum_zitting B8601DT19. ;
       format Uitspraak  ;
       format Datum_uitspr B8601DT19. ;
       format Bedrag_schade best12. ;
       format Bedrag_schade_nlg best12. ;
       format Datum_schade B8601DT19. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Jz_id)
         then put "," @;
         else put Jz_id @;
       if missing(Bzr_id)
         then put "," @;
         else put Bzr_id @;
       if missing(Zaaknummer)
         then put "," @;
         else do;
                   attrLengte_3217231980325004339=length(Zaaknummer);
                   aantalLF_3217231980325004339 = countc(Zaaknummer,'0A'x);
                   maxPassend_3217231980325004339=30-1-aantalLF_3217231980325004339;
                   if attrLengte_3217231980325004339 > max(maxPassend_3217231980325004339,1000)
                     then passend_3217231980325004339 = substr(Zaaknummer,1,maxPassend_3217231980325004339);
                     else passend_3217231980325004339 = Zaaknummer;
                   passend_3217231980325004339 = tranwrd(passend_3217231980325004339,'9D'x,'D0'x);
                   put passend_3217231980325004339 ~ @;
              end;
       if missing(Datum_zitting)
         then put "," @;
         else put Datum_zitting @;
       if missing(Uitspraak)
         then put "," @;
         else do;
                   attrLengte_7079888756117315669=length(Uitspraak);
                   aantalLF_7079888756117315669 = countc(Uitspraak,'0A'x);
                   maxPassend_7079888756117315669=25-1-aantalLF_7079888756117315669;
                   if attrLengte_7079888756117315669 > max(maxPassend_7079888756117315669,1000)
                     then passend_7079888756117315669 = substr(Uitspraak,1,maxPassend_7079888756117315669);
                     else passend_7079888756117315669 = Uitspraak;
                   passend_7079888756117315669 = tranwrd(passend_7079888756117315669,'9D'x,'D0'x);
                   put passend_7079888756117315669 ~ @;
              end;
       if missing(Datum_uitspr)
         then put "," @;
         else put Datum_uitspr @;
       if missing(Bedrag_schade)
         then put "," @;
         else put Bedrag_schade @;
       if missing(Bedrag_schade_nlg)
         then put "," @;
         else put Bedrag_schade_nlg @;
       if missing(Datum_schade)
         then put "," @;
         else put Datum_schade @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_JZM_BEZWAAR AS
   SELECT t1.Jz_id,
          t1.Belasting_cd,
          t1.Datum_compleet FORMAT=B8601DT19. AS Datum_compleet,
          t1.Wachttijd,
          t1.Datum_hoorzitting_org FORMAT=B8601DT19. AS Datum_hoorzitting_org,
          t1.Tijd_hoorzitting_org FORMAT=B8601DT19. AS Tijd_hoorzitting_org,
          t1.Datum_hoorzitting FORMAT=B8601DT19. AS Datum_hoorzitting,
          t1.Tijd_hoorzitting FORMAT=B8601DT19. AS Tijd_hoorzitting,
          t1.App_verschenen,
          t1.Datum_ontvangst FORMAT=B8601DT19. AS Datum_ontvangst,
          t1.Datum_vragenbrief FORMAT=B8601DT19. AS Datum_vragenbrief,
          t1.Wett_termijn_7_1 FORMAT=B8601DT19. AS Wett_termijn_7_1,
          t1.Wett_termijn_7_3 FORMAT=B8601DT19. AS Wett_termijn_7_3,
          t1.Wett_termijn_datum FORMAT=B8601DT19. AS Wett_termijn_datum,
          t1.Uitstel_datum FORMAT=B8601DT19. AS Uitstel_datum,
          t1.Overschrijding_datum FORMAT=B8601DT19. AS Overschrijding_datum,
          t1.Primair_lid_3 FORMAT=B8601DT19. AS Primair_lid_3,
          t1.Reken_cor_id,
          t1.Reken_wett_termijn_7_1 FORMAT=B8601DT19. AS Reken_wett_termijn_7_1,
          t1.Adviescommissie,
          t1.Datum_1e_heropname_schade FORMAT=B8601DT19. AS Datum_1e_heropname_schade,
          t1.Tijd_1e_heropname_schade FORMAT=B8601DT19. AS Tijd_1e_heropname_schade,
          t1.Datum_2e_heropname_schade FORMAT=B8601DT19. AS Datum_2e_heropname_schade,
          t1.Tijd_2e_heropname_schade FORMAT=B8601DT19. AS Tijd_2e_heropname_schade,
          t1.Datum_orig_schouw FORMAT=B8601DT19. AS Datum_orig_schouw,
          t1.Tijd_orig_schouw FORMAT=B8601DT19. AS Tijd_orig_schouw,
          t1.Datum_def_schouw FORMAT=B8601DT19. AS Datum_def_schouw,
          t1.Tijd_def_schouw FORMAT=B8601DT19. AS Tijd_def_schouw
     FROM DATAQASG.JZM_BEZWAAR_TCMG t1;
QUIT;

data MIGRATIE.BAS_JZM_BEZWAAR;
  set MIGRATIE.BAS_JZM_BEZWAAR;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_JZM_BEZWAAR.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Jz_id" 
       ','
          "Belasting_cd" 
       ','
          "Datum_compleet" 
       ','
          "Wachttijd" 
       ','
          "Datum_hoorzitting_org" 
       ','
          "Tijd_hoorzitting_org" 
       ','
          "Datum_hoorzitting" 
       ','
          "Tijd_hoorzitting" 
       ','
          "App_verschenen" 
       ','
          "Datum_ontvangst" 
       ','
          "Datum_vragenbrief" 
       ','
          "Wett_termijn_7_1" 
       ','
          "Wett_termijn_7_3" 
       ','
          "Wett_termijn_datum" 
       ','
          "Uitstel_datum" 
       ','
          "Overschrijding_datum" 
       ','
          "Primair_lid_3" 
       ','
          "Reken_cor_id" 
       ','
          "Reken_wett_termijn_7_1" 
       ','
          "Adviescommissie" 
       ','
          "Datum_1e_heropname_schade" 
       ','
          "Tijd_1e_heropname_schade" 
       ','
          "Datum_2e_heropname_schade" 
       ','
          "Tijd_2e_heropname_schade" 
       ','
          "Datum_orig_schouw" 
       ','
          "Tijd_orig_schouw" 
       ','
          "Datum_def_schouw" 
       ','
          "Tijd_def_schouw" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_JZM_BEZWAAR   end=EFIEOD; 
       format Jz_id best12. ;
       format Belasting_cd  ;
       format Datum_compleet B8601DT19. ;
       format Wachttijd best12. ;
       format Datum_hoorzitting_org B8601DT19. ;
       format Tijd_hoorzitting_org B8601DT19. ;
       format Datum_hoorzitting B8601DT19. ;
       format Tijd_hoorzitting B8601DT19. ;
       format App_verschenen  ;
       format Datum_ontvangst B8601DT19. ;
       format Datum_vragenbrief B8601DT19. ;
       format Wett_termijn_7_1 B8601DT19. ;
       format Wett_termijn_7_3 B8601DT19. ;
       format Wett_termijn_datum B8601DT19. ;
       format Uitstel_datum B8601DT19. ;
       format Overschrijding_datum B8601DT19. ;
       format Primair_lid_3 B8601DT19. ;
       format Reken_cor_id best12. ;
       format Reken_wett_termijn_7_1 B8601DT19. ;
       format Adviescommissie  ;
       format Datum_1e_heropname_schade B8601DT19. ;
       format Tijd_1e_heropname_schade B8601DT19. ;
       format Datum_2e_heropname_schade B8601DT19. ;
       format Tijd_2e_heropname_schade B8601DT19. ;
       format Datum_orig_schouw B8601DT19. ;
       format Tijd_orig_schouw B8601DT19. ;
       format Datum_def_schouw B8601DT19. ;
       format Tijd_def_schouw B8601DT19. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Jz_id)
         then put "," @;
         else put Jz_id @;
       if missing(Belasting_cd)
         then put "," @;
         else do;
                   attrLengte_6020606438278307179=length(Belasting_cd);
                   aantalLF_6020606438278307179 = countc(Belasting_cd,'0A'x);
                   maxPassend_6020606438278307179=35-1-aantalLF_6020606438278307179;
                   if attrLengte_6020606438278307179 > max(maxPassend_6020606438278307179,1000)
                     then passend_6020606438278307179 = substr(Belasting_cd,1,maxPassend_6020606438278307179);
                     else passend_6020606438278307179 = Belasting_cd;
                   passend_6020606438278307179 = tranwrd(passend_6020606438278307179,'9D'x,'D0'x);
                   put passend_6020606438278307179 ~ @;
              end;
       if missing(Datum_compleet)
         then put "," @;
         else put Datum_compleet @;
       if missing(Wachttijd)
         then put "," @;
         else put Wachttijd @;
       if missing(Datum_hoorzitting_org)
         then put "," @;
         else put Datum_hoorzitting_org @;
       if missing(Tijd_hoorzitting_org)
         then put "," @;
         else put Tijd_hoorzitting_org @;
       if missing(Datum_hoorzitting)
         then put "," @;
         else put Datum_hoorzitting @;
       if missing(Tijd_hoorzitting)
         then put "," @;
         else put Tijd_hoorzitting @;
       if missing(App_verschenen)
         then put "," @;
         else do;
                   attrLengte_5414252817809941307=length(App_verschenen);
                   aantalLF_5414252817809941307 = countc(App_verschenen,'0A'x);
                   maxPassend_5414252817809941307=1-1-aantalLF_5414252817809941307;
                   if attrLengte_5414252817809941307 > max(maxPassend_5414252817809941307,1000)
                     then passend_5414252817809941307 = substr(App_verschenen,1,maxPassend_5414252817809941307);
                     else passend_5414252817809941307 = App_verschenen;
                   passend_5414252817809941307 = tranwrd(passend_5414252817809941307,'9D'x,'D0'x);
                   put passend_5414252817809941307 ~ @;
              end;
       if missing(Datum_ontvangst)
         then put "," @;
         else put Datum_ontvangst @;
       if missing(Datum_vragenbrief)
         then put "," @;
         else put Datum_vragenbrief @;
       if missing(Wett_termijn_7_1)
         then put "," @;
         else put Wett_termijn_7_1 @;
       if missing(Wett_termijn_7_3)
         then put "," @;
         else put Wett_termijn_7_3 @;
       if missing(Wett_termijn_datum)
         then put "," @;
         else put Wett_termijn_datum @;
       if missing(Uitstel_datum)
         then put "," @;
         else put Uitstel_datum @;
       if missing(Overschrijding_datum)
         then put "," @;
         else put Overschrijding_datum @;
       if missing(Primair_lid_3)
         then put "," @;
         else put Primair_lid_3 @;
       if missing(Reken_cor_id)
         then put "," @;
         else put Reken_cor_id @;
       if missing(Reken_wett_termijn_7_1)
         then put "," @;
         else put Reken_wett_termijn_7_1 @;
       if missing(Adviescommissie)
         then put "," @;
         else do;
                   attrLengte_339486236946485008=length(Adviescommissie);
                   aantalLF_339486236946485008 = countc(Adviescommissie,'0A'x);
                   maxPassend_339486236946485008=1-1-aantalLF_339486236946485008;
                   if attrLengte_339486236946485008 > max(maxPassend_339486236946485008,1000)
                     then passend_339486236946485008 = substr(Adviescommissie,1,maxPassend_339486236946485008);
                     else passend_339486236946485008 = Adviescommissie;
                   passend_339486236946485008 = tranwrd(passend_339486236946485008,'9D'x,'D0'x);
                   put passend_339486236946485008 ~ @;
              end;
       if missing(Datum_1e_heropname_schade)
         then put "," @;
         else put Datum_1e_heropname_schade @;
       if missing(Tijd_1e_heropname_schade)
         then put "," @;
         else put Tijd_1e_heropname_schade @;
       if missing(Datum_2e_heropname_schade)
         then put "," @;
         else put Datum_2e_heropname_schade @;
       if missing(Tijd_2e_heropname_schade)
         then put "," @;
         else put Tijd_2e_heropname_schade @;
       if missing(Datum_orig_schouw)
         then put "," @;
         else put Datum_orig_schouw @;
       if missing(Tijd_orig_schouw)
         then put "," @;
         else put Tijd_orig_schouw @;
       if missing(Datum_def_schouw)
         then put "," @;
         else put Datum_def_schouw @;
       if missing(Tijd_def_schouw)
         then put "," @;
         else put Tijd_def_schouw @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_JZM_BEZWAAR_TERMIJN_HIST AS
   SELECT t1.Jz_id,
          t1.Vanaf_datum FORMAT=B8601DT19. AS Vanaf_datum,
          t1.Volg_nr,
          t1.Jz_nr,
          t1.Cor_id,
          t1.Wijziging_in,
          t1.Sts_cd,
          t1.Wett_termijn_7_1 FORMAT=B8601DT19. AS Wett_termijn_7_1,
          t1.Wett_termijn_7_3 FORMAT=B8601DT19. AS Wett_termijn_7_3,
          t1.Uitstel_datum FORMAT=B8601DT19. AS Uitstel_datum,
          t1.Overschrijding_datum FORMAT=B8601DT19. AS Overschrijding_datum,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Adviescommissie
     FROM DATAQASG.JZM_BEZWAAR_TERMIJN_HIST_TCMG t1;
QUIT;

data MIGRATIE.BAS_JZM_BEZWAAR_TERMIJN_HIST;
  set MIGRATIE.BAS_JZM_BEZWAAR_TERMIJN_HIST;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_JZM_BEZWAAR_TERMIJN_HIST.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Jz_id" 
       ','
          "Vanaf_datum" 
       ','
          "Volg_nr" 
       ','
          "Jz_nr" 
       ','
          "Cor_id" 
       ','
          "Wijziging_in" 
       ','
          "Sts_cd" 
       ','
          "Wett_termijn_7_1" 
       ','
          "Wett_termijn_7_3" 
       ','
          "Uitstel_datum" 
       ','
          "Overschrijding_datum" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Adviescommissie" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_JZM_BEZWAAR_TERMIJN_HIST   end=EFIEOD; 
       format Jz_id best12. ;
       format Vanaf_datum B8601DT19. ;
       format Volg_nr best12. ;
       format Jz_nr  ;
       format Cor_id best12. ;
       format Wijziging_in  ;
       format Sts_cd  ;
       format Wett_termijn_7_1 B8601DT19. ;
       format Wett_termijn_7_3 B8601DT19. ;
       format Uitstel_datum B8601DT19. ;
       format Overschrijding_datum B8601DT19. ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Adviescommissie  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Jz_id)
         then put "," @;
         else put Jz_id @;
       if missing(Vanaf_datum)
         then put "," @;
         else put Vanaf_datum @;
       if missing(Volg_nr)
         then put "," @;
         else put Volg_nr @;
       if missing(Jz_nr)
         then put "," @;
         else do;
                   attrLengte_6111452580688960292=length(Jz_nr);
                   aantalLF_6111452580688960292 = countc(Jz_nr,'0A'x);
                   maxPassend_6111452580688960292=7-1-aantalLF_6111452580688960292;
                   if attrLengte_6111452580688960292 > max(maxPassend_6111452580688960292,1000)
                     then passend_6111452580688960292 = substr(Jz_nr,1,maxPassend_6111452580688960292);
                     else passend_6111452580688960292 = Jz_nr;
                   passend_6111452580688960292 = tranwrd(passend_6111452580688960292,'9D'x,'D0'x);
                   put passend_6111452580688960292 ~ @;
              end;
       if missing(Cor_id)
         then put "," @;
         else put Cor_id @;
       if missing(Wijziging_in)
         then put "," @;
         else do;
                   attrLengte_3099394465663039762=length(Wijziging_in);
                   aantalLF_3099394465663039762 = countc(Wijziging_in,'0A'x);
                   maxPassend_3099394465663039762=1-1-aantalLF_3099394465663039762;
                   if attrLengte_3099394465663039762 > max(maxPassend_3099394465663039762,1000)
                     then passend_3099394465663039762 = substr(Wijziging_in,1,maxPassend_3099394465663039762);
                     else passend_3099394465663039762 = Wijziging_in;
                   passend_3099394465663039762 = tranwrd(passend_3099394465663039762,'9D'x,'D0'x);
                   put passend_3099394465663039762 ~ @;
              end;
       if missing(Sts_cd)
         then put "," @;
         else do;
                   attrLengte_1792820026946084444=length(Sts_cd);
                   aantalLF_1792820026946084444 = countc(Sts_cd,'0A'x);
                   maxPassend_1792820026946084444=3-1-aantalLF_1792820026946084444;
                   if attrLengte_1792820026946084444 > max(maxPassend_1792820026946084444,1000)
                     then passend_1792820026946084444 = substr(Sts_cd,1,maxPassend_1792820026946084444);
                     else passend_1792820026946084444 = Sts_cd;
                   passend_1792820026946084444 = tranwrd(passend_1792820026946084444,'9D'x,'D0'x);
                   put passend_1792820026946084444 ~ @;
              end;
       if missing(Wett_termijn_7_1)
         then put "," @;
         else put Wett_termijn_7_1 @;
       if missing(Wett_termijn_7_3)
         then put "," @;
         else put Wett_termijn_7_3 @;
       if missing(Uitstel_datum)
         then put "," @;
         else put Uitstel_datum @;
       if missing(Overschrijding_datum)
         then put "," @;
         else put Overschrijding_datum @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Adviescommissie)
         then put "," @;
         else do;
                   attrLengte_339486236946485008=length(Adviescommissie);
                   aantalLF_339486236946485008 = countc(Adviescommissie,'0A'x);
                   maxPassend_339486236946485008=1-1-aantalLF_339486236946485008;
                   if attrLengte_339486236946485008 > max(maxPassend_339486236946485008,1000)
                     then passend_339486236946485008 = substr(Adviescommissie,1,maxPassend_339486236946485008);
                     else passend_339486236946485008 = Adviescommissie;
                   passend_339486236946485008 = tranwrd(passend_339486236946485008,'9D'x,'D0'x);
                   put passend_339486236946485008 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_JZM_BOB_WIZARD AS
   SELECT t1.Jz_id,
          t1.Verleen_bedrag,
          t1.Betaal_bedrag,
          t1.Vaststelling_bedrag,
          t1.Tra_cd_1,
          t1.Bedrag_tra_cd_1,
          t1.Tra_cd_2,
          t1.Bedrag_tra_cd_2,
          t1.Tra_cd_3,
          t1.Bedrag_tra_cd_3,
          t1.Sts_cd_voor,
          t1.Sts_cd_na,
          t1.Verleend_voor,
          t1.Gedeclareerd_voor,
          t1.Betaald_voor,
          t1.Ingetrokken_voor,
          t1.Open_vordering_voor,
          t1.Open_verlening_voor,
          t1.Verleen_na,
          t1.Gedeclareerd_na,
          t1.Betaald_na,
          t1.Ingetrokken_na,
          t1.Open_vordering_na,
          t1.Open_verlening_na,
          t1.Aanmaken_bob,
          t1.Verwijder_trans,
          t1.Cst_cd,
          t1.Cst_cd_beschikking,
          t1.Cor_id_beschikking,
          t1.Tra_id_beschikking_1,
          t1.Tra_cd_beschikking_1,
          t1.Tra_bedrag_beschikking_1,
          t1.Tra_id_beschikking_2,
          t1.Tra_cd_beschikking_2,
          t1.Tra_bedrag_beschikking_2,
          t1.Tra_id_afd,
          t1.Bedrag_afspraak_afd,
          t1.Datum_afspraak_afd FORMAT=B8601DT19. AS Datum_afspraak_afd,
          t1.Datum_afd FORMAT=B8601DT19. AS Datum_afd,
          t1.Tra_cd_afd,
          t1.Vordering_tra_id_afd,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user
     FROM DATAQASG.JZM_BOB_WIZARD_TCMG t1;
QUIT;

data MIGRATIE.BAS_JZM_BOB_WIZARD;
  set MIGRATIE.BAS_JZM_BOB_WIZARD;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_JZM_BOB_WIZARD.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Jz_id" 
       ','
          "Verleen_bedrag" 
       ','
          "Betaal_bedrag" 
       ','
          "Vaststelling_bedrag" 
       ','
          "Tra_cd_1" 
       ','
          "Bedrag_tra_cd_1" 
       ','
          "Tra_cd_2" 
       ','
          "Bedrag_tra_cd_2" 
       ','
          "Tra_cd_3" 
       ','
          "Bedrag_tra_cd_3" 
       ','
          "Sts_cd_voor" 
       ','
          "Sts_cd_na" 
       ','
          "Verleend_voor" 
       ','
          "Gedeclareerd_voor" 
       ','
          "Betaald_voor" 
       ','
          "Ingetrokken_voor" 
       ','
          "Open_vordering_voor" 
       ','
          "Open_verlening_voor" 
       ','
          "Verleen_na" 
       ','
          "Gedeclareerd_na" 
       ','
          "Betaald_na" 
       ','
          "Ingetrokken_na" 
       ','
          "Open_vordering_na" 
       ','
          "Open_verlening_na" 
       ','
          "Aanmaken_bob" 
       ','
          "Verwijder_trans" 
       ','
          "Cst_cd" 
       ','
          "Cst_cd_beschikking" 
       ','
          "Cor_id_beschikking" 
       ','
          "Tra_id_beschikking_1" 
       ','
          "Tra_cd_beschikking_1" 
       ','
          "Tra_bedrag_beschikking_1" 
       ','
          "Tra_id_beschikking_2" 
       ','
          "Tra_cd_beschikking_2" 
       ','
          "Tra_bedrag_beschikking_2" 
       ','
          "Tra_id_afd" 
       ','
          "Bedrag_afspraak_afd" 
       ','
          "Datum_afspraak_afd" 
       ','
          "Datum_afd" 
       ','
          "Tra_cd_afd" 
       ','
          "Vordering_tra_id_afd" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_JZM_BOB_WIZARD   end=EFIEOD; 
       format Jz_id best12. ;
       format Verleen_bedrag best12. ;
       format Betaal_bedrag best12. ;
       format Vaststelling_bedrag best12. ;
       format Tra_cd_1  ;
       format Bedrag_tra_cd_1 best12. ;
       format Tra_cd_2  ;
       format Bedrag_tra_cd_2 best12. ;
       format Tra_cd_3  ;
       format Bedrag_tra_cd_3 best12. ;
       format Sts_cd_voor  ;
       format Sts_cd_na  ;
       format Verleend_voor best12. ;
       format Gedeclareerd_voor best12. ;
       format Betaald_voor best12. ;
       format Ingetrokken_voor best12. ;
       format Open_vordering_voor best12. ;
       format Open_verlening_voor best12. ;
       format Verleen_na best12. ;
       format Gedeclareerd_na best12. ;
       format Betaald_na best12. ;
       format Ingetrokken_na best12. ;
       format Open_vordering_na best12. ;
       format Open_verlening_na best12. ;
       format Aanmaken_bob  ;
       format Verwijder_trans  ;
       format Cst_cd  ;
       format Cst_cd_beschikking  ;
       format Cor_id_beschikking best12. ;
       format Tra_id_beschikking_1 best12. ;
       format Tra_cd_beschikking_1  ;
       format Tra_bedrag_beschikking_1 best12. ;
       format Tra_id_beschikking_2 best12. ;
       format Tra_cd_beschikking_2  ;
       format Tra_bedrag_beschikking_2 best12. ;
       format Tra_id_afd best12. ;
       format Bedrag_afspraak_afd best12. ;
       format Datum_afspraak_afd B8601DT19. ;
       format Datum_afd B8601DT19. ;
       format Tra_cd_afd  ;
       format Vordering_tra_id_afd best12. ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Jz_id)
         then put "," @;
         else put Jz_id @;
       if missing(Verleen_bedrag)
         then put "," @;
         else put Verleen_bedrag @;
       if missing(Betaal_bedrag)
         then put "," @;
         else put Betaal_bedrag @;
       if missing(Vaststelling_bedrag)
         then put "," @;
         else put Vaststelling_bedrag @;
       if missing(Tra_cd_1)
         then put "," @;
         else do;
                   attrLengte_1083598043257233095=length(Tra_cd_1);
                   aantalLF_1083598043257233095 = countc(Tra_cd_1,'0A'x);
                   maxPassend_1083598043257233095=3-1-aantalLF_1083598043257233095;
                   if attrLengte_1083598043257233095 > max(maxPassend_1083598043257233095,1000)
                     then passend_1083598043257233095 = substr(Tra_cd_1,1,maxPassend_1083598043257233095);
                     else passend_1083598043257233095 = Tra_cd_1;
                   passend_1083598043257233095 = tranwrd(passend_1083598043257233095,'9D'x,'D0'x);
                   put passend_1083598043257233095 ~ @;
              end;
       if missing(Bedrag_tra_cd_1)
         then put "," @;
         else put Bedrag_tra_cd_1 @;
       if missing(Tra_cd_2)
         then put "," @;
         else do;
                   attrLengte_1083598043307565968=length(Tra_cd_2);
                   aantalLF_1083598043307565968 = countc(Tra_cd_2,'0A'x);
                   maxPassend_1083598043307565968=3-1-aantalLF_1083598043307565968;
                   if attrLengte_1083598043307565968 > max(maxPassend_1083598043307565968,1000)
                     then passend_1083598043307565968 = substr(Tra_cd_2,1,maxPassend_1083598043307565968);
                     else passend_1083598043307565968 = Tra_cd_2;
                   passend_1083598043307565968 = tranwrd(passend_1083598043307565968,'9D'x,'D0'x);
                   put passend_1083598043307565968 ~ @;
              end;
       if missing(Bedrag_tra_cd_2)
         then put "," @;
         else put Bedrag_tra_cd_2 @;
       if missing(Tra_cd_3)
         then put "," @;
         else do;
                   attrLengte_1083598043290788349=length(Tra_cd_3);
                   aantalLF_1083598043290788349 = countc(Tra_cd_3,'0A'x);
                   maxPassend_1083598043290788349=3-1-aantalLF_1083598043290788349;
                   if attrLengte_1083598043290788349 > max(maxPassend_1083598043290788349,1000)
                     then passend_1083598043290788349 = substr(Tra_cd_3,1,maxPassend_1083598043290788349);
                     else passend_1083598043290788349 = Tra_cd_3;
                   passend_1083598043290788349 = tranwrd(passend_1083598043290788349,'9D'x,'D0'x);
                   put passend_1083598043290788349 ~ @;
              end;
       if missing(Bedrag_tra_cd_3)
         then put "," @;
         else put Bedrag_tra_cd_3 @;
       if missing(Sts_cd_voor)
         then put "," @;
         else do;
                   attrLengte_5074290768225272146=length(Sts_cd_voor);
                   aantalLF_5074290768225272146 = countc(Sts_cd_voor,'0A'x);
                   maxPassend_5074290768225272146=3-1-aantalLF_5074290768225272146;
                   if attrLengte_5074290768225272146 > max(maxPassend_5074290768225272146,1000)
                     then passend_5074290768225272146 = substr(Sts_cd_voor,1,maxPassend_5074290768225272146);
                     else passend_5074290768225272146 = Sts_cd_voor;
                   passend_5074290768225272146 = tranwrd(passend_5074290768225272146,'9D'x,'D0'x);
                   put passend_5074290768225272146 ~ @;
              end;
       if missing(Sts_cd_na)
         then put "," @;
         else do;
                   attrLengte_3160638609811708247=length(Sts_cd_na);
                   aantalLF_3160638609811708247 = countc(Sts_cd_na,'0A'x);
                   maxPassend_3160638609811708247=3-1-aantalLF_3160638609811708247;
                   if attrLengte_3160638609811708247 > max(maxPassend_3160638609811708247,1000)
                     then passend_3160638609811708247 = substr(Sts_cd_na,1,maxPassend_3160638609811708247);
                     else passend_3160638609811708247 = Sts_cd_na;
                   passend_3160638609811708247 = tranwrd(passend_3160638609811708247,'9D'x,'D0'x);
                   put passend_3160638609811708247 ~ @;
              end;
       if missing(Verleend_voor)
         then put "," @;
         else put Verleend_voor @;
       if missing(Gedeclareerd_voor)
         then put "," @;
         else put Gedeclareerd_voor @;
       if missing(Betaald_voor)
         then put "," @;
         else put Betaald_voor @;
       if missing(Ingetrokken_voor)
         then put "," @;
         else put Ingetrokken_voor @;
       if missing(Open_vordering_voor)
         then put "," @;
         else put Open_vordering_voor @;
       if missing(Open_verlening_voor)
         then put "," @;
         else put Open_verlening_voor @;
       if missing(Verleen_na)
         then put "," @;
         else put Verleen_na @;
       if missing(Gedeclareerd_na)
         then put "," @;
         else put Gedeclareerd_na @;
       if missing(Betaald_na)
         then put "," @;
         else put Betaald_na @;
       if missing(Ingetrokken_na)
         then put "," @;
         else put Ingetrokken_na @;
       if missing(Open_vordering_na)
         then put "," @;
         else put Open_vordering_na @;
       if missing(Open_verlening_na)
         then put "," @;
         else put Open_verlening_na @;
       if missing(Aanmaken_bob)
         then put "," @;
         else do;
                   attrLengte_2188678553434777312=length(Aanmaken_bob);
                   aantalLF_2188678553434777312 = countc(Aanmaken_bob,'0A'x);
                   maxPassend_2188678553434777312=1-1-aantalLF_2188678553434777312;
                   if attrLengte_2188678553434777312 > max(maxPassend_2188678553434777312,1000)
                     then passend_2188678553434777312 = substr(Aanmaken_bob,1,maxPassend_2188678553434777312);
                     else passend_2188678553434777312 = Aanmaken_bob;
                   passend_2188678553434777312 = tranwrd(passend_2188678553434777312,'9D'x,'D0'x);
                   put passend_2188678553434777312 ~ @;
              end;
       if missing(Verwijder_trans)
         then put "," @;
         else do;
                   attrLengte_8132748671281576414=length(Verwijder_trans);
                   aantalLF_8132748671281576414 = countc(Verwijder_trans,'0A'x);
                   maxPassend_8132748671281576414=1-1-aantalLF_8132748671281576414;
                   if attrLengte_8132748671281576414 > max(maxPassend_8132748671281576414,1000)
                     then passend_8132748671281576414 = substr(Verwijder_trans,1,maxPassend_8132748671281576414);
                     else passend_8132748671281576414 = Verwijder_trans;
                   passend_8132748671281576414 = tranwrd(passend_8132748671281576414,'9D'x,'D0'x);
                   put passend_8132748671281576414 ~ @;
              end;
       if missing(Cst_cd)
         then put "," @;
         else do;
                   attrLengte_6311705118691231734=length(Cst_cd);
                   aantalLF_6311705118691231734 = countc(Cst_cd,'0A'x);
                   maxPassend_6311705118691231734=8-1-aantalLF_6311705118691231734;
                   if attrLengte_6311705118691231734 > max(maxPassend_6311705118691231734,1000)
                     then passend_6311705118691231734 = substr(Cst_cd,1,maxPassend_6311705118691231734);
                     else passend_6311705118691231734 = Cst_cd;
                   passend_6311705118691231734 = tranwrd(passend_6311705118691231734,'9D'x,'D0'x);
                   put passend_6311705118691231734 ~ @;
              end;
       if missing(Cst_cd_beschikking)
         then put "," @;
         else do;
                   attrLengte_1618444314050332051=length(Cst_cd_beschikking);
                   aantalLF_1618444314050332051 = countc(Cst_cd_beschikking,'0A'x);
                   maxPassend_1618444314050332051=8-1-aantalLF_1618444314050332051;
                   if attrLengte_1618444314050332051 > max(maxPassend_1618444314050332051,1000)
                     then passend_1618444314050332051 = substr(Cst_cd_beschikking,1,maxPassend_1618444314050332051);
                     else passend_1618444314050332051 = Cst_cd_beschikking;
                   passend_1618444314050332051 = tranwrd(passend_1618444314050332051,'9D'x,'D0'x);
                   put passend_1618444314050332051 ~ @;
              end;
       if missing(Cor_id_beschikking)
         then put "," @;
         else put Cor_id_beschikking @;
       if missing(Tra_id_beschikking_1)
         then put "," @;
         else put Tra_id_beschikking_1 @;
       if missing(Tra_cd_beschikking_1)
         then put "," @;
         else do;
                   attrLengte_3284761973742663624=length(Tra_cd_beschikking_1);
                   aantalLF_3284761973742663624 = countc(Tra_cd_beschikking_1,'0A'x);
                   maxPassend_3284761973742663624=3-1-aantalLF_3284761973742663624;
                   if attrLengte_3284761973742663624 > max(maxPassend_3284761973742663624,1000)
                     then passend_3284761973742663624 = substr(Tra_cd_beschikking_1,1,maxPassend_3284761973742663624);
                     else passend_3284761973742663624 = Tra_cd_beschikking_1;
                   passend_3284761973742663624 = tranwrd(passend_3284761973742663624,'9D'x,'D0'x);
                   put passend_3284761973742663624 ~ @;
              end;
       if missing(Tra_bedrag_beschikking_1)
         then put "," @;
         else put Tra_bedrag_beschikking_1 @;
       if missing(Tra_id_beschikking_2)
         then put "," @;
         else put Tra_id_beschikking_2 @;
       if missing(Tra_cd_beschikking_2)
         then put "," @;
         else do;
                   attrLengte_3284761973792996481=length(Tra_cd_beschikking_2);
                   aantalLF_3284761973792996481 = countc(Tra_cd_beschikking_2,'0A'x);
                   maxPassend_3284761973792996481=3-1-aantalLF_3284761973792996481;
                   if attrLengte_3284761973792996481 > max(maxPassend_3284761973792996481,1000)
                     then passend_3284761973792996481 = substr(Tra_cd_beschikking_2,1,maxPassend_3284761973792996481);
                     else passend_3284761973792996481 = Tra_cd_beschikking_2;
                   passend_3284761973792996481 = tranwrd(passend_3284761973792996481,'9D'x,'D0'x);
                   put passend_3284761973792996481 ~ @;
              end;
       if missing(Tra_bedrag_beschikking_2)
         then put "," @;
         else put Tra_bedrag_beschikking_2 @;
       if missing(Tra_id_afd)
         then put "," @;
         else put Tra_id_afd @;
       if missing(Bedrag_afspraak_afd)
         then put "," @;
         else put Bedrag_afspraak_afd @;
       if missing(Datum_afspraak_afd)
         then put "," @;
         else put Datum_afspraak_afd @;
       if missing(Datum_afd)
         then put "," @;
         else put Datum_afd @;
       if missing(Tra_cd_afd)
         then put "," @;
         else do;
                   attrLengte_893891387222724231=length(Tra_cd_afd);
                   aantalLF_893891387222724231 = countc(Tra_cd_afd,'0A'x);
                   maxPassend_893891387222724231=3-1-aantalLF_893891387222724231;
                   if attrLengte_893891387222724231 > max(maxPassend_893891387222724231,1000)
                     then passend_893891387222724231 = substr(Tra_cd_afd,1,maxPassend_893891387222724231);
                     else passend_893891387222724231 = Tra_cd_afd;
                   passend_893891387222724231 = tranwrd(passend_893891387222724231,'9D'x,'D0'x);
                   put passend_893891387222724231 ~ @;
              end;
       if missing(Vordering_tra_id_afd)
         then put "," @;
         else put Vordering_tra_id_afd @;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_JZM_BRIEF_FUNCTIE AS
   SELECT t1.Fnc_cd,
          t1.Oms,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user
     FROM DATAQASG.JZM_BRIEF_FUNCTIE_TCMG t1;
QUIT;

data MIGRATIE.BAS_JZM_BRIEF_FUNCTIE;
  set MIGRATIE.BAS_JZM_BRIEF_FUNCTIE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_JZM_BRIEF_FUNCTIE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Fnc_cd" 
       ','
          "Oms" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_JZM_BRIEF_FUNCTIE   end=EFIEOD; 
       format Fnc_cd  ;
       format Oms  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Fnc_cd)
         then put "," @;
         else do;
                   attrLengte_2858454071017162451=length(Fnc_cd);
                   aantalLF_2858454071017162451 = countc(Fnc_cd,'0A'x);
                   maxPassend_2858454071017162451=3-1-aantalLF_2858454071017162451;
                   if attrLengte_2858454071017162451 > max(maxPassend_2858454071017162451,1000)
                     then passend_2858454071017162451 = substr(Fnc_cd,1,maxPassend_2858454071017162451);
                     else passend_2858454071017162451 = Fnc_cd;
                   passend_2858454071017162451 = tranwrd(passend_2858454071017162451,'9D'x,'D0'x);
                   put passend_2858454071017162451 ~ @;
              end;
       if missing(Oms)
         then put "," @;
         else do;
                   attrLengte_4632406013654397950=length(Oms);
                   aantalLF_4632406013654397950 = countc(Oms,'0A'x);
                   maxPassend_4632406013654397950=64-1-aantalLF_4632406013654397950;
                   if attrLengte_4632406013654397950 > max(maxPassend_4632406013654397950,1000)
                     then passend_4632406013654397950 = substr(Oms,1,maxPassend_4632406013654397950);
                     else passend_4632406013654397950 = Oms;
                   passend_4632406013654397950 = tranwrd(passend_4632406013654397950,'9D'x,'D0'x);
                   put passend_4632406013654397950 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_JZM_FUNCTIE_VAN_BRIEF AS
   SELECT t1.Fnc_cd,
          t1.Cst_cd,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user
     FROM DATAQASG.JZM_FUNCTIE_VAN_BRIEF_TCMG t1;
QUIT;

data MIGRATIE.BAS_JZM_FUNCTIE_VAN_BRIEF;
  set MIGRATIE.BAS_JZM_FUNCTIE_VAN_BRIEF;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_JZM_FUNCTIE_VAN_BRIEF.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Fnc_cd" 
       ','
          "Cst_cd" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_JZM_FUNCTIE_VAN_BRIEF   end=EFIEOD; 
       format Fnc_cd  ;
       format Cst_cd  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Fnc_cd)
         then put "," @;
         else do;
                   attrLengte_2858454071017162451=length(Fnc_cd);
                   aantalLF_2858454071017162451 = countc(Fnc_cd,'0A'x);
                   maxPassend_2858454071017162451=3-1-aantalLF_2858454071017162451;
                   if attrLengte_2858454071017162451 > max(maxPassend_2858454071017162451,1000)
                     then passend_2858454071017162451 = substr(Fnc_cd,1,maxPassend_2858454071017162451);
                     else passend_2858454071017162451 = Fnc_cd;
                   passend_2858454071017162451 = tranwrd(passend_2858454071017162451,'9D'x,'D0'x);
                   put passend_2858454071017162451 ~ @;
              end;
       if missing(Cst_cd)
         then put "," @;
         else do;
                   attrLengte_6311705118691231734=length(Cst_cd);
                   aantalLF_6311705118691231734 = countc(Cst_cd,'0A'x);
                   maxPassend_6311705118691231734=8-1-aantalLF_6311705118691231734;
                   if attrLengte_6311705118691231734 > max(maxPassend_6311705118691231734,1000)
                     then passend_6311705118691231734 = substr(Cst_cd,1,maxPassend_6311705118691231734);
                     else passend_6311705118691231734 = Cst_cd;
                   passend_6311705118691231734 = tranwrd(passend_6311705118691231734,'9D'x,'D0'x);
                   put passend_6311705118691231734 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_JZM_PROCEDURE AS
   SELECT t1.Jaar,
          t1.Volgnr,
          t1.Jz_nr,
          t1.Jz_id,
          t1.Sts_cd,
          t1.Ssg_cd,
          t1.Dos_id,
          t1.Cor_id,
          t1.Dos_sts_cd,
          t1.Dos_ssg_cd,
          t1.Indieningsdatum FORMAT=B8601DT19. AS Indieningsdatum,
          t1.Datum_dos_jz FORMAT=B8601DT19. AS Datum_dos_jz,
          t1.Actiedatum FORMAT=B8601DT19. AS Actiedatum,
          t1.Afhandeldatum FORMAT=B8601DT19. AS Afhandeldatum,
          t1.notities,
          t1.Proc_type,
          t1.Jzm_bezwaar,
          t1.Jzm_beroep,
          t1.Jzm_hoger_beroep,
          t1.Jzm_verz_schadeverg,
          t1.Actuele_beh_mdw_id,
          t1.Actuele_beh_rol_cd,
          t1.Problematiekcode,
          t1.Bedrag_bob,
          t1.Aard_bob,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Technisch_cor_id,
          t1.Hoofdproces
     FROM DATAQASG.JZM_PROCEDURE_TCMG t1;
QUIT;

data MIGRATIE.BAS_JZM_PROCEDURE;
  set MIGRATIE.BAS_JZM_PROCEDURE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_JZM_PROCEDURE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Jaar" 
       ','
          "Volgnr" 
       ','
          "Jz_nr" 
       ','
          "Jz_id" 
       ','
          "Sts_cd" 
       ','
          "Ssg_cd" 
       ','
          "Dos_id" 
       ','
          "Cor_id" 
       ','
          "Dos_sts_cd" 
       ','
          "Dos_ssg_cd" 
       ','
          "Indieningsdatum" 
       ','
          "Datum_dos_jz" 
       ','
          "Actiedatum" 
       ','
          "Afhandeldatum" 
       ','
          "notities" 
       ','
          "Proc_type" 
       ','
          "Jzm_bezwaar" 
       ','
          "Jzm_beroep" 
       ','
          "Jzm_hoger_beroep" 
       ','
          "Jzm_verz_schadeverg" 
       ','
          "Actuele_beh_mdw_id" 
       ','
          "Actuele_beh_rol_cd" 
       ','
          "Problematiekcode" 
       ','
          "Bedrag_bob" 
       ','
          "Aard_bob" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Technisch_cor_id" 
       ','
          "Hoofdproces" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_JZM_PROCEDURE   end=EFIEOD; 
       format Jaar best12. ;
       format Volgnr best12. ;
       format Jz_nr  ;
       format Jz_id best12. ;
       format Sts_cd  ;
       format Ssg_cd  ;
       format Dos_id best12. ;
       format Cor_id best12. ;
       format Dos_sts_cd  ;
       format Dos_ssg_cd  ;
       format Indieningsdatum B8601DT19. ;
       format Datum_dos_jz B8601DT19. ;
       format Actiedatum B8601DT19. ;
       format Afhandeldatum B8601DT19. ;
       format notities  ;
       format Proc_type  ;
       format Jzm_bezwaar  ;
       format Jzm_beroep  ;
       format Jzm_hoger_beroep  ;
       format Jzm_verz_schadeverg  ;
       format Actuele_beh_mdw_id best12. ;
       format Actuele_beh_rol_cd  ;
       format Problematiekcode best12. ;
       format Bedrag_bob best12. ;
       format Aard_bob  ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Technisch_cor_id best12. ;
       format Hoofdproces  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Jaar)
         then put "," @;
         else put Jaar @;
       if missing(Volgnr)
         then put "," @;
         else put Volgnr @;
       if missing(Jz_nr)
         then put "," @;
         else do;
                   attrLengte_6111452580688960292=length(Jz_nr);
                   aantalLF_6111452580688960292 = countc(Jz_nr,'0A'x);
                   maxPassend_6111452580688960292=7-1-aantalLF_6111452580688960292;
                   if attrLengte_6111452580688960292 > max(maxPassend_6111452580688960292,1000)
                     then passend_6111452580688960292 = substr(Jz_nr,1,maxPassend_6111452580688960292);
                     else passend_6111452580688960292 = Jz_nr;
                   passend_6111452580688960292 = tranwrd(passend_6111452580688960292,'9D'x,'D0'x);
                   put passend_6111452580688960292 ~ @;
              end;
       if missing(Jz_id)
         then put "," @;
         else put Jz_id @;
       if missing(Sts_cd)
         then put "," @;
         else do;
                   attrLengte_1792820026946084444=length(Sts_cd);
                   aantalLF_1792820026946084444 = countc(Sts_cd,'0A'x);
                   maxPassend_1792820026946084444=3-1-aantalLF_1792820026946084444;
                   if attrLengte_1792820026946084444 > max(maxPassend_1792820026946084444,1000)
                     then passend_1792820026946084444 = substr(Sts_cd,1,maxPassend_1792820026946084444);
                     else passend_1792820026946084444 = Sts_cd;
                   passend_1792820026946084444 = tranwrd(passend_1792820026946084444,'9D'x,'D0'x);
                   put passend_1792820026946084444 ~ @;
              end;
       if missing(Ssg_cd)
         then put "," @;
         else do;
                   attrLengte_1782260468804165719=length(Ssg_cd);
                   aantalLF_1782260468804165719 = countc(Ssg_cd,'0A'x);
                   maxPassend_1782260468804165719=1-1-aantalLF_1782260468804165719;
                   if attrLengte_1782260468804165719 > max(maxPassend_1782260468804165719,1000)
                     then passend_1782260468804165719 = substr(Ssg_cd,1,maxPassend_1782260468804165719);
                     else passend_1782260468804165719 = Ssg_cd;
                   passend_1782260468804165719 = tranwrd(passend_1782260468804165719,'9D'x,'D0'x);
                   put passend_1782260468804165719 ~ @;
              end;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(Cor_id)
         then put "," @;
         else put Cor_id @;
       if missing(Dos_sts_cd)
         then put "," @;
         else do;
                   attrLengte_8704665109529255687=length(Dos_sts_cd);
                   aantalLF_8704665109529255687 = countc(Dos_sts_cd,'0A'x);
                   maxPassend_8704665109529255687=3-1-aantalLF_8704665109529255687;
                   if attrLengte_8704665109529255687 > max(maxPassend_8704665109529255687,1000)
                     then passend_8704665109529255687 = substr(Dos_sts_cd,1,maxPassend_8704665109529255687);
                     else passend_8704665109529255687 = Dos_sts_cd;
                   passend_8704665109529255687 = tranwrd(passend_8704665109529255687,'9D'x,'D0'x);
                   put passend_8704665109529255687 ~ @;
              end;
       if missing(Dos_ssg_cd)
         then put "," @;
         else do;
                   attrLengte_3975328648468529066=length(Dos_ssg_cd);
                   aantalLF_3975328648468529066 = countc(Dos_ssg_cd,'0A'x);
                   maxPassend_3975328648468529066=1-1-aantalLF_3975328648468529066;
                   if attrLengte_3975328648468529066 > max(maxPassend_3975328648468529066,1000)
                     then passend_3975328648468529066 = substr(Dos_ssg_cd,1,maxPassend_3975328648468529066);
                     else passend_3975328648468529066 = Dos_ssg_cd;
                   passend_3975328648468529066 = tranwrd(passend_3975328648468529066,'9D'x,'D0'x);
                   put passend_3975328648468529066 ~ @;
              end;
       if missing(Indieningsdatum)
         then put "," @;
         else put Indieningsdatum @;
       if missing(Datum_dos_jz)
         then put "," @;
         else put Datum_dos_jz @;
       if missing(Actiedatum)
         then put "," @;
         else put Actiedatum @;
       if missing(Afhandeldatum)
         then put "," @;
         else put Afhandeldatum @;
       if missing(notities)
         then put "," @;
         else do;
                   attrLengte_5741984805443955957=length(notities);
                   aantalLF_5741984805443955957 = countc(notities,'0A'x);
                   maxPassend_5741984805443955957=256-1-aantalLF_5741984805443955957;
                   if attrLengte_5741984805443955957 > max(maxPassend_5741984805443955957,1000)
                     then passend_5741984805443955957 = substr(notities,1,maxPassend_5741984805443955957);
                     else passend_5741984805443955957 = notities;
                   passend_5741984805443955957 = tranwrd(passend_5741984805443955957,'9D'x,'D0'x);
                   put passend_5741984805443955957 ~ @;
              end;
       if missing(Proc_type)
         then put "," @;
         else do;
                   attrLengte_1946813900853856696=length(Proc_type);
                   aantalLF_1946813900853856696 = countc(Proc_type,'0A'x);
                   maxPassend_1946813900853856696=3-1-aantalLF_1946813900853856696;
                   if attrLengte_1946813900853856696 > max(maxPassend_1946813900853856696,1000)
                     then passend_1946813900853856696 = substr(Proc_type,1,maxPassend_1946813900853856696);
                     else passend_1946813900853856696 = Proc_type;
                   passend_1946813900853856696 = tranwrd(passend_1946813900853856696,'9D'x,'D0'x);
                   put passend_1946813900853856696 ~ @;
              end;
       if missing(Jzm_bezwaar)
         then put "," @;
         else do;
                   attrLengte_6207017692359907203=length(Jzm_bezwaar);
                   aantalLF_6207017692359907203 = countc(Jzm_bezwaar,'0A'x);
                   maxPassend_6207017692359907203=1-1-aantalLF_6207017692359907203;
                   if attrLengte_6207017692359907203 > max(maxPassend_6207017692359907203,1000)
                     then passend_6207017692359907203 = substr(Jzm_bezwaar,1,maxPassend_6207017692359907203);
                     else passend_6207017692359907203 = Jzm_bezwaar;
                   passend_6207017692359907203 = tranwrd(passend_6207017692359907203,'9D'x,'D0'x);
                   put passend_6207017692359907203 ~ @;
              end;
       if missing(Jzm_beroep)
         then put "," @;
         else do;
                   attrLengte_2710170433705167747=length(Jzm_beroep);
                   aantalLF_2710170433705167747 = countc(Jzm_beroep,'0A'x);
                   maxPassend_2710170433705167747=1-1-aantalLF_2710170433705167747;
                   if attrLengte_2710170433705167747 > max(maxPassend_2710170433705167747,1000)
                     then passend_2710170433705167747 = substr(Jzm_beroep,1,maxPassend_2710170433705167747);
                     else passend_2710170433705167747 = Jzm_beroep;
                   passend_2710170433705167747 = tranwrd(passend_2710170433705167747,'9D'x,'D0'x);
                   put passend_2710170433705167747 ~ @;
              end;
       if missing(Jzm_hoger_beroep)
         then put "," @;
         else do;
                   attrLengte_6428897205158791533=length(Jzm_hoger_beroep);
                   aantalLF_6428897205158791533 = countc(Jzm_hoger_beroep,'0A'x);
                   maxPassend_6428897205158791533=1-1-aantalLF_6428897205158791533;
                   if attrLengte_6428897205158791533 > max(maxPassend_6428897205158791533,1000)
                     then passend_6428897205158791533 = substr(Jzm_hoger_beroep,1,maxPassend_6428897205158791533);
                     else passend_6428897205158791533 = Jzm_hoger_beroep;
                   passend_6428897205158791533 = tranwrd(passend_6428897205158791533,'9D'x,'D0'x);
                   put passend_6428897205158791533 ~ @;
              end;
       if missing(Jzm_verz_schadeverg)
         then put "," @;
         else do;
                   attrLengte_5713014069952143271=length(Jzm_verz_schadeverg);
                   aantalLF_5713014069952143271 = countc(Jzm_verz_schadeverg,'0A'x);
                   maxPassend_5713014069952143271=1-1-aantalLF_5713014069952143271;
                   if attrLengte_5713014069952143271 > max(maxPassend_5713014069952143271,1000)
                     then passend_5713014069952143271 = substr(Jzm_verz_schadeverg,1,maxPassend_5713014069952143271);
                     else passend_5713014069952143271 = Jzm_verz_schadeverg;
                   passend_5713014069952143271 = tranwrd(passend_5713014069952143271,'9D'x,'D0'x);
                   put passend_5713014069952143271 ~ @;
              end;
       if missing(Actuele_beh_mdw_id)
         then put "," @;
         else put Actuele_beh_mdw_id @;
       if missing(Actuele_beh_rol_cd)
         then put "," @;
         else do;
                   attrLengte_5126695414912762741=length(Actuele_beh_rol_cd);
                   aantalLF_5126695414912762741 = countc(Actuele_beh_rol_cd,'0A'x);
                   maxPassend_5126695414912762741=3-1-aantalLF_5126695414912762741;
                   if attrLengte_5126695414912762741 > max(maxPassend_5126695414912762741,1000)
                     then passend_5126695414912762741 = substr(Actuele_beh_rol_cd,1,maxPassend_5126695414912762741);
                     else passend_5126695414912762741 = Actuele_beh_rol_cd;
                   passend_5126695414912762741 = tranwrd(passend_5126695414912762741,'9D'x,'D0'x);
                   put passend_5126695414912762741 ~ @;
              end;
       if missing(Problematiekcode)
         then put "," @;
         else put Problematiekcode @;
       if missing(Bedrag_bob)
         then put "," @;
         else put Bedrag_bob @;
       if missing(Aard_bob)
         then put "," @;
         else do;
                   attrLengte_1676697733324279600=length(Aard_bob);
                   aantalLF_1676697733324279600 = countc(Aard_bob,'0A'x);
                   maxPassend_1676697733324279600=1-1-aantalLF_1676697733324279600;
                   if attrLengte_1676697733324279600 > max(maxPassend_1676697733324279600,1000)
                     then passend_1676697733324279600 = substr(Aard_bob,1,maxPassend_1676697733324279600);
                     else passend_1676697733324279600 = Aard_bob;
                   passend_1676697733324279600 = tranwrd(passend_1676697733324279600,'9D'x,'D0'x);
                   put passend_1676697733324279600 ~ @;
              end;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Technisch_cor_id)
         then put "," @;
         else put Technisch_cor_id @;
       if missing(Hoofdproces)
         then put "," @;
         else do;
                   attrLengte_1346401069541862097=length(Hoofdproces);
                   aantalLF_1346401069541862097 = countc(Hoofdproces,'0A'x);
                   maxPassend_1346401069541862097=10-1-aantalLF_1346401069541862097;
                   if attrLengte_1346401069541862097 > max(maxPassend_1346401069541862097,1000)
                     then passend_1346401069541862097 = substr(Hoofdproces,1,maxPassend_1346401069541862097);
                     else passend_1346401069541862097 = Hoofdproces;
                   passend_1346401069541862097 = tranwrd(passend_1346401069541862097,'9D'x,'D0'x);
                   put passend_1346401069541862097 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_JZM_REACTIE_TERMIJN AS
   SELECT t1.Rol_cd,
          t1.Cst_cd,
          t1.Reactie_cd,
          t1.Termijn,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat
     FROM DATAQASG.JZM_REACTIE_TERMIJN_TCMG t1;
QUIT;

data MIGRATIE.BAS_JZM_REACTIE_TERMIJN;
  set MIGRATIE.BAS_JZM_REACTIE_TERMIJN;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_JZM_REACTIE_TERMIJN.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Rol_cd" 
       ','
          "Cst_cd" 
       ','
          "Reactie_cd" 
       ','
          "Termijn" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_JZM_REACTIE_TERMIJN   end=EFIEOD; 
       format Rol_cd  ;
       format Cst_cd  ;
       format Reactie_cd  ;
       format Termijn best12. ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Rol_cd)
         then put "," @;
         else do;
                   attrLengte_3864349925788261245=length(Rol_cd);
                   aantalLF_3864349925788261245 = countc(Rol_cd,'0A'x);
                   maxPassend_3864349925788261245=3-1-aantalLF_3864349925788261245;
                   if attrLengte_3864349925788261245 > max(maxPassend_3864349925788261245,1000)
                     then passend_3864349925788261245 = substr(Rol_cd,1,maxPassend_3864349925788261245);
                     else passend_3864349925788261245 = Rol_cd;
                   passend_3864349925788261245 = tranwrd(passend_3864349925788261245,'9D'x,'D0'x);
                   put passend_3864349925788261245 ~ @;
              end;
       if missing(Cst_cd)
         then put "," @;
         else do;
                   attrLengte_6311705118691231734=length(Cst_cd);
                   aantalLF_6311705118691231734 = countc(Cst_cd,'0A'x);
                   maxPassend_6311705118691231734=8-1-aantalLF_6311705118691231734;
                   if attrLengte_6311705118691231734 > max(maxPassend_6311705118691231734,1000)
                     then passend_6311705118691231734 = substr(Cst_cd,1,maxPassend_6311705118691231734);
                     else passend_6311705118691231734 = Cst_cd;
                   passend_6311705118691231734 = tranwrd(passend_6311705118691231734,'9D'x,'D0'x);
                   put passend_6311705118691231734 ~ @;
              end;
       if missing(Reactie_cd)
         then put "," @;
         else do;
                   attrLengte_4412363972584569639=length(Reactie_cd);
                   aantalLF_4412363972584569639 = countc(Reactie_cd,'0A'x);
                   maxPassend_4412363972584569639=3-1-aantalLF_4412363972584569639;
                   if attrLengte_4412363972584569639 > max(maxPassend_4412363972584569639,1000)
                     then passend_4412363972584569639 = substr(Reactie_cd,1,maxPassend_4412363972584569639);
                     else passend_4412363972584569639 = Reactie_cd;
                   passend_4412363972584569639 = tranwrd(passend_4412363972584569639,'9D'x,'D0'x);
                   put passend_4412363972584569639 ~ @;
              end;
       if missing(Termijn)
         then put "," @;
         else put Termijn @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_JZM_STATUSREGEL AS
   SELECT t1.Datum_van FORMAT=B8601DT19. AS Datum_van,
          t1.Datum_tot FORMAT=B8601DT19. AS Datum_tot,
          t1.Jz_id,
          t1.Sts_cd,
          t1.Ssg_cd,
          t1.Commentaar,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Cor_id_van,
          t1.Cor_id_tot,
          t1.Volg_nr
     FROM DATAQASG.JZM_STATUSREGEL_TCMG t1;
QUIT;

data MIGRATIE.BAS_JZM_STATUSREGEL;
  set MIGRATIE.BAS_JZM_STATUSREGEL;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_JZM_STATUSREGEL.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Datum_van" 
       ','
          "Datum_tot" 
       ','
          "Jz_id" 
       ','
          "Sts_cd" 
       ','
          "Ssg_cd" 
       ','
          "Commentaar" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Cor_id_van" 
       ','
          "Cor_id_tot" 
       ','
          "Volg_nr" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_JZM_STATUSREGEL   end=EFIEOD; 
       format Datum_van B8601DT19. ;
       format Datum_tot B8601DT19. ;
       format Jz_id best12. ;
       format Sts_cd  ;
       format Ssg_cd  ;
       format Commentaar  ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Cor_id_van best12. ;
       format Cor_id_tot best12. ;
       format Volg_nr best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Datum_van)
         then put "," @;
         else put Datum_van @;
       if missing(Datum_tot)
         then put "," @;
         else put Datum_tot @;
       if missing(Jz_id)
         then put "," @;
         else put Jz_id @;
       if missing(Sts_cd)
         then put "," @;
         else do;
                   attrLengte_1792820026946084444=length(Sts_cd);
                   aantalLF_1792820026946084444 = countc(Sts_cd,'0A'x);
                   maxPassend_1792820026946084444=3-1-aantalLF_1792820026946084444;
                   if attrLengte_1792820026946084444 > max(maxPassend_1792820026946084444,1000)
                     then passend_1792820026946084444 = substr(Sts_cd,1,maxPassend_1792820026946084444);
                     else passend_1792820026946084444 = Sts_cd;
                   passend_1792820026946084444 = tranwrd(passend_1792820026946084444,'9D'x,'D0'x);
                   put passend_1792820026946084444 ~ @;
              end;
       if missing(Ssg_cd)
         then put "," @;
         else do;
                   attrLengte_1782260468804165719=length(Ssg_cd);
                   aantalLF_1782260468804165719 = countc(Ssg_cd,'0A'x);
                   maxPassend_1782260468804165719=1-1-aantalLF_1782260468804165719;
                   if attrLengte_1782260468804165719 > max(maxPassend_1782260468804165719,1000)
                     then passend_1782260468804165719 = substr(Ssg_cd,1,maxPassend_1782260468804165719);
                     else passend_1782260468804165719 = Ssg_cd;
                   passend_1782260468804165719 = tranwrd(passend_1782260468804165719,'9D'x,'D0'x);
                   put passend_1782260468804165719 ~ @;
              end;
       if missing(Commentaar)
         then put "," @;
         else do;
                   attrLengte_4287257797458721857=length(Commentaar);
                   aantalLF_4287257797458721857 = countc(Commentaar,'0A'x);
                   maxPassend_4287257797458721857=2048-1-aantalLF_4287257797458721857;
                   if attrLengte_4287257797458721857 > max(maxPassend_4287257797458721857,1000)
                     then passend_4287257797458721857 = substr(Commentaar,1,maxPassend_4287257797458721857);
                     else passend_4287257797458721857 = Commentaar;
                   passend_4287257797458721857 = tranwrd(passend_4287257797458721857,'9D'x,'D0'x);
                   put passend_4287257797458721857 ~ @;
              end;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Cor_id_van)
         then put "," @;
         else put Cor_id_van @;
       if missing(Cor_id_tot)
         then put "," @;
         else put Cor_id_tot @;
       if missing(Volg_nr)
         then put "," @;
         else put Volg_nr @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_JZM_UITSPRAAK AS
   SELECT t1.Uitspraak,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat
     FROM DATAQASG.JZM_UITSPRAAK_TCMG t1;
QUIT;

data MIGRATIE.BAS_JZM_UITSPRAAK;
  set MIGRATIE.BAS_JZM_UITSPRAAK;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_JZM_UITSPRAAK.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Uitspraak" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_JZM_UITSPRAAK   end=EFIEOD; 
       format Uitspraak  ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Uitspraak)
         then put "," @;
         else do;
                   attrLengte_7079888756117315669=length(Uitspraak);
                   aantalLF_7079888756117315669 = countc(Uitspraak,'0A'x);
                   maxPassend_7079888756117315669=25-1-aantalLF_7079888756117315669;
                   if attrLengte_7079888756117315669 > max(maxPassend_7079888756117315669,1000)
                     then passend_7079888756117315669 = substr(Uitspraak,1,maxPassend_7079888756117315669);
                     else passend_7079888756117315669 = Uitspraak;
                   passend_7079888756117315669 = tranwrd(passend_7079888756117315669,'9D'x,'D0'x);
                   put passend_7079888756117315669 ~ @;
              end;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_OBJ_LOKATIE AS
   SELECT t1.Bik_cd,
          t1.Bik_oms,
          t1.Bouwtype,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Dos_id,
          t1.EobjectLocatie_id,
          t1.Extra_gegevens,
          t1.Huisnr,
          t1.Huisnr_toevoeging,
          t1.Lok_id,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Naam,
          t1.Plaats,
          t1.Postcode,
          t1.Prg_id,
          t1.Provincie,
          t1.Straat
     FROM DATAQASG.OBJ_LOKATIE_TCMG t1;
QUIT;

data MIGRATIE.BAS_OBJ_LOKATIE;
  set MIGRATIE.BAS_OBJ_LOKATIE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_OBJ_LOKATIE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Bik_cd" 
       ','
          "Bik_oms" 
       ','
          "Bouwtype" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Dos_id" 
       ','
          "EobjectLocatie_id" 
       ','
          "Extra_gegevens" 
       ','
          "Huisnr" 
       ','
          "Huisnr_toevoeging" 
       ','
          "Lok_id" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Naam" 
       ','
          "Plaats" 
       ','
          "Postcode" 
       ','
          "Prg_id" 
       ','
          "Provincie" 
       ','
          "Straat" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_OBJ_LOKATIE   end=EFIEOD; 
       format Bik_cd  ;
       format Bik_oms  ;
       format Bouwtype  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Dos_id best12. ;
       format EobjectLocatie_id best12. ;
       format Extra_gegevens  ;
       format Huisnr  ;
       format Huisnr_toevoeging  ;
       format Lok_id best12. ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Naam  ;
       format Plaats  ;
       format Postcode  ;
       format Prg_id best12. ;
       format Provincie  ;
       format Straat  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Bik_cd)
         then put "," @;
         else do;
                   attrLengte_5799857564552390002=length(Bik_cd);
                   aantalLF_5799857564552390002 = countc(Bik_cd,'0A'x);
                   maxPassend_5799857564552390002=9-1-aantalLF_5799857564552390002;
                   if attrLengte_5799857564552390002 > max(maxPassend_5799857564552390002,1000)
                     then passend_5799857564552390002 = substr(Bik_cd,1,maxPassend_5799857564552390002);
                     else passend_5799857564552390002 = Bik_cd;
                   passend_5799857564552390002 = tranwrd(passend_5799857564552390002,'9D'x,'D0'x);
                   put passend_5799857564552390002 ~ @;
              end;
       if missing(Bik_oms)
         then put "," @;
         else do;
                   attrLengte_6668963671176742215=length(Bik_oms);
                   aantalLF_6668963671176742215 = countc(Bik_oms,'0A'x);
                   maxPassend_6668963671176742215=200-1-aantalLF_6668963671176742215;
                   if attrLengte_6668963671176742215 > max(maxPassend_6668963671176742215,1000)
                     then passend_6668963671176742215 = substr(Bik_oms,1,maxPassend_6668963671176742215);
                     else passend_6668963671176742215 = Bik_oms;
                   passend_6668963671176742215 = tranwrd(passend_6668963671176742215,'9D'x,'D0'x);
                   put passend_6668963671176742215 ~ @;
              end;
       if missing(Bouwtype)
         then put "," @;
         else do;
                   attrLengte_733089510000349211=length(Bouwtype);
                   aantalLF_733089510000349211 = countc(Bouwtype,'0A'x);
                   maxPassend_733089510000349211=1-1-aantalLF_733089510000349211;
                   if attrLengte_733089510000349211 > max(maxPassend_733089510000349211,1000)
                     then passend_733089510000349211 = substr(Bouwtype,1,maxPassend_733089510000349211);
                     else passend_733089510000349211 = Bouwtype;
                   passend_733089510000349211 = tranwrd(passend_733089510000349211,'9D'x,'D0'x);
                   put passend_733089510000349211 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Dos_id)
         then put "," @;
         else put Dos_id @;
       if missing(EobjectLocatie_id)
         then put "," @;
         else put EobjectLocatie_id @;
       if missing(Extra_gegevens)
         then put "," @;
         else do;
                   attrLengte_8764637515045443581=length(Extra_gegevens);
                   aantalLF_8764637515045443581 = countc(Extra_gegevens,'0A'x);
                   maxPassend_8764637515045443581=255-1-aantalLF_8764637515045443581;
                   if attrLengte_8764637515045443581 > max(maxPassend_8764637515045443581,1000)
                     then passend_8764637515045443581 = substr(Extra_gegevens,1,maxPassend_8764637515045443581);
                     else passend_8764637515045443581 = Extra_gegevens;
                   passend_8764637515045443581 = tranwrd(passend_8764637515045443581,'9D'x,'D0'x);
                   put passend_8764637515045443581 ~ @;
              end;
       if missing(Huisnr)
         then put "," @;
         else do;
                   attrLengte_8529368505635133627=length(Huisnr);
                   aantalLF_8529368505635133627 = countc(Huisnr,'0A'x);
                   maxPassend_8529368505635133627=30-1-aantalLF_8529368505635133627;
                   if attrLengte_8529368505635133627 > max(maxPassend_8529368505635133627,1000)
                     then passend_8529368505635133627 = substr(Huisnr,1,maxPassend_8529368505635133627);
                     else passend_8529368505635133627 = Huisnr;
                   passend_8529368505635133627 = tranwrd(passend_8529368505635133627,'9D'x,'D0'x);
                   put passend_8529368505635133627 ~ @;
              end;
       if missing(Huisnr_toevoeging)
         then put "," @;
         else do;
                   attrLengte_5583129363718394252=length(Huisnr_toevoeging);
                   aantalLF_5583129363718394252 = countc(Huisnr_toevoeging,'0A'x);
                   maxPassend_5583129363718394252=12-1-aantalLF_5583129363718394252;
                   if attrLengte_5583129363718394252 > max(maxPassend_5583129363718394252,1000)
                     then passend_5583129363718394252 = substr(Huisnr_toevoeging,1,maxPassend_5583129363718394252);
                     else passend_5583129363718394252 = Huisnr_toevoeging;
                   passend_5583129363718394252 = tranwrd(passend_5583129363718394252,'9D'x,'D0'x);
                   put passend_5583129363718394252 ~ @;
              end;
       if missing(Lok_id)
         then put "," @;
         else put Lok_id @;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Naam)
         then put "," @;
         else do;
                   attrLengte_3121428435771779831=length(Naam);
                   aantalLF_3121428435771779831 = countc(Naam,'0A'x);
                   maxPassend_3121428435771779831=255-1-aantalLF_3121428435771779831;
                   if attrLengte_3121428435771779831 > max(maxPassend_3121428435771779831,1000)
                     then passend_3121428435771779831 = substr(Naam,1,maxPassend_3121428435771779831);
                     else passend_3121428435771779831 = Naam;
                   passend_3121428435771779831 = tranwrd(passend_3121428435771779831,'9D'x,'D0'x);
                   put passend_3121428435771779831 ~ @;
              end;
       if missing(Plaats)
         then put "," @;
         else do;
                   attrLengte_2948830150786152657=length(Plaats);
                   aantalLF_2948830150786152657 = countc(Plaats,'0A'x);
                   maxPassend_2948830150786152657=30-1-aantalLF_2948830150786152657;
                   if attrLengte_2948830150786152657 > max(maxPassend_2948830150786152657,1000)
                     then passend_2948830150786152657 = substr(Plaats,1,maxPassend_2948830150786152657);
                     else passend_2948830150786152657 = Plaats;
                   passend_2948830150786152657 = tranwrd(passend_2948830150786152657,'9D'x,'D0'x);
                   put passend_2948830150786152657 ~ @;
              end;
       if missing(Postcode)
         then put "," @;
         else do;
                   attrLengte_747405639420864755=length(Postcode);
                   aantalLF_747405639420864755 = countc(Postcode,'0A'x);
                   maxPassend_747405639420864755=12-1-aantalLF_747405639420864755;
                   if attrLengte_747405639420864755 > max(maxPassend_747405639420864755,1000)
                     then passend_747405639420864755 = substr(Postcode,1,maxPassend_747405639420864755);
                     else passend_747405639420864755 = Postcode;
                   passend_747405639420864755 = tranwrd(passend_747405639420864755,'9D'x,'D0'x);
                   put passend_747405639420864755 ~ @;
              end;
       if missing(Prg_id)
         then put "," @;
         else put Prg_id @;
       if missing(Provincie)
         then put "," @;
         else do;
                   attrLengte_4343629645042543530=length(Provincie);
                   aantalLF_4343629645042543530 = countc(Provincie,'0A'x);
                   maxPassend_4343629645042543530=30-1-aantalLF_4343629645042543530;
                   if attrLengte_4343629645042543530 > max(maxPassend_4343629645042543530,1000)
                     then passend_4343629645042543530 = substr(Provincie,1,maxPassend_4343629645042543530);
                     else passend_4343629645042543530 = Provincie;
                   passend_4343629645042543530 = tranwrd(passend_4343629645042543530,'9D'x,'D0'x);
                   put passend_4343629645042543530 ~ @;
              end;
       if missing(Straat)
         then put "," @;
         else do;
                   attrLengte_367421360090322077=length(Straat);
                   aantalLF_367421360090322077 = countc(Straat,'0A'x);
                   maxPassend_367421360090322077=60-1-aantalLF_367421360090322077;
                   if attrLengte_367421360090322077 > max(maxPassend_367421360090322077,1000)
                     then passend_367421360090322077 = substr(Straat,1,maxPassend_367421360090322077);
                     else passend_367421360090322077 = Straat;
                   passend_367421360090322077 = tranwrd(passend_367421360090322077,'9D'x,'D0'x);
                   put passend_367421360090322077 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_PCT_MUT AS
   SELECT t1.Mutatie_srt,
          t1.Mutatie_ind,
          t1.Old_cijfer,
          t1.Old_letter,
          t1.Old_reeksindicatie,
          t1.Old_codebreekpunt_van,
          t1.Old_codebreekpunt_tm,
          t1.Old_woonplaatsnaam_ptt,
          t1.Old_woonplaatsnaam_nen,
          t1.Old_straatnaam_ptt,
          t1.Old_straatnaam_nen,
          t1.Old_straatnaam_off,
          t1.Old_extract_woonplaats,
          t1.Old_extract_straatnaam,
          t1.Old_gemeentecode,
          t1.Old_gemeentenaam,
          t1.Old_provinciecode,
          t1.Old_cebuco_code,
          t1.New_cijfer,
          t1.New_letter,
          t1.New_reeksindicatie,
          t1.New_codebreekpunt_van,
          t1.New_codebreekpunt_tm,
          t1.New_woonplaatsnaam_ptt,
          t1.New_woonplaatsnaam_nen,
          t1.New_straatnaam_ptt,
          t1.New_straatnaam_nen,
          t1.New_straatnaam_off,
          t1.New_extract_woonplaats,
          t1.New_extract_straatnaam,
          t1.New_gemeentecode,
          t1.New_gemeentenaam,
          t1.New_provinciecode,
          t1.New_cebuco_code
     FROM DATAQASG.PCT_MUT_TCMG t1;
QUIT;

data MIGRATIE.BAS_PCT_MUT;
  set MIGRATIE.BAS_PCT_MUT;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_PCT_MUT.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Mutatie_srt" 
       ','
          "Mutatie_ind" 
       ','
          "Old_cijfer" 
       ','
          "Old_letter" 
       ','
          "Old_reeksindicatie" 
       ','
          "Old_codebreekpunt_van" 
       ','
          "Old_codebreekpunt_tm" 
       ','
          "Old_woonplaatsnaam_ptt" 
       ','
          "Old_woonplaatsnaam_nen" 
       ','
          "Old_straatnaam_ptt" 
       ','
          "Old_straatnaam_nen" 
       ','
          "Old_straatnaam_off" 
       ','
          "Old_extract_woonplaats" 
       ','
          "Old_extract_straatnaam" 
       ','
          "Old_gemeentecode" 
       ','
          "Old_gemeentenaam" 
       ','
          "Old_provinciecode" 
       ','
          "Old_cebuco_code" 
       ','
          "New_cijfer" 
       ','
          "New_letter" 
       ','
          "New_reeksindicatie" 
       ','
          "New_codebreekpunt_van" 
       ','
          "New_codebreekpunt_tm" 
       ','
          "New_woonplaatsnaam_ptt" 
       ','
          "New_woonplaatsnaam_nen" 
       ','
          "New_straatnaam_ptt" 
       ','
          "New_straatnaam_nen" 
       ','
          "New_straatnaam_off" 
       ','
          "New_extract_woonplaats" 
       ','
          "New_extract_straatnaam" 
       ','
          "New_gemeentecode" 
       ','
          "New_gemeentenaam" 
       ','
          "New_provinciecode" 
       ','
          "New_cebuco_code" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_PCT_MUT   end=EFIEOD; 
       format Mutatie_srt  ;
       format Mutatie_ind  ;
       format Old_cijfer  ;
       format Old_letter  ;
       format Old_reeksindicatie  ;
       format Old_codebreekpunt_van  ;
       format Old_codebreekpunt_tm  ;
       format Old_woonplaatsnaam_ptt  ;
       format Old_woonplaatsnaam_nen  ;
       format Old_straatnaam_ptt  ;
       format Old_straatnaam_nen  ;
       format Old_straatnaam_off  ;
       format Old_extract_woonplaats  ;
       format Old_extract_straatnaam  ;
       format Old_gemeentecode  ;
       format Old_gemeentenaam  ;
       format Old_provinciecode  ;
       format Old_cebuco_code  ;
       format New_cijfer  ;
       format New_letter  ;
       format New_reeksindicatie  ;
       format New_codebreekpunt_van  ;
       format New_codebreekpunt_tm  ;
       format New_woonplaatsnaam_ptt  ;
       format New_woonplaatsnaam_nen  ;
       format New_straatnaam_ptt  ;
       format New_straatnaam_nen  ;
       format New_straatnaam_off  ;
       format New_extract_woonplaats  ;
       format New_extract_straatnaam  ;
       format New_gemeentecode  ;
       format New_gemeentenaam  ;
       format New_provinciecode  ;
       format New_cebuco_code  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Mutatie_srt)
         then put "," @;
         else do;
                   attrLengte_7250693880212314974=length(Mutatie_srt);
                   aantalLF_7250693880212314974 = countc(Mutatie_srt,'0A'x);
                   maxPassend_7250693880212314974=1-1-aantalLF_7250693880212314974;
                   if attrLengte_7250693880212314974 > max(maxPassend_7250693880212314974,1000)
                     then passend_7250693880212314974 = substr(Mutatie_srt,1,maxPassend_7250693880212314974);
                     else passend_7250693880212314974 = Mutatie_srt;
                   passend_7250693880212314974 = tranwrd(passend_7250693880212314974,'9D'x,'D0'x);
                   put passend_7250693880212314974 ~ @;
              end;
       if missing(Mutatie_ind)
         then put "," @;
         else do;
                   attrLengte_9147425939904536828=length(Mutatie_ind);
                   aantalLF_9147425939904536828 = countc(Mutatie_ind,'0A'x);
                   maxPassend_9147425939904536828=16-1-aantalLF_9147425939904536828;
                   if attrLengte_9147425939904536828 > max(maxPassend_9147425939904536828,1000)
                     then passend_9147425939904536828 = substr(Mutatie_ind,1,maxPassend_9147425939904536828);
                     else passend_9147425939904536828 = Mutatie_ind;
                   passend_9147425939904536828 = tranwrd(passend_9147425939904536828,'9D'x,'D0'x);
                   put passend_9147425939904536828 ~ @;
              end;
       if missing(Old_cijfer)
         then put "," @;
         else do;
                   attrLengte_3173001277403718267=length(Old_cijfer);
                   aantalLF_3173001277403718267 = countc(Old_cijfer,'0A'x);
                   maxPassend_3173001277403718267=4-1-aantalLF_3173001277403718267;
                   if attrLengte_3173001277403718267 > max(maxPassend_3173001277403718267,1000)
                     then passend_3173001277403718267 = substr(Old_cijfer,1,maxPassend_3173001277403718267);
                     else passend_3173001277403718267 = Old_cijfer;
                   passend_3173001277403718267 = tranwrd(passend_3173001277403718267,'9D'x,'D0'x);
                   put passend_3173001277403718267 ~ @;
              end;
       if missing(Old_letter)
         then put "," @;
         else do;
                   attrLengte_530137093424999580=length(Old_letter);
                   aantalLF_530137093424999580 = countc(Old_letter,'0A'x);
                   maxPassend_530137093424999580=2-1-aantalLF_530137093424999580;
                   if attrLengte_530137093424999580 > max(maxPassend_530137093424999580,1000)
                     then passend_530137093424999580 = substr(Old_letter,1,maxPassend_530137093424999580);
                     else passend_530137093424999580 = Old_letter;
                   passend_530137093424999580 = tranwrd(passend_530137093424999580,'9D'x,'D0'x);
                   put passend_530137093424999580 ~ @;
              end;
       if missing(Old_reeksindicatie)
         then put "," @;
         else do;
                   attrLengte_8129953195777226016=length(Old_reeksindicatie);
                   aantalLF_8129953195777226016 = countc(Old_reeksindicatie,'0A'x);
                   maxPassend_8129953195777226016=1-1-aantalLF_8129953195777226016;
                   if attrLengte_8129953195777226016 > max(maxPassend_8129953195777226016,1000)
                     then passend_8129953195777226016 = substr(Old_reeksindicatie,1,maxPassend_8129953195777226016);
                     else passend_8129953195777226016 = Old_reeksindicatie;
                   passend_8129953195777226016 = tranwrd(passend_8129953195777226016,'9D'x,'D0'x);
                   put passend_8129953195777226016 ~ @;
              end;
       if missing(Old_codebreekpunt_van)
         then put "," @;
         else do;
                   attrLengte_5138969292331377232=length(Old_codebreekpunt_van);
                   aantalLF_5138969292331377232 = countc(Old_codebreekpunt_van,'0A'x);
                   maxPassend_5138969292331377232=5-1-aantalLF_5138969292331377232;
                   if attrLengte_5138969292331377232 > max(maxPassend_5138969292331377232,1000)
                     then passend_5138969292331377232 = substr(Old_codebreekpunt_van,1,maxPassend_5138969292331377232);
                     else passend_5138969292331377232 = Old_codebreekpunt_van;
                   passend_5138969292331377232 = tranwrd(passend_5138969292331377232,'9D'x,'D0'x);
                   put passend_5138969292331377232 ~ @;
              end;
       if missing(Old_codebreekpunt_tm)
         then put "," @;
         else do;
                   attrLengte_7922483400467009369=length(Old_codebreekpunt_tm);
                   aantalLF_7922483400467009369 = countc(Old_codebreekpunt_tm,'0A'x);
                   maxPassend_7922483400467009369=5-1-aantalLF_7922483400467009369;
                   if attrLengte_7922483400467009369 > max(maxPassend_7922483400467009369,1000)
                     then passend_7922483400467009369 = substr(Old_codebreekpunt_tm,1,maxPassend_7922483400467009369);
                     else passend_7922483400467009369 = Old_codebreekpunt_tm;
                   passend_7922483400467009369 = tranwrd(passend_7922483400467009369,'9D'x,'D0'x);
                   put passend_7922483400467009369 ~ @;
              end;
       if missing(Old_woonplaatsnaam_ptt)
         then put "," @;
         else do;
                   attrLengte_1540560090221989888=length(Old_woonplaatsnaam_ptt);
                   aantalLF_1540560090221989888 = countc(Old_woonplaatsnaam_ptt,'0A'x);
                   maxPassend_1540560090221989888=18-1-aantalLF_1540560090221989888;
                   if attrLengte_1540560090221989888 > max(maxPassend_1540560090221989888,1000)
                     then passend_1540560090221989888 = substr(Old_woonplaatsnaam_ptt,1,maxPassend_1540560090221989888);
                     else passend_1540560090221989888 = Old_woonplaatsnaam_ptt;
                   passend_1540560090221989888 = tranwrd(passend_1540560090221989888,'9D'x,'D0'x);
                   put passend_1540560090221989888 ~ @;
              end;
       if missing(Old_woonplaatsnaam_nen)
         then put "," @;
         else do;
                   attrLengte_3523597521227454223=length(Old_woonplaatsnaam_nen);
                   aantalLF_3523597521227454223 = countc(Old_woonplaatsnaam_nen,'0A'x);
                   maxPassend_3523597521227454223=24-1-aantalLF_3523597521227454223;
                   if attrLengte_3523597521227454223 > max(maxPassend_3523597521227454223,1000)
                     then passend_3523597521227454223 = substr(Old_woonplaatsnaam_nen,1,maxPassend_3523597521227454223);
                     else passend_3523597521227454223 = Old_woonplaatsnaam_nen;
                   passend_3523597521227454223 = tranwrd(passend_3523597521227454223,'9D'x,'D0'x);
                   put passend_3523597521227454223 ~ @;
              end;
       if missing(Old_straatnaam_ptt)
         then put "," @;
         else do;
                   attrLengte_5102415678729774973=length(Old_straatnaam_ptt);
                   aantalLF_5102415678729774973 = countc(Old_straatnaam_ptt,'0A'x);
                   maxPassend_5102415678729774973=17-1-aantalLF_5102415678729774973;
                   if attrLengte_5102415678729774973 > max(maxPassend_5102415678729774973,1000)
                     then passend_5102415678729774973 = substr(Old_straatnaam_ptt,1,maxPassend_5102415678729774973);
                     else passend_5102415678729774973 = Old_straatnaam_ptt;
                   passend_5102415678729774973 = tranwrd(passend_5102415678729774973,'9D'x,'D0'x);
                   put passend_5102415678729774973 ~ @;
              end;
       if missing(Old_straatnaam_nen)
         then put "," @;
         else do;
                   attrLengte_1661300520083600510=length(Old_straatnaam_nen);
                   aantalLF_1661300520083600510 = countc(Old_straatnaam_nen,'0A'x);
                   maxPassend_1661300520083600510=24-1-aantalLF_1661300520083600510;
                   if attrLengte_1661300520083600510 > max(maxPassend_1661300520083600510,1000)
                     then passend_1661300520083600510 = substr(Old_straatnaam_nen,1,maxPassend_1661300520083600510);
                     else passend_1661300520083600510 = Old_straatnaam_nen;
                   passend_1661300520083600510 = tranwrd(passend_1661300520083600510,'9D'x,'D0'x);
                   put passend_1661300520083600510 ~ @;
              end;
       if missing(Old_straatnaam_off)
         then put "," @;
         else do;
                   attrLengte_2054813268613832566=length(Old_straatnaam_off);
                   aantalLF_2054813268613832566 = countc(Old_straatnaam_off,'0A'x);
                   maxPassend_2054813268613832566=43-1-aantalLF_2054813268613832566;
                   if attrLengte_2054813268613832566 > max(maxPassend_2054813268613832566,1000)
                     then passend_2054813268613832566 = substr(Old_straatnaam_off,1,maxPassend_2054813268613832566);
                     else passend_2054813268613832566 = Old_straatnaam_off;
                   passend_2054813268613832566 = tranwrd(passend_2054813268613832566,'9D'x,'D0'x);
                   put passend_2054813268613832566 ~ @;
              end;
       if missing(Old_extract_woonplaats)
         then put "," @;
         else do;
                   attrLengte_3247069511580703390=length(Old_extract_woonplaats);
                   aantalLF_3247069511580703390 = countc(Old_extract_woonplaats,'0A'x);
                   maxPassend_3247069511580703390=4-1-aantalLF_3247069511580703390;
                   if attrLengte_3247069511580703390 > max(maxPassend_3247069511580703390,1000)
                     then passend_3247069511580703390 = substr(Old_extract_woonplaats,1,maxPassend_3247069511580703390);
                     else passend_3247069511580703390 = Old_extract_woonplaats;
                   passend_3247069511580703390 = tranwrd(passend_3247069511580703390,'9D'x,'D0'x);
                   put passend_3247069511580703390 ~ @;
              end;
       if missing(Old_extract_straatnaam)
         then put "," @;
         else do;
                   attrLengte_3278774028479216594=length(Old_extract_straatnaam);
                   aantalLF_3278774028479216594 = countc(Old_extract_straatnaam,'0A'x);
                   maxPassend_3278774028479216594=5-1-aantalLF_3278774028479216594;
                   if attrLengte_3278774028479216594 > max(maxPassend_3278774028479216594,1000)
                     then passend_3278774028479216594 = substr(Old_extract_straatnaam,1,maxPassend_3278774028479216594);
                     else passend_3278774028479216594 = Old_extract_straatnaam;
                   passend_3278774028479216594 = tranwrd(passend_3278774028479216594,'9D'x,'D0'x);
                   put passend_3278774028479216594 ~ @;
              end;
       if missing(Old_gemeentecode)
         then put "," @;
         else do;
                   attrLengte_1917443286006337527=length(Old_gemeentecode);
                   aantalLF_1917443286006337527 = countc(Old_gemeentecode,'0A'x);
                   maxPassend_1917443286006337527=4-1-aantalLF_1917443286006337527;
                   if attrLengte_1917443286006337527 > max(maxPassend_1917443286006337527,1000)
                     then passend_1917443286006337527 = substr(Old_gemeentecode,1,maxPassend_1917443286006337527);
                     else passend_1917443286006337527 = Old_gemeentecode;
                   passend_1917443286006337527 = tranwrd(passend_1917443286006337527,'9D'x,'D0'x);
                   put passend_1917443286006337527 ~ @;
              end;
       if missing(Old_gemeentenaam)
         then put "," @;
         else do;
                   attrLengte_3365776602087829517=length(Old_gemeentenaam);
                   aantalLF_3365776602087829517 = countc(Old_gemeentenaam,'0A'x);
                   maxPassend_3365776602087829517=24-1-aantalLF_3365776602087829517;
                   if attrLengte_3365776602087829517 > max(maxPassend_3365776602087829517,1000)
                     then passend_3365776602087829517 = substr(Old_gemeentenaam,1,maxPassend_3365776602087829517);
                     else passend_3365776602087829517 = Old_gemeentenaam;
                   passend_3365776602087829517 = tranwrd(passend_3365776602087829517,'9D'x,'D0'x);
                   put passend_3365776602087829517 ~ @;
              end;
       if missing(Old_provinciecode)
         then put "," @;
         else do;
                   attrLengte_3669044964299775011=length(Old_provinciecode);
                   aantalLF_3669044964299775011 = countc(Old_provinciecode,'0A'x);
                   maxPassend_3669044964299775011=1-1-aantalLF_3669044964299775011;
                   if attrLengte_3669044964299775011 > max(maxPassend_3669044964299775011,1000)
                     then passend_3669044964299775011 = substr(Old_provinciecode,1,maxPassend_3669044964299775011);
                     else passend_3669044964299775011 = Old_provinciecode;
                   passend_3669044964299775011 = tranwrd(passend_3669044964299775011,'9D'x,'D0'x);
                   put passend_3669044964299775011 ~ @;
              end;
       if missing(Old_cebuco_code)
         then put "," @;
         else do;
                   attrLengte_1372155496571826432=length(Old_cebuco_code);
                   aantalLF_1372155496571826432 = countc(Old_cebuco_code,'0A'x);
                   maxPassend_1372155496571826432=3-1-aantalLF_1372155496571826432;
                   if attrLengte_1372155496571826432 > max(maxPassend_1372155496571826432,1000)
                     then passend_1372155496571826432 = substr(Old_cebuco_code,1,maxPassend_1372155496571826432);
                     else passend_1372155496571826432 = Old_cebuco_code;
                   passend_1372155496571826432 = tranwrd(passend_1372155496571826432,'9D'x,'D0'x);
                   put passend_1372155496571826432 ~ @;
              end;
       if missing(New_cijfer)
         then put "," @;
         else do;
                   attrLengte_8077792040508706534=length(New_cijfer);
                   aantalLF_8077792040508706534 = countc(New_cijfer,'0A'x);
                   maxPassend_8077792040508706534=4-1-aantalLF_8077792040508706534;
                   if attrLengte_8077792040508706534 > max(maxPassend_8077792040508706534,1000)
                     then passend_8077792040508706534 = substr(New_cijfer,1,maxPassend_8077792040508706534);
                     else passend_8077792040508706534 = New_cijfer;
                   passend_8077792040508706534 = tranwrd(passend_8077792040508706534,'9D'x,'D0'x);
                   put passend_8077792040508706534 ~ @;
              end;
       if missing(New_letter)
         then put "," @;
         else do;
                   attrLengte_8213088235365646527=length(New_letter);
                   aantalLF_8213088235365646527 = countc(New_letter,'0A'x);
                   maxPassend_8213088235365646527=2-1-aantalLF_8213088235365646527;
                   if attrLengte_8213088235365646527 > max(maxPassend_8213088235365646527,1000)
                     then passend_8213088235365646527 = substr(New_letter,1,maxPassend_8213088235365646527);
                     else passend_8213088235365646527 = New_letter;
                   passend_8213088235365646527 = tranwrd(passend_8213088235365646527,'9D'x,'D0'x);
                   put passend_8213088235365646527 ~ @;
              end;
       if missing(New_reeksindicatie)
         then put "," @;
         else do;
                   attrLengte_5223730194662017737=length(New_reeksindicatie);
                   aantalLF_5223730194662017737 = countc(New_reeksindicatie,'0A'x);
                   maxPassend_5223730194662017737=1-1-aantalLF_5223730194662017737;
                   if attrLengte_5223730194662017737 > max(maxPassend_5223730194662017737,1000)
                     then passend_5223730194662017737 = substr(New_reeksindicatie,1,maxPassend_5223730194662017737);
                     else passend_5223730194662017737 = New_reeksindicatie;
                   passend_5223730194662017737 = tranwrd(passend_5223730194662017737,'9D'x,'D0'x);
                   put passend_5223730194662017737 ~ @;
              end;
       if missing(New_codebreekpunt_van)
         then put "," @;
         else do;
                   attrLengte_8051144216959963729=length(New_codebreekpunt_van);
                   aantalLF_8051144216959963729 = countc(New_codebreekpunt_van,'0A'x);
                   maxPassend_8051144216959963729=5-1-aantalLF_8051144216959963729;
                   if attrLengte_8051144216959963729 > max(maxPassend_8051144216959963729,1000)
                     then passend_8051144216959963729 = substr(New_codebreekpunt_van,1,maxPassend_8051144216959963729);
                     else passend_8051144216959963729 = New_codebreekpunt_van;
                   passend_8051144216959963729 = tranwrd(passend_8051144216959963729,'9D'x,'D0'x);
                   put passend_8051144216959963729 ~ @;
              end;
       if missing(New_codebreekpunt_tm)
         then put "," @;
         else do;
                   attrLengte_3767999090745901446=length(New_codebreekpunt_tm);
                   aantalLF_3767999090745901446 = countc(New_codebreekpunt_tm,'0A'x);
                   maxPassend_3767999090745901446=5-1-aantalLF_3767999090745901446;
                   if attrLengte_3767999090745901446 > max(maxPassend_3767999090745901446,1000)
                     then passend_3767999090745901446 = substr(New_codebreekpunt_tm,1,maxPassend_3767999090745901446);
                     else passend_3767999090745901446 = New_codebreekpunt_tm;
                   passend_3767999090745901446 = tranwrd(passend_3767999090745901446,'9D'x,'D0'x);
                   put passend_3767999090745901446 ~ @;
              end;
       if missing(New_woonplaatsnaam_ptt)
         then put "," @;
         else do;
                   attrLengte_2786646432340601707=length(New_woonplaatsnaam_ptt);
                   aantalLF_2786646432340601707 = countc(New_woonplaatsnaam_ptt,'0A'x);
                   maxPassend_2786646432340601707=18-1-aantalLF_2786646432340601707;
                   if attrLengte_2786646432340601707 > max(maxPassend_2786646432340601707,1000)
                     then passend_2786646432340601707 = substr(New_woonplaatsnaam_ptt,1,maxPassend_2786646432340601707);
                     else passend_2786646432340601707 = New_woonplaatsnaam_ptt;
                   passend_2786646432340601707 = tranwrd(passend_2786646432340601707,'9D'x,'D0'x);
                   put passend_2786646432340601707 ~ @;
              end;
       if missing(New_woonplaatsnaam_nen)
         then put "," @;
         else do;
                   attrLengte_7388636093498186804=length(New_woonplaatsnaam_nen);
                   aantalLF_7388636093498186804 = countc(New_woonplaatsnaam_nen,'0A'x);
                   maxPassend_7388636093498186804=24-1-aantalLF_7388636093498186804;
                   if attrLengte_7388636093498186804 > max(maxPassend_7388636093498186804,1000)
                     then passend_7388636093498186804 = substr(New_woonplaatsnaam_nen,1,maxPassend_7388636093498186804);
                     else passend_7388636093498186804 = New_woonplaatsnaam_nen;
                   passend_7388636093498186804 = tranwrd(passend_7388636093498186804,'9D'x,'D0'x);
                   put passend_7388636093498186804 ~ @;
              end;
       if missing(New_straatnaam_ptt)
         then put "," @;
         else do;
                   attrLengte_438267695295932282=length(New_straatnaam_ptt);
                   aantalLF_438267695295932282 = countc(New_straatnaam_ptt,'0A'x);
                   maxPassend_438267695295932282=17-1-aantalLF_438267695295932282;
                   if attrLengte_438267695295932282 > max(maxPassend_438267695295932282,1000)
                     then passend_438267695295932282 = substr(New_straatnaam_ptt,1,maxPassend_438267695295932282);
                     else passend_438267695295932282 = New_straatnaam_ptt;
                   passend_438267695295932282 = tranwrd(passend_438267695295932282,'9D'x,'D0'x);
                   put passend_438267695295932282 ~ @;
              end;
       if missing(New_straatnaam_nen)
         then put "," @;
         else do;
                   attrLengte_219554580145408837=length(New_straatnaam_nen);
                   aantalLF_219554580145408837 = countc(New_straatnaam_nen,'0A'x);
                   maxPassend_219554580145408837=24-1-aantalLF_219554580145408837;
                   if attrLengte_219554580145408837 > max(maxPassend_219554580145408837,1000)
                     then passend_219554580145408837 = substr(New_straatnaam_nen,1,maxPassend_219554580145408837);
                     else passend_219554580145408837 = New_straatnaam_nen;
                   passend_219554580145408837 = tranwrd(passend_219554580145408837,'9D'x,'D0'x);
                   put passend_219554580145408837 ~ @;
              end;
       if missing(New_straatnaam_off)
         then put "," @;
         else do;
                   attrLengte_118786421849122903=length(New_straatnaam_off);
                   aantalLF_118786421849122903 = countc(New_straatnaam_off,'0A'x);
                   maxPassend_118786421849122903=43-1-aantalLF_118786421849122903;
                   if attrLengte_118786421849122903 > max(maxPassend_118786421849122903,1000)
                     then passend_118786421849122903 = substr(New_straatnaam_off,1,maxPassend_118786421849122903);
                     else passend_118786421849122903 = New_straatnaam_off;
                   passend_118786421849122903 = tranwrd(passend_118786421849122903,'9D'x,'D0'x);
                   put passend_118786421849122903 ~ @;
              end;
       if missing(New_extract_woonplaats)
         then put "," @;
         else do;
                   attrLengte_1763981602898539863=length(New_extract_woonplaats);
                   aantalLF_1763981602898539863 = countc(New_extract_woonplaats,'0A'x);
                   maxPassend_1763981602898539863=4-1-aantalLF_1763981602898539863;
                   if attrLengte_1763981602898539863 > max(maxPassend_1763981602898539863,1000)
                     then passend_1763981602898539863 = substr(New_extract_woonplaats,1,maxPassend_1763981602898539863);
                     else passend_1763981602898539863 = New_extract_woonplaats;
                   passend_1763981602898539863 = tranwrd(passend_1763981602898539863,'9D'x,'D0'x);
                   put passend_1763981602898539863 ~ @;
              end;
       if missing(New_extract_straatnaam)
         then put "," @;
         else do;
                   attrLengte_2346456890105101627=length(New_extract_straatnaam);
                   aantalLF_2346456890105101627 = countc(New_extract_straatnaam,'0A'x);
                   maxPassend_2346456890105101627=5-1-aantalLF_2346456890105101627;
                   if attrLengte_2346456890105101627 > max(maxPassend_2346456890105101627,1000)
                     then passend_2346456890105101627 = substr(New_extract_straatnaam,1,maxPassend_2346456890105101627);
                     else passend_2346456890105101627 = New_extract_straatnaam;
                   passend_2346456890105101627 = tranwrd(passend_2346456890105101627,'9D'x,'D0'x);
                   put passend_2346456890105101627 ~ @;
              end;
       if missing(New_gemeentecode)
         then put "," @;
         else do;
                   attrLengte_1281203927814949840=length(New_gemeentecode);
                   aantalLF_1281203927814949840 = countc(New_gemeentecode,'0A'x);
                   maxPassend_1281203927814949840=4-1-aantalLF_1281203927814949840;
                   if attrLengte_1281203927814949840 > max(maxPassend_1281203927814949840,1000)
                     then passend_1281203927814949840 = substr(New_gemeentecode,1,maxPassend_1281203927814949840);
                     else passend_1281203927814949840 = New_gemeentecode;
                   passend_1281203927814949840 = tranwrd(passend_1281203927814949840,'9D'x,'D0'x);
                   put passend_1281203927814949840 ~ @;
              end;
       if missing(New_gemeentenaam)
         then put "," @;
         else do;
                   attrLengte_2566451087127917058=length(New_gemeentenaam);
                   aantalLF_2566451087127917058 = countc(New_gemeentenaam,'0A'x);
                   maxPassend_2566451087127917058=24-1-aantalLF_2566451087127917058;
                   if attrLengte_2566451087127917058 > max(maxPassend_2566451087127917058,1000)
                     then passend_2566451087127917058 = substr(New_gemeentenaam,1,maxPassend_2566451087127917058);
                     else passend_2566451087127917058 = New_gemeentenaam;
                   passend_2566451087127917058 = tranwrd(passend_2566451087127917058,'9D'x,'D0'x);
                   put passend_2566451087127917058 ~ @;
              end;
       if missing(New_provinciecode)
         then put "," @;
         else do;
                   attrLengte_3954932300489292346=length(New_provinciecode);
                   aantalLF_3954932300489292346 = countc(New_provinciecode,'0A'x);
                   maxPassend_3954932300489292346=2-1-aantalLF_3954932300489292346;
                   if attrLengte_3954932300489292346 > max(maxPassend_3954932300489292346,1000)
                     then passend_3954932300489292346 = substr(New_provinciecode,1,maxPassend_3954932300489292346);
                     else passend_3954932300489292346 = New_provinciecode;
                   passend_3954932300489292346 = tranwrd(passend_3954932300489292346,'9D'x,'D0'x);
                   put passend_3954932300489292346 ~ @;
              end;
       if missing(New_cebuco_code)
         then put "," @;
         else do;
                   attrLengte_8171271901830781513=length(New_cebuco_code);
                   aantalLF_8171271901830781513 = countc(New_cebuco_code,'0A'x);
                   maxPassend_8171271901830781513=3-1-aantalLF_8171271901830781513;
                   if attrLengte_8171271901830781513 > max(maxPassend_8171271901830781513,1000)
                     then passend_8171271901830781513 = substr(New_cebuco_code,1,maxPassend_8171271901830781513);
                     else passend_8171271901830781513 = New_cebuco_code;
                   passend_8171271901830781513 = tranwrd(passend_8171271901830781513,'9D'x,'D0'x);
                   put passend_8171271901830781513 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_PCT AS
   SELECT t1.Cijfer,
          t1.Letter,
          t1.Reeksindicatie,
          t1.Codebreekpunt_van,
          t1.Codebreekpunt_tm,
          t1.Woonplaatsnaam_ptt,
          t1.Woonplaatsnaam_nen,
          t1.Straatnaam_ptt,
          t1.Straatnaam_nen,
          t1.Straatnaam_off,
          t1.Extract_woonplaats,
          t1.Extract_straatnaam,
          t1.Gemeentecode,
          t1.Gemeentenaam,
          t1.Provinciecode,
          t1.Cebuco_code
     FROM DATAQASG.PCT_TCMG t1;
QUIT;

data MIGRATIE.BAS_PCT;
  set MIGRATIE.BAS_PCT;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_PCT.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Cijfer" 
       ','
          "Letter" 
       ','
          "Reeksindicatie" 
       ','
          "Codebreekpunt_van" 
       ','
          "Codebreekpunt_tm" 
       ','
          "Woonplaatsnaam_ptt" 
       ','
          "Woonplaatsnaam_nen" 
       ','
          "Straatnaam_ptt" 
       ','
          "Straatnaam_nen" 
       ','
          "Straatnaam_off" 
       ','
          "Extract_woonplaats" 
       ','
          "Extract_straatnaam" 
       ','
          "Gemeentecode" 
       ','
          "Gemeentenaam" 
       ','
          "Provinciecode" 
       ','
          "Cebuco_code" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_PCT   end=EFIEOD; 
       format Cijfer  ;
       format Letter  ;
       format Reeksindicatie  ;
       format Codebreekpunt_van  ;
       format Codebreekpunt_tm  ;
       format Woonplaatsnaam_ptt  ;
       format Woonplaatsnaam_nen  ;
       format Straatnaam_ptt  ;
       format Straatnaam_nen  ;
       format Straatnaam_off  ;
       format Extract_woonplaats  ;
       format Extract_straatnaam  ;
       format Gemeentecode  ;
       format Gemeentenaam  ;
       format Provinciecode  ;
       format Cebuco_code  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Cijfer)
         then put "," @;
         else do;
                   attrLengte_7658064378769085315=length(Cijfer);
                   aantalLF_7658064378769085315 = countc(Cijfer,'0A'x);
                   maxPassend_7658064378769085315=4-1-aantalLF_7658064378769085315;
                   if attrLengte_7658064378769085315 > max(maxPassend_7658064378769085315,1000)
                     then passend_7658064378769085315 = substr(Cijfer,1,maxPassend_7658064378769085315);
                     else passend_7658064378769085315 = Cijfer;
                   passend_7658064378769085315 = tranwrd(passend_7658064378769085315,'9D'x,'D0'x);
                   put passend_7658064378769085315 ~ @;
              end;
       if missing(Letter)
         then put "," @;
         else do;
                   attrLengte_229837512413899150=length(Letter);
                   aantalLF_229837512413899150 = countc(Letter,'0A'x);
                   maxPassend_229837512413899150=2-1-aantalLF_229837512413899150;
                   if attrLengte_229837512413899150 > max(maxPassend_229837512413899150,1000)
                     then passend_229837512413899150 = substr(Letter,1,maxPassend_229837512413899150);
                     else passend_229837512413899150 = Letter;
                   passend_229837512413899150 = tranwrd(passend_229837512413899150,'9D'x,'D0'x);
                   put passend_229837512413899150 ~ @;
              end;
       if missing(Reeksindicatie)
         then put "," @;
         else do;
                   attrLengte_3757180471494144886=length(Reeksindicatie);
                   aantalLF_3757180471494144886 = countc(Reeksindicatie,'0A'x);
                   maxPassend_3757180471494144886=1-1-aantalLF_3757180471494144886;
                   if attrLengte_3757180471494144886 > max(maxPassend_3757180471494144886,1000)
                     then passend_3757180471494144886 = substr(Reeksindicatie,1,maxPassend_3757180471494144886);
                     else passend_3757180471494144886 = Reeksindicatie;
                   passend_3757180471494144886 = tranwrd(passend_3757180471494144886,'9D'x,'D0'x);
                   put passend_3757180471494144886 ~ @;
              end;
       if missing(Codebreekpunt_van)
         then put "," @;
         else do;
                   attrLengte_7194970507938686150=length(Codebreekpunt_van);
                   aantalLF_7194970507938686150 = countc(Codebreekpunt_van,'0A'x);
                   maxPassend_7194970507938686150=5-1-aantalLF_7194970507938686150;
                   if attrLengte_7194970507938686150 > max(maxPassend_7194970507938686150,1000)
                     then passend_7194970507938686150 = substr(Codebreekpunt_van,1,maxPassend_7194970507938686150);
                     else passend_7194970507938686150 = Codebreekpunt_van;
                   passend_7194970507938686150 = tranwrd(passend_7194970507938686150,'9D'x,'D0'x);
                   put passend_7194970507938686150 ~ @;
              end;
       if missing(Codebreekpunt_tm)
         then put "," @;
         else do;
                   attrLengte_6591420947937743793=length(Codebreekpunt_tm);
                   aantalLF_6591420947937743793 = countc(Codebreekpunt_tm,'0A'x);
                   maxPassend_6591420947937743793=5-1-aantalLF_6591420947937743793;
                   if attrLengte_6591420947937743793 > max(maxPassend_6591420947937743793,1000)
                     then passend_6591420947937743793 = substr(Codebreekpunt_tm,1,maxPassend_6591420947937743793);
                     else passend_6591420947937743793 = Codebreekpunt_tm;
                   passend_6591420947937743793 = tranwrd(passend_6591420947937743793,'9D'x,'D0'x);
                   put passend_6591420947937743793 ~ @;
              end;
       if missing(Woonplaatsnaam_ptt)
         then put "," @;
         else do;
                   attrLengte_5025548497113877842=length(Woonplaatsnaam_ptt);
                   aantalLF_5025548497113877842 = countc(Woonplaatsnaam_ptt,'0A'x);
                   maxPassend_5025548497113877842=18-1-aantalLF_5025548497113877842;
                   if attrLengte_5025548497113877842 > max(maxPassend_5025548497113877842,1000)
                     then passend_5025548497113877842 = substr(Woonplaatsnaam_ptt,1,maxPassend_5025548497113877842);
                     else passend_5025548497113877842 = Woonplaatsnaam_ptt;
                   passend_5025548497113877842 = tranwrd(passend_5025548497113877842,'9D'x,'D0'x);
                   put passend_5025548497113877842 ~ @;
              end;
       if missing(Woonplaatsnaam_nen)
         then put "," @;
         else do;
                   attrLengte_4559868662858897319=length(Woonplaatsnaam_nen);
                   aantalLF_4559868662858897319 = countc(Woonplaatsnaam_nen,'0A'x);
                   maxPassend_4559868662858897319=24-1-aantalLF_4559868662858897319;
                   if attrLengte_4559868662858897319 > max(maxPassend_4559868662858897319,1000)
                     then passend_4559868662858897319 = substr(Woonplaatsnaam_nen,1,maxPassend_4559868662858897319);
                     else passend_4559868662858897319 = Woonplaatsnaam_nen;
                   passend_4559868662858897319 = tranwrd(passend_4559868662858897319,'9D'x,'D0'x);
                   put passend_4559868662858897319 ~ @;
              end;
       if missing(Straatnaam_ptt)
         then put "," @;
         else do;
                   attrLengte_4555017436313506669=length(Straatnaam_ptt);
                   aantalLF_4555017436313506669 = countc(Straatnaam_ptt,'0A'x);
                   maxPassend_4555017436313506669=17-1-aantalLF_4555017436313506669;
                   if attrLengte_4555017436313506669 > max(maxPassend_4555017436313506669,1000)
                     then passend_4555017436313506669 = substr(Straatnaam_ptt,1,maxPassend_4555017436313506669);
                     else passend_4555017436313506669 = Straatnaam_ptt;
                   passend_4555017436313506669 = tranwrd(passend_4555017436313506669,'9D'x,'D0'x);
                   put passend_4555017436313506669 ~ @;
              end;
       if missing(Straatnaam_nen)
         then put "," @;
         else do;
                   attrLengte_3644383055734111220=length(Straatnaam_nen);
                   aantalLF_3644383055734111220 = countc(Straatnaam_nen,'0A'x);
                   maxPassend_3644383055734111220=24-1-aantalLF_3644383055734111220;
                   if attrLengte_3644383055734111220 > max(maxPassend_3644383055734111220,1000)
                     then passend_3644383055734111220 = substr(Straatnaam_nen,1,maxPassend_3644383055734111220);
                     else passend_3644383055734111220 = Straatnaam_nen;
                   passend_3644383055734111220 = tranwrd(passend_3644383055734111220,'9D'x,'D0'x);
                   put passend_3644383055734111220 ~ @;
              end;
       if missing(Straatnaam_off)
         then put "," @;
         else do;
                   attrLengte_3964708792430647144=length(Straatnaam_off);
                   aantalLF_3964708792430647144 = countc(Straatnaam_off,'0A'x);
                   maxPassend_3964708792430647144=43-1-aantalLF_3964708792430647144;
                   if attrLengte_3964708792430647144 > max(maxPassend_3964708792430647144,1000)
                     then passend_3964708792430647144 = substr(Straatnaam_off,1,maxPassend_3964708792430647144);
                     else passend_3964708792430647144 = Straatnaam_off;
                   passend_3964708792430647144 = tranwrd(passend_3964708792430647144,'9D'x,'D0'x);
                   put passend_3964708792430647144 ~ @;
              end;
       if missing(Extract_woonplaats)
         then put "," @;
         else do;
                   attrLengte_3722357102910039792=length(Extract_woonplaats);
                   aantalLF_3722357102910039792 = countc(Extract_woonplaats,'0A'x);
                   maxPassend_3722357102910039792=4-1-aantalLF_3722357102910039792;
                   if attrLengte_3722357102910039792 > max(maxPassend_3722357102910039792,1000)
                     then passend_3722357102910039792 = substr(Extract_woonplaats,1,maxPassend_3722357102910039792);
                     else passend_3722357102910039792 = Extract_woonplaats;
                   passend_3722357102910039792 = tranwrd(passend_3722357102910039792,'9D'x,'D0'x);
                   put passend_3722357102910039792 ~ @;
              end;
       if missing(Extract_straatnaam)
         then put "," @;
         else do;
                   attrLengte_3775085152733664256=length(Extract_straatnaam);
                   aantalLF_3775085152733664256 = countc(Extract_straatnaam,'0A'x);
                   maxPassend_3775085152733664256=5-1-aantalLF_3775085152733664256;
                   if attrLengte_3775085152733664256 > max(maxPassend_3775085152733664256,1000)
                     then passend_3775085152733664256 = substr(Extract_straatnaam,1,maxPassend_3775085152733664256);
                     else passend_3775085152733664256 = Extract_straatnaam;
                   passend_3775085152733664256 = tranwrd(passend_3775085152733664256,'9D'x,'D0'x);
                   put passend_3775085152733664256 ~ @;
              end;
       if missing(Gemeentecode)
         then put "," @;
         else do;
                   attrLengte_4677372027206810257=length(Gemeentecode);
                   aantalLF_4677372027206810257 = countc(Gemeentecode,'0A'x);
                   maxPassend_4677372027206810257=4-1-aantalLF_4677372027206810257;
                   if attrLengte_4677372027206810257 > max(maxPassend_4677372027206810257,1000)
                     then passend_4677372027206810257 = substr(Gemeentecode,1,maxPassend_4677372027206810257);
                     else passend_4677372027206810257 = Gemeentecode;
                   passend_4677372027206810257 = tranwrd(passend_4677372027206810257,'9D'x,'D0'x);
                   put passend_4677372027206810257 ~ @;
              end;
       if missing(Gemeentenaam)
         then put "," @;
         else do;
                   attrLengte_8271080290582904925=length(Gemeentenaam);
                   aantalLF_8271080290582904925 = countc(Gemeentenaam,'0A'x);
                   maxPassend_8271080290582904925=24-1-aantalLF_8271080290582904925;
                   if attrLengte_8271080290582904925 > max(maxPassend_8271080290582904925,1000)
                     then passend_8271080290582904925 = substr(Gemeentenaam,1,maxPassend_8271080290582904925);
                     else passend_8271080290582904925 = Gemeentenaam;
                   passend_8271080290582904925 = tranwrd(passend_8271080290582904925,'9D'x,'D0'x);
                   put passend_8271080290582904925 ~ @;
              end;
       if missing(Provinciecode)
         then put "," @;
         else do;
                   attrLengte_7107771537890015459=length(Provinciecode);
                   aantalLF_7107771537890015459 = countc(Provinciecode,'0A'x);
                   maxPassend_7107771537890015459=2-1-aantalLF_7107771537890015459;
                   if attrLengte_7107771537890015459 > max(maxPassend_7107771537890015459,1000)
                     then passend_7107771537890015459 = substr(Provinciecode,1,maxPassend_7107771537890015459);
                     else passend_7107771537890015459 = Provinciecode;
                   passend_7107771537890015459 = tranwrd(passend_7107771537890015459,'9D'x,'D0'x);
                   put passend_7107771537890015459 ~ @;
              end;
       if missing(Cebuco_code)
         then put "," @;
         else do;
                   attrLengte_2946163507944036098=length(Cebuco_code);
                   aantalLF_2946163507944036098 = countc(Cebuco_code,'0A'x);
                   maxPassend_2946163507944036098=3-1-aantalLF_2946163507944036098;
                   if attrLengte_2946163507944036098 > max(maxPassend_2946163507944036098,1000)
                     then passend_2946163507944036098 = substr(Cebuco_code,1,maxPassend_2946163507944036098);
                     else passend_2946163507944036098 = Cebuco_code;
                   passend_2946163507944036098 = tranwrd(passend_2946163507944036098,'9D'x,'D0'x);
                   put passend_2946163507944036098 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RBM_ADRES_RELATIE AS
   SELECT t1.Adressoort,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Kkr_gevalideerd,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Rae_id,
          t1.Ras_id,
          t1.Rel_id,
          t1.Vst_volgnr
     FROM DATAQASG.RBM_ADRES_RELATIE_TCMG t1;
QUIT;

data MIGRATIE.BAS_RBM_ADRES_RELATIE;
  set MIGRATIE.BAS_RBM_ADRES_RELATIE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RBM_ADRES_RELATIE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Adressoort" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Kkr_gevalideerd" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Rae_id" 
       ','
          "Ras_id" 
       ','
          "Rel_id" 
       ','
          "Vst_volgnr" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RBM_ADRES_RELATIE   end=EFIEOD; 
       format Adressoort  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Kkr_gevalideerd  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Rae_id best12. ;
       format Ras_id best12. ;
       format Rel_id best12. ;
       format Vst_volgnr best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Adressoort)
         then put "," @;
         else do;
                   attrLengte_3177944828558768780=length(Adressoort);
                   aantalLF_3177944828558768780 = countc(Adressoort,'0A'x);
                   maxPassend_3177944828558768780=3-1-aantalLF_3177944828558768780;
                   if attrLengte_3177944828558768780 > max(maxPassend_3177944828558768780,1000)
                     then passend_3177944828558768780 = substr(Adressoort,1,maxPassend_3177944828558768780);
                     else passend_3177944828558768780 = Adressoort;
                   passend_3177944828558768780 = tranwrd(passend_3177944828558768780,'9D'x,'D0'x);
                   put passend_3177944828558768780 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Kkr_gevalideerd)
         then put "," @;
         else do;
                   attrLengte_4275823587113271514=length(Kkr_gevalideerd);
                   aantalLF_4275823587113271514 = countc(Kkr_gevalideerd,'0A'x);
                   maxPassend_4275823587113271514=1-1-aantalLF_4275823587113271514;
                   if attrLengte_4275823587113271514 > max(maxPassend_4275823587113271514,1000)
                     then passend_4275823587113271514 = substr(Kkr_gevalideerd,1,maxPassend_4275823587113271514);
                     else passend_4275823587113271514 = Kkr_gevalideerd;
                   passend_4275823587113271514 = tranwrd(passend_4275823587113271514,'9D'x,'D0'x);
                   put passend_4275823587113271514 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Rae_id)
         then put "," @;
         else put Rae_id @;
       if missing(Ras_id)
         then put "," @;
         else put Ras_id @;
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(Vst_volgnr)
         then put "," @;
         else put Vst_volgnr @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RBM_ADRES AS
   SELECT t1.Barcode,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.creatie_user,
          t1.Huisnr,
          t1.Huisnr_toe,
          t1.Ias_id,
          t1.Landnaam,
          t1.Locatie_oms,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.mutatie_user,
          t1.Plaatsnaam,
          t1.Postcd,
          t1.Prov_cd,
          t1.Ras_id,
          t1.Straat,
          t1.Validatie
     FROM DATAQASG.RBM_ADRES_TCMG t1;
QUIT;

data MIGRATIE.BAS_RBM_ADRES;
  set MIGRATIE.BAS_RBM_ADRES;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RBM_ADRES.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Barcode" 
       ','
          "Creatie_dat" 
       ','
          "creatie_user" 
       ','
          "Huisnr" 
       ','
          "Huisnr_toe" 
       ','
          "Ias_id" 
       ','
          "Landnaam" 
       ','
          "Locatie_oms" 
       ','
          "Mutatie_dat" 
       ','
          "mutatie_user" 
       ','
          "Plaatsnaam" 
       ','
          "Postcd" 
       ','
          "Prov_cd" 
       ','
          "Ras_id" 
       ','
          "Straat" 
       ','
          "Validatie" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RBM_ADRES   end=EFIEOD; 
       format Barcode  ;
       format Creatie_dat B8601DT19. ;
       format creatie_user  ;
       format Huisnr best12. ;
       format Huisnr_toe  ;
       format Ias_id best12. ;
       format Landnaam  ;
       format Locatie_oms  ;
       format Mutatie_dat B8601DT19. ;
       format mutatie_user  ;
       format Plaatsnaam  ;
       format Postcd  ;
       format Prov_cd  ;
       format Ras_id best12. ;
       format Straat  ;
       format Validatie  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Barcode)
         then put "," @;
         else do;
                   attrLengte_8665016732119473417=length(Barcode);
                   aantalLF_8665016732119473417 = countc(Barcode,'0A'x);
                   maxPassend_8665016732119473417=25-1-aantalLF_8665016732119473417;
                   if attrLengte_8665016732119473417 > max(maxPassend_8665016732119473417,1000)
                     then passend_8665016732119473417 = substr(Barcode,1,maxPassend_8665016732119473417);
                     else passend_8665016732119473417 = Barcode;
                   passend_8665016732119473417 = tranwrd(passend_8665016732119473417,'9D'x,'D0'x);
                   put passend_8665016732119473417 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(creatie_user)
         then put "," @;
         else do;
                   attrLengte_5059886387476131123=length(creatie_user);
                   aantalLF_5059886387476131123 = countc(creatie_user,'0A'x);
                   maxPassend_5059886387476131123=30-1-aantalLF_5059886387476131123;
                   if attrLengte_5059886387476131123 > max(maxPassend_5059886387476131123,1000)
                     then passend_5059886387476131123 = substr(creatie_user,1,maxPassend_5059886387476131123);
                     else passend_5059886387476131123 = creatie_user;
                   passend_5059886387476131123 = tranwrd(passend_5059886387476131123,'9D'x,'D0'x);
                   put passend_5059886387476131123 ~ @;
              end;
       if missing(Huisnr)
         then put "," @;
         else put Huisnr @;
       if missing(Huisnr_toe)
         then put "," @;
         else do;
                   attrLengte_4667993457372067362=length(Huisnr_toe);
                   aantalLF_4667993457372067362 = countc(Huisnr_toe,'0A'x);
                   maxPassend_4667993457372067362=12-1-aantalLF_4667993457372067362;
                   if attrLengte_4667993457372067362 > max(maxPassend_4667993457372067362,1000)
                     then passend_4667993457372067362 = substr(Huisnr_toe,1,maxPassend_4667993457372067362);
                     else passend_4667993457372067362 = Huisnr_toe;
                   passend_4667993457372067362 = tranwrd(passend_4667993457372067362,'9D'x,'D0'x);
                   put passend_4667993457372067362 ~ @;
              end;
       if missing(Ias_id)
         then put "," @;
         else put Ias_id @;
       if missing(Landnaam)
         then put "," @;
         else do;
                   attrLengte_83305570222129686=length(Landnaam);
                   aantalLF_83305570222129686 = countc(Landnaam,'0A'x);
                   maxPassend_83305570222129686=60-1-aantalLF_83305570222129686;
                   if attrLengte_83305570222129686 > max(maxPassend_83305570222129686,1000)
                     then passend_83305570222129686 = substr(Landnaam,1,maxPassend_83305570222129686);
                     else passend_83305570222129686 = Landnaam;
                   passend_83305570222129686 = tranwrd(passend_83305570222129686,'9D'x,'D0'x);
                   put passend_83305570222129686 ~ @;
              end;
       if missing(Locatie_oms)
         then put "," @;
         else do;
                   attrLengte_1299746612561995600=length(Locatie_oms);
                   aantalLF_1299746612561995600 = countc(Locatie_oms,'0A'x);
                   maxPassend_1299746612561995600=100-1-aantalLF_1299746612561995600;
                   if attrLengte_1299746612561995600 > max(maxPassend_1299746612561995600,1000)
                     then passend_1299746612561995600 = substr(Locatie_oms,1,maxPassend_1299746612561995600);
                     else passend_1299746612561995600 = Locatie_oms;
                   passend_1299746612561995600 = tranwrd(passend_1299746612561995600,'9D'x,'D0'x);
                   put passend_1299746612561995600 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(mutatie_user)
         then put "," @;
         else do;
                   attrLengte_5480117132585686229=length(mutatie_user);
                   aantalLF_5480117132585686229 = countc(mutatie_user,'0A'x);
                   maxPassend_5480117132585686229=30-1-aantalLF_5480117132585686229;
                   if attrLengte_5480117132585686229 > max(maxPassend_5480117132585686229,1000)
                     then passend_5480117132585686229 = substr(mutatie_user,1,maxPassend_5480117132585686229);
                     else passend_5480117132585686229 = mutatie_user;
                   passend_5480117132585686229 = tranwrd(passend_5480117132585686229,'9D'x,'D0'x);
                   put passend_5480117132585686229 ~ @;
              end;
       if missing(Plaatsnaam)
         then put "," @;
         else do;
                   attrLengte_4214898722065367578=length(Plaatsnaam);
                   aantalLF_4214898722065367578 = countc(Plaatsnaam,'0A'x);
                   maxPassend_4214898722065367578=80-1-aantalLF_4214898722065367578;
                   if attrLengte_4214898722065367578 > max(maxPassend_4214898722065367578,1000)
                     then passend_4214898722065367578 = substr(Plaatsnaam,1,maxPassend_4214898722065367578);
                     else passend_4214898722065367578 = Plaatsnaam;
                   passend_4214898722065367578 = tranwrd(passend_4214898722065367578,'9D'x,'D0'x);
                   put passend_4214898722065367578 ~ @;
              end;
       if missing(Postcd)
         then put "," @;
         else do;
                   attrLengte_88556948018763879=length(Postcd);
                   aantalLF_88556948018763879 = countc(Postcd,'0A'x);
                   maxPassend_88556948018763879=12-1-aantalLF_88556948018763879;
                   if attrLengte_88556948018763879 > max(maxPassend_88556948018763879,1000)
                     then passend_88556948018763879 = substr(Postcd,1,maxPassend_88556948018763879);
                     else passend_88556948018763879 = Postcd;
                   passend_88556948018763879 = tranwrd(passend_88556948018763879,'9D'x,'D0'x);
                   put passend_88556948018763879 ~ @;
              end;
       if missing(Prov_cd)
         then put "," @;
         else do;
                   attrLengte_5951139656360336036=length(Prov_cd);
                   aantalLF_5951139656360336036 = countc(Prov_cd,'0A'x);
                   maxPassend_5951139656360336036=2-1-aantalLF_5951139656360336036;
                   if attrLengte_5951139656360336036 > max(maxPassend_5951139656360336036,1000)
                     then passend_5951139656360336036 = substr(Prov_cd,1,maxPassend_5951139656360336036);
                     else passend_5951139656360336036 = Prov_cd;
                   passend_5951139656360336036 = tranwrd(passend_5951139656360336036,'9D'x,'D0'x);
                   put passend_5951139656360336036 ~ @;
              end;
       if missing(Ras_id)
         then put "," @;
         else put Ras_id @;
       if missing(Straat)
         then put "," @;
         else do;
                   attrLengte_367421360090322077=length(Straat);
                   aantalLF_367421360090322077 = countc(Straat,'0A'x);
                   maxPassend_367421360090322077=60-1-aantalLF_367421360090322077;
                   if attrLengte_367421360090322077 > max(maxPassend_367421360090322077,1000)
                     then passend_367421360090322077 = substr(Straat,1,maxPassend_367421360090322077);
                     else passend_367421360090322077 = Straat;
                   passend_367421360090322077 = tranwrd(passend_367421360090322077,'9D'x,'D0'x);
                   put passend_367421360090322077 ~ @;
              end;
       if missing(Validatie)
         then put "," @;
         else do;
                   attrLengte_1422979793511950032=length(Validatie);
                   aantalLF_1422979793511950032 = countc(Validatie,'0A'x);
                   maxPassend_1422979793511950032=1-1-aantalLF_1422979793511950032;
                   if attrLengte_1422979793511950032 > max(maxPassend_1422979793511950032,1000)
                     then passend_1422979793511950032 = substr(Validatie,1,maxPassend_1422979793511950032);
                     else passend_1422979793511950032 = Validatie;
                   passend_1422979793511950032 = tranwrd(passend_1422979793511950032,'9D'x,'D0'x);
                   put passend_1422979793511950032 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RBM_COM_ADRES_CP AS
   SELECT t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.creatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Org_id,
          t1.Per_id,
          t1.Rav_id,
          t1.Rca_id
     FROM DATAQASG.RBM_COM_ADRES_CP_TCMG t1;
QUIT;

data MIGRATIE.BAS_RBM_COM_ADRES_CP;
  set MIGRATIE.BAS_RBM_COM_ADRES_CP;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RBM_COM_ADRES_CP.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Creatie_dat" 
       ','
          "creatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Org_id" 
       ','
          "Per_id" 
       ','
          "Rav_id" 
       ','
          "Rca_id" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RBM_COM_ADRES_CP   end=EFIEOD; 
       format Creatie_dat B8601DT19. ;
       format creatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Org_id best12. ;
       format Per_id best12. ;
       format Rav_id best12. ;
       format Rca_id best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(creatie_user)
         then put "," @;
         else do;
                   attrLengte_5059886387476131123=length(creatie_user);
                   aantalLF_5059886387476131123 = countc(creatie_user,'0A'x);
                   maxPassend_5059886387476131123=30-1-aantalLF_5059886387476131123;
                   if attrLengte_5059886387476131123 > max(maxPassend_5059886387476131123,1000)
                     then passend_5059886387476131123 = substr(creatie_user,1,maxPassend_5059886387476131123);
                     else passend_5059886387476131123 = creatie_user;
                   passend_5059886387476131123 = tranwrd(passend_5059886387476131123,'9D'x,'D0'x);
                   put passend_5059886387476131123 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Org_id)
         then put "," @;
         else put Org_id @;
       if missing(Per_id)
         then put "," @;
         else put Per_id @;
       if missing(Rav_id)
         then put "," @;
         else put Rav_id @;
       if missing(Rca_id)
         then put "," @;
         else put Rca_id @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RBM_COM_ADRES_RELATIE AS
   SELECT t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Rae_id,
          t1.Rca_id,
          t1.Rel_id,
          t1.Vst_volgnr
     FROM DATAQASG.RBM_COM_ADRES_RELATIE_TCMG t1;
QUIT;

data MIGRATIE.BAS_RBM_COM_ADRES_RELATIE;
  set MIGRATIE.BAS_RBM_COM_ADRES_RELATIE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RBM_COM_ADRES_RELATIE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Rae_id" 
       ','
          "Rca_id" 
       ','
          "Rel_id" 
       ','
          "Vst_volgnr" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RBM_COM_ADRES_RELATIE   end=EFIEOD; 
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Rae_id best12. ;
       format Rca_id best12. ;
       format Rel_id best12. ;
       format Vst_volgnr best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Rae_id)
         then put "," @;
         else put Rae_id @;
       if missing(Rca_id)
         then put "," @;
         else put Rca_id @;
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(Vst_volgnr)
         then put "," @;
         else put Vst_volgnr @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RBM_COM_ADRES AS
   SELECT t1.Com_Cd,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Rca_id,
          t1.Telnr_email,
          t1.Referentie
     FROM DATAQASG.RBM_COM_ADRES_TCMG t1;
QUIT;

data MIGRATIE.BAS_RBM_COM_ADRES;
  set MIGRATIE.BAS_RBM_COM_ADRES;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RBM_COM_ADRES.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Com_Cd" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Rca_id" 
       ','
          "Telnr_email" 
       ','
          "Referentie" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RBM_COM_ADRES   end=EFIEOD; 
       format Com_Cd  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Rca_id best12. ;
       format Telnr_email  ;
       format Referentie  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Com_Cd)
         then put "," @;
         else do;
                   attrLengte_386725703920968405=length(Com_Cd);
                   aantalLF_386725703920968405 = countc(Com_Cd,'0A'x);
                   maxPassend_386725703920968405=6-1-aantalLF_386725703920968405;
                   if attrLengte_386725703920968405 > max(maxPassend_386725703920968405,1000)
                     then passend_386725703920968405 = substr(Com_Cd,1,maxPassend_386725703920968405);
                     else passend_386725703920968405 = Com_Cd;
                   passend_386725703920968405 = tranwrd(passend_386725703920968405,'9D'x,'D0'x);
                   put passend_386725703920968405 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Rca_id)
         then put "," @;
         else put Rca_id @;
       if missing(Telnr_email)
         then put "," @;
         else do;
                   attrLengte_2003120024500827225=length(Telnr_email);
                   aantalLF_2003120024500827225 = countc(Telnr_email,'0A'x);
                   maxPassend_2003120024500827225=60-1-aantalLF_2003120024500827225;
                   if attrLengte_2003120024500827225 > max(maxPassend_2003120024500827225,1000)
                     then passend_2003120024500827225 = substr(Telnr_email,1,maxPassend_2003120024500827225);
                     else passend_2003120024500827225 = Telnr_email;
                   passend_2003120024500827225 = tranwrd(passend_2003120024500827225,'9D'x,'D0'x);
                   put passend_2003120024500827225 ~ @;
              end;
       if missing(Referentie)
         then put "," @;
         else do;
                   attrLengte_6085349322089225769=length(Referentie);
                   aantalLF_6085349322089225769 = countc(Referentie,'0A'x);
                   maxPassend_6085349322089225769=10-1-aantalLF_6085349322089225769;
                   if attrLengte_6085349322089225769 > max(maxPassend_6085349322089225769,1000)
                     then passend_6085349322089225769 = substr(Referentie,1,maxPassend_6085349322089225769);
                     else passend_6085349322089225769 = Referentie;
                   passend_6085349322089225769 = tranwrd(passend_6085349322089225769,'9D'x,'D0'x);
                   put passend_6085349322089225769 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RBM_CONTACTPERSOON AS
   SELECT t1.Afdeling,
          t1.Certhoud_id,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Functie,
          t1.Kkr_relatie_id,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Notitie,
          t1.Org_id,
          t1.Per_id,
          t1.Ref_kkr_relatie_id,
          t1.Status_contactpersoon,
          t1.Validatie
     FROM DATAQASG.RBM_CONTACTPERSOON_TCMG t1;
QUIT;

data MIGRATIE.BAS_RBM_CONTACTPERSOON;
  set MIGRATIE.BAS_RBM_CONTACTPERSOON;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RBM_CONTACTPERSOON.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Afdeling" 
       ','
          "Certhoud_id" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Functie" 
       ','
          "Kkr_relatie_id" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Notitie" 
       ','
          "Org_id" 
       ','
          "Per_id" 
       ','
          "Ref_kkr_relatie_id" 
       ','
          "Status_contactpersoon" 
       ','
          "Validatie" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RBM_CONTACTPERSOON   end=EFIEOD; 
       format Afdeling  ;
       format Certhoud_id best12. ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Functie  ;
       format Kkr_relatie_id  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Notitie  ;
       format Org_id best12. ;
       format Per_id best12. ;
       format Ref_kkr_relatie_id  ;
       format Status_contactpersoon  ;
       format Validatie  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Afdeling)
         then put "," @;
         else do;
                   attrLengte_3124176695719313596=length(Afdeling);
                   aantalLF_3124176695719313596 = countc(Afdeling,'0A'x);
                   maxPassend_3124176695719313596=60-1-aantalLF_3124176695719313596;
                   if attrLengte_3124176695719313596 > max(maxPassend_3124176695719313596,1000)
                     then passend_3124176695719313596 = substr(Afdeling,1,maxPassend_3124176695719313596);
                     else passend_3124176695719313596 = Afdeling;
                   passend_3124176695719313596 = tranwrd(passend_3124176695719313596,'9D'x,'D0'x);
                   put passend_3124176695719313596 ~ @;
              end;
       if missing(Certhoud_id)
         then put "," @;
         else put Certhoud_id @;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Functie)
         then put "," @;
         else do;
                   attrLengte_6473647470119252579=length(Functie);
                   aantalLF_6473647470119252579 = countc(Functie,'0A'x);
                   maxPassend_6473647470119252579=30-1-aantalLF_6473647470119252579;
                   if attrLengte_6473647470119252579 > max(maxPassend_6473647470119252579,1000)
                     then passend_6473647470119252579 = substr(Functie,1,maxPassend_6473647470119252579);
                     else passend_6473647470119252579 = Functie;
                   passend_6473647470119252579 = tranwrd(passend_6473647470119252579,'9D'x,'D0'x);
                   put passend_6473647470119252579 ~ @;
              end;
       if missing(Kkr_relatie_id)
         then put "," @;
         else do;
                   attrLengte_5909357663416120533=length(Kkr_relatie_id);
                   aantalLF_5909357663416120533 = countc(Kkr_relatie_id,'0A'x);
                   maxPassend_5909357663416120533=36-1-aantalLF_5909357663416120533;
                   if attrLengte_5909357663416120533 > max(maxPassend_5909357663416120533,1000)
                     then passend_5909357663416120533 = substr(Kkr_relatie_id,1,maxPassend_5909357663416120533);
                     else passend_5909357663416120533 = Kkr_relatie_id;
                   passend_5909357663416120533 = tranwrd(passend_5909357663416120533,'9D'x,'D0'x);
                   put passend_5909357663416120533 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Notitie)
         then put "," @;
         else do;
                   attrLengte_1560041029703835131=length(Notitie);
                   aantalLF_1560041029703835131 = countc(Notitie,'0A'x);
                   maxPassend_1560041029703835131=256-1-aantalLF_1560041029703835131;
                   if attrLengte_1560041029703835131 > max(maxPassend_1560041029703835131,1000)
                     then passend_1560041029703835131 = substr(Notitie,1,maxPassend_1560041029703835131);
                     else passend_1560041029703835131 = Notitie;
                   passend_1560041029703835131 = tranwrd(passend_1560041029703835131,'9D'x,'D0'x);
                   put passend_1560041029703835131 ~ @;
              end;
       if missing(Org_id)
         then put "," @;
         else put Org_id @;
       if missing(Per_id)
         then put "," @;
         else put Per_id @;
       if missing(Ref_kkr_relatie_id)
         then put "," @;
         else do;
                   attrLengte_4695035597672197297=length(Ref_kkr_relatie_id);
                   aantalLF_4695035597672197297 = countc(Ref_kkr_relatie_id,'0A'x);
                   maxPassend_4695035597672197297=36-1-aantalLF_4695035597672197297;
                   if attrLengte_4695035597672197297 > max(maxPassend_4695035597672197297,1000)
                     then passend_4695035597672197297 = substr(Ref_kkr_relatie_id,1,maxPassend_4695035597672197297);
                     else passend_4695035597672197297 = Ref_kkr_relatie_id;
                   passend_4695035597672197297 = tranwrd(passend_4695035597672197297,'9D'x,'D0'x);
                   put passend_4695035597672197297 ~ @;
              end;
       if missing(Status_contactpersoon)
         then put "," @;
         else do;
                   attrLengte_8411830533441906202=length(Status_contactpersoon);
                   aantalLF_8411830533441906202 = countc(Status_contactpersoon,'0A'x);
                   maxPassend_8411830533441906202=1-1-aantalLF_8411830533441906202;
                   if attrLengte_8411830533441906202 > max(maxPassend_8411830533441906202,1000)
                     then passend_8411830533441906202 = substr(Status_contactpersoon,1,maxPassend_8411830533441906202);
                     else passend_8411830533441906202 = Status_contactpersoon;
                   passend_8411830533441906202 = tranwrd(passend_8411830533441906202,'9D'x,'D0'x);
                   put passend_8411830533441906202 ~ @;
              end;
       if missing(Validatie)
         then put "," @;
         else do;
                   attrLengte_1422979793511950032=length(Validatie);
                   aantalLF_1422979793511950032 = countc(Validatie,'0A'x);
                   maxPassend_1422979793511950032=1-1-aantalLF_1422979793511950032;
                   if attrLengte_1422979793511950032 > max(maxPassend_1422979793511950032,1000)
                     then passend_1422979793511950032 = substr(Validatie,1,maxPassend_1422979793511950032);
                     else passend_1422979793511950032 = Validatie;
                   passend_1422979793511950032 = tranwrd(passend_1422979793511950032,'9D'x,'D0'x);
                   put passend_1422979793511950032 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RBM_CP_VESTIGING AS
   SELECT t1.Org_id,
          t1.Per_id,
          t1.Vst_volgnr
     FROM DATAQASG.RBM_CP_VESTIGING_TCMG t1;
QUIT;

data MIGRATIE.BAS_RBM_CP_VESTIGING;
  set MIGRATIE.BAS_RBM_CP_VESTIGING;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RBM_CP_VESTIGING.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Org_id" 
       ','
          "Per_id" 
       ','
          "Vst_volgnr" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RBM_CP_VESTIGING   end=EFIEOD; 
       format Org_id best12. ;
       format Per_id best12. ;
       format Vst_volgnr best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Org_id)
         then put "," @;
         else put Org_id @;
       if missing(Per_id)
         then put "," @;
         else put Per_id @;
       if missing(Vst_volgnr)
         then put "," @;
         else put Vst_volgnr @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RBM_ORG_BSI AS
   SELECT t1.Rel_id,
          t1.Bsi_cd,
          t1.Volg_nr,
          t1.Begindatum FORMAT=B8601DT19. AS Begindatum,
          t1.Einddatum FORMAT=B8601DT19. AS Einddatum,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat
     FROM DATAQASG.RBM_ORG_BSI_TCMG t1;
QUIT;

data MIGRATIE.BAS_RBM_ORG_BSI;
  set MIGRATIE.BAS_RBM_ORG_BSI;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RBM_ORG_BSI.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Rel_id" 
       ','
          "Bsi_cd" 
       ','
          "Volg_nr" 
       ','
          "Begindatum" 
       ','
          "Einddatum" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RBM_ORG_BSI   end=EFIEOD; 
       format Rel_id best12. ;
       format Bsi_cd  ;
       format Volg_nr best12. ;
       format Begindatum B8601DT19. ;
       format Einddatum B8601DT19. ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(Bsi_cd)
         then put "," @;
         else do;
                   attrLengte_3451443017000934866=length(Bsi_cd);
                   aantalLF_3451443017000934866 = countc(Bsi_cd,'0A'x);
                   maxPassend_3451443017000934866=7-1-aantalLF_3451443017000934866;
                   if attrLengte_3451443017000934866 > max(maxPassend_3451443017000934866,1000)
                     then passend_3451443017000934866 = substr(Bsi_cd,1,maxPassend_3451443017000934866);
                     else passend_3451443017000934866 = Bsi_cd;
                   passend_3451443017000934866 = tranwrd(passend_3451443017000934866,'9D'x,'D0'x);
                   put passend_3451443017000934866 ~ @;
              end;
       if missing(Volg_nr)
         then put "," @;
         else put Volg_nr @;
       if missing(Begindatum)
         then put "," @;
         else put Begindatum @;
       if missing(Einddatum)
         then put "," @;
         else put Einddatum @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RBM_ORG_FAILLIET AS
   SELECT t1.Kvk_nr,
          t1.Graydon_bedrijfsnr,
          t1.Kvk_dossiernr,
          t1.Kvk_kamernr,
          t1.Kvk_subdossiernr,
          t1.Naam,
          t1.Handelsnaam,
          t1.Straatnaam_postbus,
          t1.Huisnr_postbusnr,
          t1.Huisnr_toevoeging,
          t1.Postcode,
          t1.Woonplaats,
          t1.Land,
          t1.Actuele_faillisement_cd,
          t1.Actuele_status,
          t1.Actuele_opheffings_cd
     FROM DATAQASG.RBM_ORG_FAILLIET_TCMG t1;
QUIT;

data MIGRATIE.BAS_RBM_ORG_FAILLIET;
  set MIGRATIE.BAS_RBM_ORG_FAILLIET;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RBM_ORG_FAILLIET.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Kvk_nr" 
       ','
          "Graydon_bedrijfsnr" 
       ','
          "Kvk_dossiernr" 
       ','
          "Kvk_kamernr" 
       ','
          "Kvk_subdossiernr" 
       ','
          "Naam" 
       ','
          "Handelsnaam" 
       ','
          "Straatnaam_postbus" 
       ','
          "Huisnr_postbusnr" 
       ','
          "Huisnr_toevoeging" 
       ','
          "Postcode" 
       ','
          "Woonplaats" 
       ','
          "Land" 
       ','
          "Actuele_faillisement_cd" 
       ','
          "Actuele_status" 
       ','
          "Actuele_opheffings_cd" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RBM_ORG_FAILLIET   end=EFIEOD; 
       format Kvk_nr  ;
       format Graydon_bedrijfsnr best12. ;
       format Kvk_dossiernr best12. ;
       format Kvk_kamernr best12. ;
       format Kvk_subdossiernr best12. ;
       format Naam  ;
       format Handelsnaam  ;
       format Straatnaam_postbus  ;
       format Huisnr_postbusnr best12. ;
       format Huisnr_toevoeging  ;
       format Postcode  ;
       format Woonplaats  ;
       format Land  ;
       format Actuele_faillisement_cd  ;
       format Actuele_status  ;
       format Actuele_opheffings_cd  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Kvk_nr)
         then put "," @;
         else do;
                   attrLengte_2829235122869398783=length(Kvk_nr);
                   aantalLF_2829235122869398783 = countc(Kvk_nr,'0A'x);
                   maxPassend_2829235122869398783=12-1-aantalLF_2829235122869398783;
                   if attrLengte_2829235122869398783 > max(maxPassend_2829235122869398783,1000)
                     then passend_2829235122869398783 = substr(Kvk_nr,1,maxPassend_2829235122869398783);
                     else passend_2829235122869398783 = Kvk_nr;
                   passend_2829235122869398783 = tranwrd(passend_2829235122869398783,'9D'x,'D0'x);
                   put passend_2829235122869398783 ~ @;
              end;
       if missing(Graydon_bedrijfsnr)
         then put "," @;
         else put Graydon_bedrijfsnr @;
       if missing(Kvk_dossiernr)
         then put "," @;
         else put Kvk_dossiernr @;
       if missing(Kvk_kamernr)
         then put "," @;
         else put Kvk_kamernr @;
       if missing(Kvk_subdossiernr)
         then put "," @;
         else put Kvk_subdossiernr @;
       if missing(Naam)
         then put "," @;
         else do;
                   attrLengte_3121428435771779831=length(Naam);
                   aantalLF_3121428435771779831 = countc(Naam,'0A'x);
                   maxPassend_3121428435771779831=132-1-aantalLF_3121428435771779831;
                   if attrLengte_3121428435771779831 > max(maxPassend_3121428435771779831,1000)
                     then passend_3121428435771779831 = substr(Naam,1,maxPassend_3121428435771779831);
                     else passend_3121428435771779831 = Naam;
                   passend_3121428435771779831 = tranwrd(passend_3121428435771779831,'9D'x,'D0'x);
                   put passend_3121428435771779831 ~ @;
              end;
       if missing(Handelsnaam)
         then put "," @;
         else do;
                   attrLengte_2653416409674665897=length(Handelsnaam);
                   aantalLF_2653416409674665897 = countc(Handelsnaam,'0A'x);
                   maxPassend_2653416409674665897=132-1-aantalLF_2653416409674665897;
                   if attrLengte_2653416409674665897 > max(maxPassend_2653416409674665897,1000)
                     then passend_2653416409674665897 = substr(Handelsnaam,1,maxPassend_2653416409674665897);
                     else passend_2653416409674665897 = Handelsnaam;
                   passend_2653416409674665897 = tranwrd(passend_2653416409674665897,'9D'x,'D0'x);
                   put passend_2653416409674665897 ~ @;
              end;
       if missing(Straatnaam_postbus)
         then put "," @;
         else do;
                   attrLengte_6041848927483652671=length(Straatnaam_postbus);
                   aantalLF_6041848927483652671 = countc(Straatnaam_postbus,'0A'x);
                   maxPassend_6041848927483652671=50-1-aantalLF_6041848927483652671;
                   if attrLengte_6041848927483652671 > max(maxPassend_6041848927483652671,1000)
                     then passend_6041848927483652671 = substr(Straatnaam_postbus,1,maxPassend_6041848927483652671);
                     else passend_6041848927483652671 = Straatnaam_postbus;
                   passend_6041848927483652671 = tranwrd(passend_6041848927483652671,'9D'x,'D0'x);
                   put passend_6041848927483652671 ~ @;
              end;
       if missing(Huisnr_postbusnr)
         then put "," @;
         else put Huisnr_postbusnr @;
       if missing(Huisnr_toevoeging)
         then put "," @;
         else do;
                   attrLengte_5583129363718394252=length(Huisnr_toevoeging);
                   aantalLF_5583129363718394252 = countc(Huisnr_toevoeging,'0A'x);
                   maxPassend_5583129363718394252=12-1-aantalLF_5583129363718394252;
                   if attrLengte_5583129363718394252 > max(maxPassend_5583129363718394252,1000)
                     then passend_5583129363718394252 = substr(Huisnr_toevoeging,1,maxPassend_5583129363718394252);
                     else passend_5583129363718394252 = Huisnr_toevoeging;
                   passend_5583129363718394252 = tranwrd(passend_5583129363718394252,'9D'x,'D0'x);
                   put passend_5583129363718394252 ~ @;
              end;
       if missing(Postcode)
         then put "," @;
         else do;
                   attrLengte_747405639420864755=length(Postcode);
                   aantalLF_747405639420864755 = countc(Postcode,'0A'x);
                   maxPassend_747405639420864755=12-1-aantalLF_747405639420864755;
                   if attrLengte_747405639420864755 > max(maxPassend_747405639420864755,1000)
                     then passend_747405639420864755 = substr(Postcode,1,maxPassend_747405639420864755);
                     else passend_747405639420864755 = Postcode;
                   passend_747405639420864755 = tranwrd(passend_747405639420864755,'9D'x,'D0'x);
                   put passend_747405639420864755 ~ @;
              end;
       if missing(Woonplaats)
         then put "," @;
         else do;
                   attrLengte_3253374325083369186=length(Woonplaats);
                   aantalLF_3253374325083369186 = countc(Woonplaats,'0A'x);
                   maxPassend_3253374325083369186=30-1-aantalLF_3253374325083369186;
                   if attrLengte_3253374325083369186 > max(maxPassend_3253374325083369186,1000)
                     then passend_3253374325083369186 = substr(Woonplaats,1,maxPassend_3253374325083369186);
                     else passend_3253374325083369186 = Woonplaats;
                   passend_3253374325083369186 = tranwrd(passend_3253374325083369186,'9D'x,'D0'x);
                   put passend_3253374325083369186 ~ @;
              end;
       if missing(Land)
         then put "," @;
         else do;
                   attrLengte_7146313527747546915=length(Land);
                   aantalLF_7146313527747546915 = countc(Land,'0A'x);
                   maxPassend_7146313527747546915=30-1-aantalLF_7146313527747546915;
                   if attrLengte_7146313527747546915 > max(maxPassend_7146313527747546915,1000)
                     then passend_7146313527747546915 = substr(Land,1,maxPassend_7146313527747546915);
                     else passend_7146313527747546915 = Land;
                   passend_7146313527747546915 = tranwrd(passend_7146313527747546915,'9D'x,'D0'x);
                   put passend_7146313527747546915 ~ @;
              end;
       if missing(Actuele_faillisement_cd)
         then put "," @;
         else do;
                   attrLengte_7805567768348124374=length(Actuele_faillisement_cd);
                   aantalLF_7805567768348124374 = countc(Actuele_faillisement_cd,'0A'x);
                   maxPassend_7805567768348124374=4-1-aantalLF_7805567768348124374;
                   if attrLengte_7805567768348124374 > max(maxPassend_7805567768348124374,1000)
                     then passend_7805567768348124374 = substr(Actuele_faillisement_cd,1,maxPassend_7805567768348124374);
                     else passend_7805567768348124374 = Actuele_faillisement_cd;
                   passend_7805567768348124374 = tranwrd(passend_7805567768348124374,'9D'x,'D0'x);
                   put passend_7805567768348124374 ~ @;
              end;
       if missing(Actuele_status)
         then put "," @;
         else do;
                   attrLengte_2419729412943516166=length(Actuele_status);
                   aantalLF_2419729412943516166 = countc(Actuele_status,'0A'x);
                   maxPassend_2419729412943516166=10-1-aantalLF_2419729412943516166;
                   if attrLengte_2419729412943516166 > max(maxPassend_2419729412943516166,1000)
                     then passend_2419729412943516166 = substr(Actuele_status,1,maxPassend_2419729412943516166);
                     else passend_2419729412943516166 = Actuele_status;
                   passend_2419729412943516166 = tranwrd(passend_2419729412943516166,'9D'x,'D0'x);
                   put passend_2419729412943516166 ~ @;
              end;
       if missing(Actuele_opheffings_cd)
         then put "," @;
         else do;
                   attrLengte_4421556128264339154=length(Actuele_opheffings_cd);
                   aantalLF_4421556128264339154 = countc(Actuele_opheffings_cd,'0A'x);
                   maxPassend_4421556128264339154=2-1-aantalLF_4421556128264339154;
                   if attrLengte_4421556128264339154 > max(maxPassend_4421556128264339154,1000)
                     then passend_4421556128264339154 = substr(Actuele_opheffings_cd,1,maxPassend_4421556128264339154);
                     else passend_4421556128264339154 = Actuele_opheffings_cd;
                   passend_4421556128264339154 = tranwrd(passend_4421556128264339154,'9D'x,'D0'x);
                   put passend_4421556128264339154 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RBM_ORG_JAAR AS
   SELECT t1.Rel_id,
          t1.Jaar,
          t1.Aantal_werknemers,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Omzet,
          t1.Loonsom,
          t1.So_loonsom,
          t1.Max_so_vermindering,
          t1.Peildatum FORMAT=B8601DT19. AS Peildatum,
          t1.Aantal_so_werknemers,
          t1.Bron,
          t1.Senterniveau_jn,
          t1.Lb_verm_voorlopig,
          t1.Lb_vermindering_eindafrekening,
          t1.Balanstotaal
     FROM DATAQASG.RBM_ORG_JAAR_TCMG t1;
QUIT;

data MIGRATIE.BAS_RBM_ORG_JAAR;
  set MIGRATIE.BAS_RBM_ORG_JAAR;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RBM_ORG_JAAR.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Rel_id" 
       ','
          "Jaar" 
       ','
          "Aantal_werknemers" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Omzet" 
       ','
          "Loonsom" 
       ','
          "So_loonsom" 
       ','
          "Max_so_vermindering" 
       ','
          "Peildatum" 
       ','
          "Aantal_so_werknemers" 
       ','
          "Bron" 
       ','
          "Senterniveau_jn" 
       ','
          "Lb_verm_voorlopig" 
       ','
          "Lb_vermindering_eindafrekening" 
       ','
          "Balanstotaal" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RBM_ORG_JAAR   end=EFIEOD; 
       format Rel_id best12. ;
       format Jaar best12. ;
       format Aantal_werknemers best12. ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Omzet best12. ;
       format Loonsom best12. ;
       format So_loonsom best12. ;
       format Max_so_vermindering best12. ;
       format Peildatum B8601DT19. ;
       format Aantal_so_werknemers best12. ;
       format Bron  ;
       format Senterniveau_jn  ;
       format Lb_verm_voorlopig best12. ;
       format Lb_vermindering_eindafrekening best12. ;
       format Balanstotaal best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(Jaar)
         then put "," @;
         else put Jaar @;
       if missing(Aantal_werknemers)
         then put "," @;
         else put Aantal_werknemers @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Omzet)
         then put "," @;
         else put Omzet @;
       if missing(Loonsom)
         then put "," @;
         else put Loonsom @;
       if missing(So_loonsom)
         then put "," @;
         else put So_loonsom @;
       if missing(Max_so_vermindering)
         then put "," @;
         else put Max_so_vermindering @;
       if missing(Peildatum)
         then put "," @;
         else put Peildatum @;
       if missing(Aantal_so_werknemers)
         then put "," @;
         else put Aantal_so_werknemers @;
       if missing(Bron)
         then put "," @;
         else do;
                   attrLengte_431232146876537749=length(Bron);
                   aantalLF_431232146876537749 = countc(Bron,'0A'x);
                   maxPassend_431232146876537749=12-1-aantalLF_431232146876537749;
                   if attrLengte_431232146876537749 > max(maxPassend_431232146876537749,1000)
                     then passend_431232146876537749 = substr(Bron,1,maxPassend_431232146876537749);
                     else passend_431232146876537749 = Bron;
                   passend_431232146876537749 = tranwrd(passend_431232146876537749,'9D'x,'D0'x);
                   put passend_431232146876537749 ~ @;
              end;
       if missing(Senterniveau_jn)
         then put "," @;
         else do;
                   attrLengte_7878041596262878077=length(Senterniveau_jn);
                   aantalLF_7878041596262878077 = countc(Senterniveau_jn,'0A'x);
                   maxPassend_7878041596262878077=1-1-aantalLF_7878041596262878077;
                   if attrLengte_7878041596262878077 > max(maxPassend_7878041596262878077,1000)
                     then passend_7878041596262878077 = substr(Senterniveau_jn,1,maxPassend_7878041596262878077);
                     else passend_7878041596262878077 = Senterniveau_jn;
                   passend_7878041596262878077 = tranwrd(passend_7878041596262878077,'9D'x,'D0'x);
                   put passend_7878041596262878077 ~ @;
              end;
       if missing(Lb_verm_voorlopig)
         then put "," @;
         else put Lb_verm_voorlopig @;
       if missing(Lb_vermindering_eindafrekening)
         then put "," @;
         else put Lb_vermindering_eindafrekening @;
       if missing(Balanstotaal)
         then put "," @;
         else put Balanstotaal @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RBM_ORG_NAAM AS
   SELECT t1.Org_id,
          t1.Org_naam,
          t1.Org_naam_type,
          t1.Sushi_foutmelding,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.'Mutatie_user,'n AS Mutatie_user,
          t1.Kkr_gevalideerd
     FROM DATAQASG.RBM_ORG_NAAM_TCMG t1;
QUIT;

data MIGRATIE.BAS_RBM_ORG_NAAM;
  set MIGRATIE.BAS_RBM_ORG_NAAM;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RBM_ORG_NAAM.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Org_id" 
       ','
          "Org_naam" 
       ','
          "Org_naam_type" 
       ','
          "Sushi_foutmelding" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Kkr_gevalideerd" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RBM_ORG_NAAM   end=EFIEOD; 
       format Org_id best12. ;
       format Org_naam  ;
       format Org_naam_type  ;
       format Sushi_foutmelding  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Kkr_gevalideerd  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Org_id)
         then put "," @;
         else put Org_id @;
       if missing(Org_naam)
         then put "," @;
         else do;
                   attrLengte_2338667727953163128=length(Org_naam);
                   aantalLF_2338667727953163128 = countc(Org_naam,'0A'x);
                   maxPassend_2338667727953163128=625-1-aantalLF_2338667727953163128;
                   if attrLengte_2338667727953163128 > max(maxPassend_2338667727953163128,1000)
                     then passend_2338667727953163128 = substr(Org_naam,1,maxPassend_2338667727953163128);
                     else passend_2338667727953163128 = Org_naam;
                   passend_2338667727953163128 = tranwrd(passend_2338667727953163128,'9D'x,'D0'x);
                   put passend_2338667727953163128 ~ @;
              end;
       if missing(Org_naam_type)
         then put "," @;
         else do;
                   attrLengte_2453821822167783416=length(Org_naam_type);
                   aantalLF_2453821822167783416 = countc(Org_naam_type,'0A'x);
                   maxPassend_2453821822167783416=1-1-aantalLF_2453821822167783416;
                   if attrLengte_2453821822167783416 > max(maxPassend_2453821822167783416,1000)
                     then passend_2453821822167783416 = substr(Org_naam_type,1,maxPassend_2453821822167783416);
                     else passend_2453821822167783416 = Org_naam_type;
                   passend_2453821822167783416 = tranwrd(passend_2453821822167783416,'9D'x,'D0'x);
                   put passend_2453821822167783416 ~ @;
              end;
       if missing(Sushi_foutmelding)
         then put "," @;
         else do;
                   attrLengte_8715378855826488452=length(Sushi_foutmelding);
                   aantalLF_8715378855826488452 = countc(Sushi_foutmelding,'0A'x);
                   maxPassend_8715378855826488452=200-1-aantalLF_8715378855826488452;
                   if attrLengte_8715378855826488452 > max(maxPassend_8715378855826488452,1000)
                     then passend_8715378855826488452 = substr(Sushi_foutmelding,1,maxPassend_8715378855826488452);
                     else passend_8715378855826488452 = Sushi_foutmelding;
                   passend_8715378855826488452 = tranwrd(passend_8715378855826488452,'9D'x,'D0'x);
                   put passend_8715378855826488452 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Kkr_gevalideerd)
         then put "," @;
         else do;
                   attrLengte_4275823587113271514=length(Kkr_gevalideerd);
                   aantalLF_4275823587113271514 = countc(Kkr_gevalideerd,'0A'x);
                   maxPassend_4275823587113271514=1-1-aantalLF_4275823587113271514;
                   if attrLengte_4275823587113271514 > max(maxPassend_4275823587113271514,1000)
                     then passend_4275823587113271514 = substr(Kkr_gevalideerd,1,maxPassend_4275823587113271514);
                     else passend_4275823587113271514 = Kkr_gevalideerd;
                   passend_4275823587113271514 = tranwrd(passend_4275823587113271514,'9D'x,'D0'x);
                   put passend_4275823587113271514 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RBM_ORG AS
   SELECT t1.Bik_Cd,
          t1.Bron_jr,
          t1.BTW_nummer,
          t1.BTW_plichtig,
          t1.IB_plichtig_sinds FORMAT=B8601DT19. AS IB_plichtig_sinds,
          t1.Jaar_oprichting,
          t1.Kkr_RSIN_afwijkend,
          t1.KVK_nr,
          t1.Naam,
          t1.Notitie,
          t1.Rel_id,
          t1.Rvm_cd,
          t1.Status_org,
          t1.Volg_nr_LB,
          t1.Voortzetting_van_rel_id,
          t1.VPB_IB_nummer,
          t1.IB_VPB_Plichtig
     FROM DATAQASG.RBM_ORG_TCMG t1;
QUIT;

data MIGRATIE.BAS_RBM_ORG;
  set MIGRATIE.BAS_RBM_ORG;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RBM_ORG.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Bik_Cd" 
       ','
          "Bron_jr" 
       ','
          "BTW_nummer" 
       ','
          "BTW_plichtig" 
       ','
          "IB_plichtig_sinds" 
       ','
          "Jaar_oprichting" 
       ','
          "Kkr_RSIN_afwijkend" 
       ','
          "KVK_nr" 
       ','
          "Naam" 
       ','
          "Notitie" 
       ','
          "Rel_id" 
       ','
          "Rvm_cd" 
       ','
          "Status_org" 
       ','
          "Volg_nr_LB" 
       ','
          "Voortzetting_van_rel_id" 
       ','
          "VPB_IB_nummer" 
       ','
          "IB_VPB_Plichtig" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RBM_ORG   end=EFIEOD; 
       format Bik_Cd  ;
       format Bron_jr  ;
       format BTW_nummer  ;
       format BTW_plichtig  ;
       format IB_plichtig_sinds B8601DT19. ;
       format Jaar_oprichting best12. ;
       format Kkr_RSIN_afwijkend  ;
       format KVK_nr  ;
       format Naam  ;
       format Notitie  ;
       format Rel_id best12. ;
       format Rvm_cd  ;
       format Status_org  ;
       format Volg_nr_LB best12. ;
       format Voortzetting_van_rel_id  ;
       format VPB_IB_nummer  ;
       format IB_VPB_Plichtig  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Bik_Cd)
         then put "," @;
         else do;
                   attrLengte_5808865197604050770=length(Bik_Cd);
                   aantalLF_5808865197604050770 = countc(Bik_Cd,'0A'x);
                   maxPassend_5808865197604050770=9-1-aantalLF_5808865197604050770;
                   if attrLengte_5808865197604050770 > max(maxPassend_5808865197604050770,1000)
                     then passend_5808865197604050770 = substr(Bik_Cd,1,maxPassend_5808865197604050770);
                     else passend_5808865197604050770 = Bik_Cd;
                   passend_5808865197604050770 = tranwrd(passend_5808865197604050770,'9D'x,'D0'x);
                   put passend_5808865197604050770 ~ @;
              end;
       if missing(Bron_jr)
         then put "," @;
         else do;
                   attrLengte_3616680467157131089=length(Bron_jr);
                   aantalLF_3616680467157131089 = countc(Bron_jr,'0A'x);
                   maxPassend_3616680467157131089=1-1-aantalLF_3616680467157131089;
                   if attrLengte_3616680467157131089 > max(maxPassend_3616680467157131089,1000)
                     then passend_3616680467157131089 = substr(Bron_jr,1,maxPassend_3616680467157131089);
                     else passend_3616680467157131089 = Bron_jr;
                   passend_3616680467157131089 = tranwrd(passend_3616680467157131089,'9D'x,'D0'x);
                   put passend_3616680467157131089 ~ @;
              end;
       if missing(BTW_nummer)
         then put "," @;
         else do;
                   attrLengte_1419653207553123678=length(BTW_nummer);
                   aantalLF_1419653207553123678 = countc(BTW_nummer,'0A'x);
                   maxPassend_1419653207553123678=30-1-aantalLF_1419653207553123678;
                   if attrLengte_1419653207553123678 > max(maxPassend_1419653207553123678,1000)
                     then passend_1419653207553123678 = substr(BTW_nummer,1,maxPassend_1419653207553123678);
                     else passend_1419653207553123678 = BTW_nummer;
                   passend_1419653207553123678 = tranwrd(passend_1419653207553123678,'9D'x,'D0'x);
                   put passend_1419653207553123678 ~ @;
              end;
       if missing(BTW_plichtig)
         then put "," @;
         else do;
                   attrLengte_4656813487846060936=length(BTW_plichtig);
                   aantalLF_4656813487846060936 = countc(BTW_plichtig,'0A'x);
                   maxPassend_4656813487846060936=3-1-aantalLF_4656813487846060936;
                   if attrLengte_4656813487846060936 > max(maxPassend_4656813487846060936,1000)
                     then passend_4656813487846060936 = substr(BTW_plichtig,1,maxPassend_4656813487846060936);
                     else passend_4656813487846060936 = BTW_plichtig;
                   passend_4656813487846060936 = tranwrd(passend_4656813487846060936,'9D'x,'D0'x);
                   put passend_4656813487846060936 ~ @;
              end;
       if missing(IB_plichtig_sinds)
         then put "," @;
         else put IB_plichtig_sinds @;
       if missing(Jaar_oprichting)
         then put "," @;
         else put Jaar_oprichting @;
       if missing(Kkr_RSIN_afwijkend)
         then put "," @;
         else do;
                   attrLengte_7273408646488677377=length(Kkr_RSIN_afwijkend);
                   aantalLF_7273408646488677377 = countc(Kkr_RSIN_afwijkend,'0A'x);
                   maxPassend_7273408646488677377=1-1-aantalLF_7273408646488677377;
                   if attrLengte_7273408646488677377 > max(maxPassend_7273408646488677377,1000)
                     then passend_7273408646488677377 = substr(Kkr_RSIN_afwijkend,1,maxPassend_7273408646488677377);
                     else passend_7273408646488677377 = Kkr_RSIN_afwijkend;
                   passend_7273408646488677377 = tranwrd(passend_7273408646488677377,'9D'x,'D0'x);
                   put passend_7273408646488677377 ~ @;
              end;
       if missing(KVK_nr)
         then put "," @;
         else do;
                   attrLengte_7076068879927054975=length(KVK_nr);
                   aantalLF_7076068879927054975 = countc(KVK_nr,'0A'x);
                   maxPassend_7076068879927054975=12-1-aantalLF_7076068879927054975;
                   if attrLengte_7076068879927054975 > max(maxPassend_7076068879927054975,1000)
                     then passend_7076068879927054975 = substr(KVK_nr,1,maxPassend_7076068879927054975);
                     else passend_7076068879927054975 = KVK_nr;
                   passend_7076068879927054975 = tranwrd(passend_7076068879927054975,'9D'x,'D0'x);
                   put passend_7076068879927054975 ~ @;
              end;
       if missing(Naam)
         then put "," @;
         else do;
                   attrLengte_3121428435771779831=length(Naam);
                   aantalLF_3121428435771779831 = countc(Naam,'0A'x);
                   maxPassend_3121428435771779831=625-1-aantalLF_3121428435771779831;
                   if attrLengte_3121428435771779831 > max(maxPassend_3121428435771779831,1000)
                     then passend_3121428435771779831 = substr(Naam,1,maxPassend_3121428435771779831);
                     else passend_3121428435771779831 = Naam;
                   passend_3121428435771779831 = tranwrd(passend_3121428435771779831,'9D'x,'D0'x);
                   put passend_3121428435771779831 ~ @;
              end;
       if missing(Notitie)
         then put "," @;
         else do;
                   attrLengte_1560041029703835131=length(Notitie);
                   aantalLF_1560041029703835131 = countc(Notitie,'0A'x);
                   maxPassend_1560041029703835131=256-1-aantalLF_1560041029703835131;
                   if attrLengte_1560041029703835131 > max(maxPassend_1560041029703835131,1000)
                     then passend_1560041029703835131 = substr(Notitie,1,maxPassend_1560041029703835131);
                     else passend_1560041029703835131 = Notitie;
                   passend_1560041029703835131 = tranwrd(passend_1560041029703835131,'9D'x,'D0'x);
                   put passend_1560041029703835131 ~ @;
              end;
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(Rvm_cd)
         then put "," @;
         else do;
                   attrLengte_7355574004673159091=length(Rvm_cd);
                   aantalLF_7355574004673159091 = countc(Rvm_cd,'0A'x);
                   maxPassend_7355574004673159091=5-1-aantalLF_7355574004673159091;
                   if attrLengte_7355574004673159091 > max(maxPassend_7355574004673159091,1000)
                     then passend_7355574004673159091 = substr(Rvm_cd,1,maxPassend_7355574004673159091);
                     else passend_7355574004673159091 = Rvm_cd;
                   passend_7355574004673159091 = tranwrd(passend_7355574004673159091,'9D'x,'D0'x);
                   put passend_7355574004673159091 ~ @;
              end;
       if missing(Status_org)
         then put "," @;
         else do;
                   attrLengte_631149193839514637=length(Status_org);
                   aantalLF_631149193839514637 = countc(Status_org,'0A'x);
                   maxPassend_631149193839514637=1-1-aantalLF_631149193839514637;
                   if attrLengte_631149193839514637 > max(maxPassend_631149193839514637,1000)
                     then passend_631149193839514637 = substr(Status_org,1,maxPassend_631149193839514637);
                     else passend_631149193839514637 = Status_org;
                   passend_631149193839514637 = tranwrd(passend_631149193839514637,'9D'x,'D0'x);
                   put passend_631149193839514637 ~ @;
              end;
       if missing(Volg_nr_LB)
         then put "," @;
         else put Volg_nr_LB @;
       if missing(Voortzetting_van_rel_id)
         then put "," @;
         else do;
                   attrLengte_2740448696528104762=length(Voortzetting_van_rel_id);
                   aantalLF_2740448696528104762 = countc(Voortzetting_van_rel_id,'0A'x);
                   maxPassend_2740448696528104762=12-1-aantalLF_2740448696528104762;
                   if attrLengte_2740448696528104762 > max(maxPassend_2740448696528104762,1000)
                     then passend_2740448696528104762 = substr(Voortzetting_van_rel_id,1,maxPassend_2740448696528104762);
                     else passend_2740448696528104762 = Voortzetting_van_rel_id;
                   passend_2740448696528104762 = tranwrd(passend_2740448696528104762,'9D'x,'D0'x);
                   put passend_2740448696528104762 ~ @;
              end;
       if missing(VPB_IB_nummer)
         then put "," @;
         else do;
                   attrLengte_8610416695830085742=length(VPB_IB_nummer);
                   aantalLF_8610416695830085742 = countc(VPB_IB_nummer,'0A'x);
                   maxPassend_8610416695830085742=35-1-aantalLF_8610416695830085742;
                   if attrLengte_8610416695830085742 > max(maxPassend_8610416695830085742,1000)
                     then passend_8610416695830085742 = substr(VPB_IB_nummer,1,maxPassend_8610416695830085742);
                     else passend_8610416695830085742 = VPB_IB_nummer;
                   passend_8610416695830085742 = tranwrd(passend_8610416695830085742,'9D'x,'D0'x);
                   put passend_8610416695830085742 ~ @;
              end;
       if missing(IB_VPB_Plichtig)
         then put "," @;
         else do;
                   attrLengte_3636946875933051938=length(IB_VPB_Plichtig);
                   aantalLF_3636946875933051938 = countc(IB_VPB_Plichtig,'0A'x);
                   maxPassend_3636946875933051938=1-1-aantalLF_3636946875933051938;
                   if attrLengte_3636946875933051938 > max(maxPassend_3636946875933051938,1000)
                     then passend_3636946875933051938 = substr(IB_VPB_Plichtig,1,maxPassend_3636946875933051938);
                     else passend_3636946875933051938 = IB_VPB_Plichtig;
                   passend_3636946875933051938 = tranwrd(passend_3636946875933051938,'9D'x,'D0'x);
                   put passend_3636946875933051938 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RBM_PERSOON AS
   SELECT t1.Aanhef,
          t1.Aanlevernaam,
          t1.Aanspreeknaam,
          t1.Achternaam,
          t1.Foutmelding,
          t1.Geboortedatum FORMAT=B8601DT19. AS Geboortedatum,
          t1.Geslacht,
          t1.Import_contactpersonen_id,
          t1.Notitie,
          t1.Rbm_persoon_contact,
          t1.Rbm_persoon_particulier,
          t1.Rel_id,
          t1.Status_persoon,
          t1.Sushi_foutmelding,
          t1.Taal,
          t1.Titels_na,
          t1.Titels_voor,
          t1.Tussenvoegsels,
          t1.Validatie,
          t1.Voorletters,
          t1.Voornaam,
          t1.XML_String
     FROM DATAQASG.RBM_PERSOON_TCMG t1;
QUIT;

data MIGRATIE.BAS_RBM_PERSOON;
  set MIGRATIE.BAS_RBM_PERSOON;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RBM_PERSOON.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Aanhef" 
       ','
          "Aanlevernaam" 
       ','
          "Aanspreeknaam" 
       ','
          "Achternaam" 
       ','
          "Foutmelding" 
       ','
          "Geboortedatum" 
       ','
          "Geslacht" 
       ','
          "Import_contactpersonen_id" 
       ','
          "Notitie" 
       ','
          "Rbm_persoon_contact" 
       ','
          "Rbm_persoon_particulier" 
       ','
          "Rel_id" 
       ','
          "Status_persoon" 
       ','
          "Sushi_foutmelding" 
       ','
          "Taal" 
       ','
          "Titels_na" 
       ','
          "Titels_voor" 
       ','
          "Tussenvoegsels" 
       ','
          "Validatie" 
       ','
          "Voorletters" 
       ','
          "Voornaam" 
       ','
          "XML_String" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RBM_PERSOON   end=EFIEOD; 
       format Aanhef  ;
       format Aanlevernaam  ;
       format Aanspreeknaam  ;
       format Achternaam  ;
       format Foutmelding  ;
       format Geboortedatum B8601DT19. ;
       format Geslacht  ;
       format Import_contactpersonen_id best12. ;
       format Notitie  ;
       format Rbm_persoon_contact  ;
       format Rbm_persoon_particulier  ;
       format Rel_id best12. ;
       format Status_persoon  ;
       format Sushi_foutmelding  ;
       format Taal  ;
       format Titels_na  ;
       format Titels_voor  ;
       format Tussenvoegsels  ;
       format Validatie  ;
       format Voorletters  ;
       format Voornaam  ;
       format XML_String  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Aanhef)
         then put "," @;
         else do;
                   attrLengte_6510866943421080183=length(Aanhef);
                   aantalLF_6510866943421080183 = countc(Aanhef,'0A'x);
                   maxPassend_6510866943421080183=10-1-aantalLF_6510866943421080183;
                   if attrLengte_6510866943421080183 > max(maxPassend_6510866943421080183,1000)
                     then passend_6510866943421080183 = substr(Aanhef,1,maxPassend_6510866943421080183);
                     else passend_6510866943421080183 = Aanhef;
                   passend_6510866943421080183 = tranwrd(passend_6510866943421080183,'9D'x,'D0'x);
                   put passend_6510866943421080183 ~ @;
              end;
       if missing(Aanlevernaam)
         then put "," @;
         else do;
                   attrLengte_6196602520980259541=length(Aanlevernaam);
                   aantalLF_6196602520980259541 = countc(Aanlevernaam,'0A'x);
                   maxPassend_6196602520980259541=625-1-aantalLF_6196602520980259541;
                   if attrLengte_6196602520980259541 > max(maxPassend_6196602520980259541,1000)
                     then passend_6196602520980259541 = substr(Aanlevernaam,1,maxPassend_6196602520980259541);
                     else passend_6196602520980259541 = Aanlevernaam;
                   passend_6196602520980259541 = tranwrd(passend_6196602520980259541,'9D'x,'D0'x);
                   put passend_6196602520980259541 ~ @;
              end;
       if missing(Aanspreeknaam)
         then put "," @;
         else do;
                   attrLengte_5000095886126416684=length(Aanspreeknaam);
                   aantalLF_5000095886126416684 = countc(Aanspreeknaam,'0A'x);
                   maxPassend_5000095886126416684=625-1-aantalLF_5000095886126416684;
                   if attrLengte_5000095886126416684 > max(maxPassend_5000095886126416684,1000)
                     then passend_5000095886126416684 = substr(Aanspreeknaam,1,maxPassend_5000095886126416684);
                     else passend_5000095886126416684 = Aanspreeknaam;
                   passend_5000095886126416684 = tranwrd(passend_5000095886126416684,'9D'x,'D0'x);
                   put passend_5000095886126416684 ~ @;
              end;
       if missing(Achternaam)
         then put "," @;
         else do;
                   attrLengte_403642515580817570=length(Achternaam);
                   aantalLF_403642515580817570 = countc(Achternaam,'0A'x);
                   maxPassend_403642515580817570=414-1-aantalLF_403642515580817570;
                   if attrLengte_403642515580817570 > max(maxPassend_403642515580817570,1000)
                     then passend_403642515580817570 = substr(Achternaam,1,maxPassend_403642515580817570);
                     else passend_403642515580817570 = Achternaam;
                   passend_403642515580817570 = tranwrd(passend_403642515580817570,'9D'x,'D0'x);
                   put passend_403642515580817570 ~ @;
              end;
       if missing(Foutmelding)
         then put "," @;
         else do;
                   attrLengte_5736683297058446811=length(Foutmelding);
                   aantalLF_5736683297058446811 = countc(Foutmelding,'0A'x);
                   maxPassend_5736683297058446811=100-1-aantalLF_5736683297058446811;
                   if attrLengte_5736683297058446811 > max(maxPassend_5736683297058446811,1000)
                     then passend_5736683297058446811 = substr(Foutmelding,1,maxPassend_5736683297058446811);
                     else passend_5736683297058446811 = Foutmelding;
                   passend_5736683297058446811 = tranwrd(passend_5736683297058446811,'9D'x,'D0'x);
                   put passend_5736683297058446811 ~ @;
              end;
       if missing(Geboortedatum)
         then put "," @;
         else put Geboortedatum @;
       if missing(Geslacht)
         then put "," @;
         else do;
                   attrLengte_731654219873503099=length(Geslacht);
                   aantalLF_731654219873503099 = countc(Geslacht,'0A'x);
                   maxPassend_731654219873503099=1-1-aantalLF_731654219873503099;
                   if attrLengte_731654219873503099 > max(maxPassend_731654219873503099,1000)
                     then passend_731654219873503099 = substr(Geslacht,1,maxPassend_731654219873503099);
                     else passend_731654219873503099 = Geslacht;
                   passend_731654219873503099 = tranwrd(passend_731654219873503099,'9D'x,'D0'x);
                   put passend_731654219873503099 ~ @;
              end;
       if missing(Import_contactpersonen_id)
         then put "," @;
         else put Import_contactpersonen_id @;
       if missing(Notitie)
         then put "," @;
         else do;
                   attrLengte_1560041029703835131=length(Notitie);
                   aantalLF_1560041029703835131 = countc(Notitie,'0A'x);
                   maxPassend_1560041029703835131=256-1-aantalLF_1560041029703835131;
                   if attrLengte_1560041029703835131 > max(maxPassend_1560041029703835131,1000)
                     then passend_1560041029703835131 = substr(Notitie,1,maxPassend_1560041029703835131);
                     else passend_1560041029703835131 = Notitie;
                   passend_1560041029703835131 = tranwrd(passend_1560041029703835131,'9D'x,'D0'x);
                   put passend_1560041029703835131 ~ @;
              end;
       if missing(Rbm_persoon_contact)
         then put "," @;
         else do;
                   attrLengte_8412905630617268252=length(Rbm_persoon_contact);
                   aantalLF_8412905630617268252 = countc(Rbm_persoon_contact,'0A'x);
                   maxPassend_8412905630617268252=1-1-aantalLF_8412905630617268252;
                   if attrLengte_8412905630617268252 > max(maxPassend_8412905630617268252,1000)
                     then passend_8412905630617268252 = substr(Rbm_persoon_contact,1,maxPassend_8412905630617268252);
                     else passend_8412905630617268252 = Rbm_persoon_contact;
                   passend_8412905630617268252 = tranwrd(passend_8412905630617268252,'9D'x,'D0'x);
                   put passend_8412905630617268252 ~ @;
              end;
       if missing(Rbm_persoon_particulier)
         then put "," @;
         else do;
                   attrLengte_2139125467959230976=length(Rbm_persoon_particulier);
                   aantalLF_2139125467959230976 = countc(Rbm_persoon_particulier,'0A'x);
                   maxPassend_2139125467959230976=1-1-aantalLF_2139125467959230976;
                   if attrLengte_2139125467959230976 > max(maxPassend_2139125467959230976,1000)
                     then passend_2139125467959230976 = substr(Rbm_persoon_particulier,1,maxPassend_2139125467959230976);
                     else passend_2139125467959230976 = Rbm_persoon_particulier;
                   passend_2139125467959230976 = tranwrd(passend_2139125467959230976,'9D'x,'D0'x);
                   put passend_2139125467959230976 ~ @;
              end;
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(Status_persoon)
         then put "," @;
         else do;
                   attrLengte_8431208606378813157=length(Status_persoon);
                   aantalLF_8431208606378813157 = countc(Status_persoon,'0A'x);
                   maxPassend_8431208606378813157=1-1-aantalLF_8431208606378813157;
                   if attrLengte_8431208606378813157 > max(maxPassend_8431208606378813157,1000)
                     then passend_8431208606378813157 = substr(Status_persoon,1,maxPassend_8431208606378813157);
                     else passend_8431208606378813157 = Status_persoon;
                   passend_8431208606378813157 = tranwrd(passend_8431208606378813157,'9D'x,'D0'x);
                   put passend_8431208606378813157 ~ @;
              end;
       if missing(Sushi_foutmelding)
         then put "," @;
         else do;
                   attrLengte_8715378855826488452=length(Sushi_foutmelding);
                   aantalLF_8715378855826488452 = countc(Sushi_foutmelding,'0A'x);
                   maxPassend_8715378855826488452=200-1-aantalLF_8715378855826488452;
                   if attrLengte_8715378855826488452 > max(maxPassend_8715378855826488452,1000)
                     then passend_8715378855826488452 = substr(Sushi_foutmelding,1,maxPassend_8715378855826488452);
                     else passend_8715378855826488452 = Sushi_foutmelding;
                   passend_8715378855826488452 = tranwrd(passend_8715378855826488452,'9D'x,'D0'x);
                   put passend_8715378855826488452 ~ @;
              end;
       if missing(Taal)
         then put "," @;
         else do;
                   attrLengte_2092764852980830674=length(Taal);
                   aantalLF_2092764852980830674 = countc(Taal,'0A'x);
                   maxPassend_2092764852980830674=2-1-aantalLF_2092764852980830674;
                   if attrLengte_2092764852980830674 > max(maxPassend_2092764852980830674,1000)
                     then passend_2092764852980830674 = substr(Taal,1,maxPassend_2092764852980830674);
                     else passend_2092764852980830674 = Taal;
                   passend_2092764852980830674 = tranwrd(passend_2092764852980830674,'9D'x,'D0'x);
                   put passend_2092764852980830674 ~ @;
              end;
       if missing(Titels_na)
         then put "," @;
         else do;
                   attrLengte_2493966725399468662=length(Titels_na);
                   aantalLF_2493966725399468662 = countc(Titels_na,'0A'x);
                   maxPassend_2493966725399468662=50-1-aantalLF_2493966725399468662;
                   if attrLengte_2493966725399468662 > max(maxPassend_2493966725399468662,1000)
                     then passend_2493966725399468662 = substr(Titels_na,1,maxPassend_2493966725399468662);
                     else passend_2493966725399468662 = Titels_na;
                   passend_2493966725399468662 = tranwrd(passend_2493966725399468662,'9D'x,'D0'x);
                   put passend_2493966725399468662 ~ @;
              end;
       if missing(Titels_voor)
         then put "," @;
         else do;
                   attrLengte_4195529622826795265=length(Titels_voor);
                   aantalLF_4195529622826795265 = countc(Titels_voor,'0A'x);
                   maxPassend_4195529622826795265=50-1-aantalLF_4195529622826795265;
                   if attrLengte_4195529622826795265 > max(maxPassend_4195529622826795265,1000)
                     then passend_4195529622826795265 = substr(Titels_voor,1,maxPassend_4195529622826795265);
                     else passend_4195529622826795265 = Titels_voor;
                   passend_4195529622826795265 = tranwrd(passend_4195529622826795265,'9D'x,'D0'x);
                   put passend_4195529622826795265 ~ @;
              end;
       if missing(Tussenvoegsels)
         then put "," @;
         else do;
                   attrLengte_5106043141375307758=length(Tussenvoegsels);
                   aantalLF_5106043141375307758 = countc(Tussenvoegsels,'0A'x);
                   maxPassend_5106043141375307758=10-1-aantalLF_5106043141375307758;
                   if attrLengte_5106043141375307758 > max(maxPassend_5106043141375307758,1000)
                     then passend_5106043141375307758 = substr(Tussenvoegsels,1,maxPassend_5106043141375307758);
                     else passend_5106043141375307758 = Tussenvoegsels;
                   passend_5106043141375307758 = tranwrd(passend_5106043141375307758,'9D'x,'D0'x);
                   put passend_5106043141375307758 ~ @;
              end;
       if missing(Validatie)
         then put "," @;
         else do;
                   attrLengte_1422979793511950032=length(Validatie);
                   aantalLF_1422979793511950032 = countc(Validatie,'0A'x);
                   maxPassend_1422979793511950032=1-1-aantalLF_1422979793511950032;
                   if attrLengte_1422979793511950032 > max(maxPassend_1422979793511950032,1000)
                     then passend_1422979793511950032 = substr(Validatie,1,maxPassend_1422979793511950032);
                     else passend_1422979793511950032 = Validatie;
                   passend_1422979793511950032 = tranwrd(passend_1422979793511950032,'9D'x,'D0'x);
                   put passend_1422979793511950032 ~ @;
              end;
       if missing(Voorletters)
         then put "," @;
         else do;
                   attrLengte_933604317395829620=length(Voorletters);
                   aantalLF_933604317395829620 = countc(Voorletters,'0A'x);
                   maxPassend_933604317395829620=6-1-aantalLF_933604317395829620;
                   if attrLengte_933604317395829620 > max(maxPassend_933604317395829620,1000)
                     then passend_933604317395829620 = substr(Voorletters,1,maxPassend_933604317395829620);
                     else passend_933604317395829620 = Voorletters;
                   passend_933604317395829620 = tranwrd(passend_933604317395829620,'9D'x,'D0'x);
                   put passend_933604317395829620 ~ @;
              end;
       if missing(Voornaam)
         then put "," @;
         else do;
                   attrLengte_7272765945587119437=length(Voornaam);
                   aantalLF_7272765945587119437 = countc(Voornaam,'0A'x);
                   maxPassend_7272765945587119437=200-1-aantalLF_7272765945587119437;
                   if attrLengte_7272765945587119437 > max(maxPassend_7272765945587119437,1000)
                     then passend_7272765945587119437 = substr(Voornaam,1,maxPassend_7272765945587119437);
                     else passend_7272765945587119437 = Voornaam;
                   passend_7272765945587119437 = tranwrd(passend_7272765945587119437,'9D'x,'D0'x);
                   put passend_7272765945587119437 ~ @;
              end;
       if missing(XML_String)
         then put "," @;
         else do;
                   attrLengte_2872510320193282717=length(XML_String);
                   aantalLF_2872510320193282717 = countc(XML_String,'0A'x);
                   maxPassend_2872510320193282717=2048-1-aantalLF_2872510320193282717;
                   if attrLengte_2872510320193282717 > max(maxPassend_2872510320193282717,1000)
                     then passend_2872510320193282717 = substr(XML_String,1,maxPassend_2872510320193282717);
                     else passend_2872510320193282717 = XML_String;
                   passend_2872510320193282717 = tranwrd(passend_2872510320193282717,'9D'x,'D0'x);
                   put passend_2872510320193282717 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RBM_REKENINGNRS AS
   SELECT t1.Banknaam,
          t1.Bic,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Externe_bron_cd,
          t1.Goedkeuring_sts,
          t1.Iban,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Rel_id,
          t1.User_akkoord
     FROM DATAQASG.RBM_REKENINGNRS_TCMG t1;
QUIT;

data MIGRATIE.BAS_RBM_REKENINGNRS;
  set MIGRATIE.BAS_RBM_REKENINGNRS;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RBM_REKENINGNRS.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Banknaam" 
       ','
          "Bic" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Externe_bron_cd" 
       ','
          "Goedkeuring_sts" 
       ','
          "Iban" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Rel_id" 
       ','
          "User_akkoord" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RBM_REKENINGNRS   end=EFIEOD; 
       format Banknaam  ;
       format Bic  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Externe_bron_cd  ;
       format Goedkeuring_sts  ;
       format Iban  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Rel_id best12. ;
       format User_akkoord  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Banknaam)
         then put "," @;
         else do;
                   attrLengte_9171161243242669933=length(Banknaam);
                   aantalLF_9171161243242669933 = countc(Banknaam,'0A'x);
                   maxPassend_9171161243242669933=50-1-aantalLF_9171161243242669933;
                   if attrLengte_9171161243242669933 > max(maxPassend_9171161243242669933,1000)
                     then passend_9171161243242669933 = substr(Banknaam,1,maxPassend_9171161243242669933);
                     else passend_9171161243242669933 = Banknaam;
                   passend_9171161243242669933 = tranwrd(passend_9171161243242669933,'9D'x,'D0'x);
                   put passend_9171161243242669933 ~ @;
              end;
       if missing(Bic)
         then put "," @;
         else do;
                   attrLengte_8393283933206478573=length(Bic);
                   aantalLF_8393283933206478573 = countc(Bic,'0A'x);
                   maxPassend_8393283933206478573=11-1-aantalLF_8393283933206478573;
                   if attrLengte_8393283933206478573 > max(maxPassend_8393283933206478573,1000)
                     then passend_8393283933206478573 = substr(Bic,1,maxPassend_8393283933206478573);
                     else passend_8393283933206478573 = Bic;
                   passend_8393283933206478573 = tranwrd(passend_8393283933206478573,'9D'x,'D0'x);
                   put passend_8393283933206478573 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Externe_bron_cd)
         then put "," @;
         else do;
                   attrLengte_2067704043811996344=length(Externe_bron_cd);
                   aantalLF_2067704043811996344 = countc(Externe_bron_cd,'0A'x);
                   maxPassend_2067704043811996344=10-1-aantalLF_2067704043811996344;
                   if attrLengte_2067704043811996344 > max(maxPassend_2067704043811996344,1000)
                     then passend_2067704043811996344 = substr(Externe_bron_cd,1,maxPassend_2067704043811996344);
                     else passend_2067704043811996344 = Externe_bron_cd;
                   passend_2067704043811996344 = tranwrd(passend_2067704043811996344,'9D'x,'D0'x);
                   put passend_2067704043811996344 ~ @;
              end;
       if missing(Goedkeuring_sts)
         then put "," @;
         else do;
                   attrLengte_8202167600123421072=length(Goedkeuring_sts);
                   aantalLF_8202167600123421072 = countc(Goedkeuring_sts,'0A'x);
                   maxPassend_8202167600123421072=1-1-aantalLF_8202167600123421072;
                   if attrLengte_8202167600123421072 > max(maxPassend_8202167600123421072,1000)
                     then passend_8202167600123421072 = substr(Goedkeuring_sts,1,maxPassend_8202167600123421072);
                     else passend_8202167600123421072 = Goedkeuring_sts;
                   passend_8202167600123421072 = tranwrd(passend_8202167600123421072,'9D'x,'D0'x);
                   put passend_8202167600123421072 ~ @;
              end;
       if missing(Iban)
         then put "," @;
         else do;
                   attrLengte_8433717562044549680=length(Iban);
                   aantalLF_8433717562044549680 = countc(Iban,'0A'x);
                   maxPassend_8433717562044549680=34-1-aantalLF_8433717562044549680;
                   if attrLengte_8433717562044549680 > max(maxPassend_8433717562044549680,1000)
                     then passend_8433717562044549680 = substr(Iban,1,maxPassend_8433717562044549680);
                     else passend_8433717562044549680 = Iban;
                   passend_8433717562044549680 = tranwrd(passend_8433717562044549680,'9D'x,'D0'x);
                   put passend_8433717562044549680 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(User_akkoord)
         then put "," @;
         else do;
                   attrLengte_2845735713589279779=length(User_akkoord);
                   aantalLF_2845735713589279779 = countc(User_akkoord,'0A'x);
                   maxPassend_2845735713589279779=30-1-aantalLF_2845735713589279779;
                   if attrLengte_2845735713589279779 > max(maxPassend_2845735713589279779,1000)
                     then passend_2845735713589279779 = substr(User_akkoord,1,maxPassend_2845735713589279779);
                     else passend_2845735713589279779 = User_akkoord;
                   passend_2845735713589279779 = tranwrd(passend_2845735713589279779,'9D'x,'D0'x);
                   put passend_2845735713589279779 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RBM_REKNR_MUT AS
   SELECT t1.Rel_id,
          t1.Volgnummer,
          t1.Org_banknaam,
          t1.Org_bankgironr,
          t1.New_banknaam,
          t1.New_bankgironr,
          t1.Gebruiker,
          t1.Datum_mutatie FORMAT=B8601DT19. AS Datum_mutatie,
          t1.Iban,
          t1.New_iban,
          t1.Bic,
          t1.New_bic,
          t1.Org_user_akkoord,
          t1.New_user_akkoord,
          t1.Org_goedkeuring_sts,
          t1.New_goedkeuring_sts,
          t1.Externe_bron_cd
     FROM DATAQASG.RBM_REKNR_MUT_TCMG t1;
QUIT;

data MIGRATIE.BAS_RBM_REKNR_MUT;
  set MIGRATIE.BAS_RBM_REKNR_MUT;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RBM_REKNR_MUT.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Rel_id" 
       ','
          "Volgnummer" 
       ','
          "Org_banknaam" 
       ','
          "Org_bankgironr" 
       ','
          "New_banknaam" 
       ','
          "New_bankgironr" 
       ','
          "Gebruiker" 
       ','
          "Datum_mutatie" 
       ','
          "Iban" 
       ','
          "New_iban" 
       ','
          "Bic" 
       ','
          "New_bic" 
       ','
          "Org_user_akkoord" 
       ','
          "New_user_akkoord" 
       ','
          "Org_goedkeuring_sts" 
       ','
          "New_goedkeuring_sts" 
       ','
          "Externe_bron_cd" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RBM_REKNR_MUT   end=EFIEOD; 
       format Rel_id best12. ;
       format Volgnummer best12. ;
       format Org_banknaam  ;
       format Org_bankgironr  ;
       format New_banknaam  ;
       format New_bankgironr  ;
       format Gebruiker  ;
       format Datum_mutatie B8601DT19. ;
       format Iban  ;
       format New_iban  ;
       format Bic  ;
       format New_bic  ;
       format Org_user_akkoord  ;
       format New_user_akkoord  ;
       format Org_goedkeuring_sts  ;
       format New_goedkeuring_sts  ;
       format Externe_bron_cd  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(Volgnummer)
         then put "," @;
         else put Volgnummer @;
       if missing(Org_banknaam)
         then put "," @;
         else do;
                   attrLengte_3514290540041762326=length(Org_banknaam);
                   aantalLF_3514290540041762326 = countc(Org_banknaam,'0A'x);
                   maxPassend_3514290540041762326=30-1-aantalLF_3514290540041762326;
                   if attrLengte_3514290540041762326 > max(maxPassend_3514290540041762326,1000)
                     then passend_3514290540041762326 = substr(Org_banknaam,1,maxPassend_3514290540041762326);
                     else passend_3514290540041762326 = Org_banknaam;
                   passend_3514290540041762326 = tranwrd(passend_3514290540041762326,'9D'x,'D0'x);
                   put passend_3514290540041762326 ~ @;
              end;
       if missing(Org_bankgironr)
         then put "," @;
         else do;
                   attrLengte_1294984602765791056=length(Org_bankgironr);
                   aantalLF_1294984602765791056 = countc(Org_bankgironr,'0A'x);
                   maxPassend_1294984602765791056=11-1-aantalLF_1294984602765791056;
                   if attrLengte_1294984602765791056 > max(maxPassend_1294984602765791056,1000)
                     then passend_1294984602765791056 = substr(Org_bankgironr,1,maxPassend_1294984602765791056);
                     else passend_1294984602765791056 = Org_bankgironr;
                   passend_1294984602765791056 = tranwrd(passend_1294984602765791056,'9D'x,'D0'x);
                   put passend_1294984602765791056 ~ @;
              end;
       if missing(New_banknaam)
         then put "," @;
         else do;
                   attrLengte_4845854068159114062=length(New_banknaam);
                   aantalLF_4845854068159114062 = countc(New_banknaam,'0A'x);
                   maxPassend_4845854068159114062=30-1-aantalLF_4845854068159114062;
                   if attrLengte_4845854068159114062 > max(maxPassend_4845854068159114062,1000)
                     then passend_4845854068159114062 = substr(New_banknaam,1,maxPassend_4845854068159114062);
                     else passend_4845854068159114062 = New_banknaam;
                   passend_4845854068159114062 = tranwrd(passend_4845854068159114062,'9D'x,'D0'x);
                   put passend_4845854068159114062 ~ @;
              end;
       if missing(New_bankgironr)
         then put "," @;
         else do;
                   attrLengte_524207556529136008=length(New_bankgironr);
                   aantalLF_524207556529136008 = countc(New_bankgironr,'0A'x);
                   maxPassend_524207556529136008=11-1-aantalLF_524207556529136008;
                   if attrLengte_524207556529136008 > max(maxPassend_524207556529136008,1000)
                     then passend_524207556529136008 = substr(New_bankgironr,1,maxPassend_524207556529136008);
                     else passend_524207556529136008 = New_bankgironr;
                   passend_524207556529136008 = tranwrd(passend_524207556529136008,'9D'x,'D0'x);
                   put passend_524207556529136008 ~ @;
              end;
       if missing(Gebruiker)
         then put "," @;
         else do;
                   attrLengte_91115205626301303=length(Gebruiker);
                   aantalLF_91115205626301303 = countc(Gebruiker,'0A'x);
                   maxPassend_91115205626301303=30-1-aantalLF_91115205626301303;
                   if attrLengte_91115205626301303 > max(maxPassend_91115205626301303,1000)
                     then passend_91115205626301303 = substr(Gebruiker,1,maxPassend_91115205626301303);
                     else passend_91115205626301303 = Gebruiker;
                   passend_91115205626301303 = tranwrd(passend_91115205626301303,'9D'x,'D0'x);
                   put passend_91115205626301303 ~ @;
              end;
       if missing(Datum_mutatie)
         then put "," @;
         else put Datum_mutatie @;
       if missing(Iban)
         then put "," @;
         else do;
                   attrLengte_8433717562044549680=length(Iban);
                   aantalLF_8433717562044549680 = countc(Iban,'0A'x);
                   maxPassend_8433717562044549680=34-1-aantalLF_8433717562044549680;
                   if attrLengte_8433717562044549680 > max(maxPassend_8433717562044549680,1000)
                     then passend_8433717562044549680 = substr(Iban,1,maxPassend_8433717562044549680);
                     else passend_8433717562044549680 = Iban;
                   passend_8433717562044549680 = tranwrd(passend_8433717562044549680,'9D'x,'D0'x);
                   put passend_8433717562044549680 ~ @;
              end;
       if missing(New_iban)
         then put "," @;
         else do;
                   attrLengte_7358645892020539425=length(New_iban);
                   aantalLF_7358645892020539425 = countc(New_iban,'0A'x);
                   maxPassend_7358645892020539425=34-1-aantalLF_7358645892020539425;
                   if attrLengte_7358645892020539425 > max(maxPassend_7358645892020539425,1000)
                     then passend_7358645892020539425 = substr(New_iban,1,maxPassend_7358645892020539425);
                     else passend_7358645892020539425 = New_iban;
                   passend_7358645892020539425 = tranwrd(passend_7358645892020539425,'9D'x,'D0'x);
                   put passend_7358645892020539425 ~ @;
              end;
       if missing(Bic)
         then put "," @;
         else do;
                   attrLengte_8393283933206478573=length(Bic);
                   aantalLF_8393283933206478573 = countc(Bic,'0A'x);
                   maxPassend_8393283933206478573=11-1-aantalLF_8393283933206478573;
                   if attrLengte_8393283933206478573 > max(maxPassend_8393283933206478573,1000)
                     then passend_8393283933206478573 = substr(Bic,1,maxPassend_8393283933206478573);
                     else passend_8393283933206478573 = Bic;
                   passend_8393283933206478573 = tranwrd(passend_8393283933206478573,'9D'x,'D0'x);
                   put passend_8393283933206478573 ~ @;
              end;
       if missing(New_bic)
         then put "," @;
         else do;
                   attrLengte_4715588582746621148=length(New_bic);
                   aantalLF_4715588582746621148 = countc(New_bic,'0A'x);
                   maxPassend_4715588582746621148=11-1-aantalLF_4715588582746621148;
                   if attrLengte_4715588582746621148 > max(maxPassend_4715588582746621148,1000)
                     then passend_4715588582746621148 = substr(New_bic,1,maxPassend_4715588582746621148);
                     else passend_4715588582746621148 = New_bic;
                   passend_4715588582746621148 = tranwrd(passend_4715588582746621148,'9D'x,'D0'x);
                   put passend_4715588582746621148 ~ @;
              end;
       if missing(Org_user_akkoord)
         then put "," @;
         else do;
                   attrLengte_2879824750918571874=length(Org_user_akkoord);
                   aantalLF_2879824750918571874 = countc(Org_user_akkoord,'0A'x);
                   maxPassend_2879824750918571874=30-1-aantalLF_2879824750918571874;
                   if attrLengte_2879824750918571874 > max(maxPassend_2879824750918571874,1000)
                     then passend_2879824750918571874 = substr(Org_user_akkoord,1,maxPassend_2879824750918571874);
                     else passend_2879824750918571874 = Org_user_akkoord;
                   passend_2879824750918571874 = tranwrd(passend_2879824750918571874,'9D'x,'D0'x);
                   put passend_2879824750918571874 ~ @;
              end;
       if missing(New_user_akkoord)
         then put "," @;
         else do;
                   attrLengte_4157760871581770618=length(New_user_akkoord);
                   aantalLF_4157760871581770618 = countc(New_user_akkoord,'0A'x);
                   maxPassend_4157760871581770618=30-1-aantalLF_4157760871581770618;
                   if attrLengte_4157760871581770618 > max(maxPassend_4157760871581770618,1000)
                     then passend_4157760871581770618 = substr(New_user_akkoord,1,maxPassend_4157760871581770618);
                     else passend_4157760871581770618 = New_user_akkoord;
                   passend_4157760871581770618 = tranwrd(passend_4157760871581770618,'9D'x,'D0'x);
                   put passend_4157760871581770618 ~ @;
              end;
       if missing(Org_goedkeuring_sts)
         then put "," @;
         else do;
                   attrLengte_5613745345172824607=length(Org_goedkeuring_sts);
                   aantalLF_5613745345172824607 = countc(Org_goedkeuring_sts,'0A'x);
                   maxPassend_5613745345172824607=1-1-aantalLF_5613745345172824607;
                   if attrLengte_5613745345172824607 > max(maxPassend_5613745345172824607,1000)
                     then passend_5613745345172824607 = substr(Org_goedkeuring_sts,1,maxPassend_5613745345172824607);
                     else passend_5613745345172824607 = Org_goedkeuring_sts;
                   passend_5613745345172824607 = tranwrd(passend_5613745345172824607,'9D'x,'D0'x);
                   put passend_5613745345172824607 ~ @;
              end;
       if missing(New_goedkeuring_sts)
         then put "," @;
         else do;
                   attrLengte_5350490799438944457=length(New_goedkeuring_sts);
                   aantalLF_5350490799438944457 = countc(New_goedkeuring_sts,'0A'x);
                   maxPassend_5350490799438944457=1-1-aantalLF_5350490799438944457;
                   if attrLengte_5350490799438944457 > max(maxPassend_5350490799438944457,1000)
                     then passend_5350490799438944457 = substr(New_goedkeuring_sts,1,maxPassend_5350490799438944457);
                     else passend_5350490799438944457 = New_goedkeuring_sts;
                   passend_5350490799438944457 = tranwrd(passend_5350490799438944457,'9D'x,'D0'x);
                   put passend_5350490799438944457 ~ @;
              end;
       if missing(Externe_bron_cd)
         then put "," @;
         else do;
                   attrLengte_2067704043811996344=length(Externe_bron_cd);
                   aantalLF_2067704043811996344 = countc(Externe_bron_cd,'0A'x);
                   maxPassend_2067704043811996344=10-1-aantalLF_2067704043811996344;
                   if attrLengte_2067704043811996344 > max(maxPassend_2067704043811996344,1000)
                     then passend_2067704043811996344 = substr(Externe_bron_cd,1,maxPassend_2067704043811996344);
                     else passend_2067704043811996344 = Externe_bron_cd;
                   passend_2067704043811996344 = tranwrd(passend_2067704043811996344,'9D'x,'D0'x);
                   put passend_2067704043811996344 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RBM_RELATIE AS
   SELECT t1.Actief,
          t1.Auth_id,
          t1.Belastingeenheid,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.creatie_user,
          t1.Fiscaalnr,
          t1.IdE_id,
          t1.Invoer_id,
          t1.KR_Gevalideerd,
          t1.Kkr_Relatie_id,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.mutatie_user,
          t1.Rbm_org,
          t1.Rbm_persoon,
          t1.Ref_kkr_relatie_id,
          t1.Rel_id,
          t1.Relatietype
     FROM DATAQASG.RBM_RELATIE_TCMG t1;
QUIT;

data MIGRATIE.BAS_RBM_RELATIE;
  set MIGRATIE.BAS_RBM_RELATIE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RBM_RELATIE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Actief" 
       ','
          "Auth_id" 
       ','
          "Belastingeenheid" 
       ','
          "Creatie_dat" 
       ','
          "creatie_user" 
       ','
          "Fiscaalnr" 
       ','
          "IdE_id" 
       ','
          "Invoer_id" 
       ','
          "KR_Gevalideerd" 
       ','
          "Kkr_Relatie_id" 
       ','
          "Mutatie_dat" 
       ','
          "mutatie_user" 
       ','
          "Rbm_org" 
       ','
          "Rbm_persoon" 
       ','
          "Ref_kkr_relatie_id" 
       ','
          "Rel_id" 
       ','
          "Relatietype" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RBM_RELATIE   end=EFIEOD; 
       format Actief  ;
       format Auth_id best12. ;
       format Belastingeenheid best12. ;
       format Creatie_dat B8601DT19. ;
       format creatie_user  ;
       format Fiscaalnr  ;
       format IdE_id best12. ;
       format Invoer_id best12. ;
       format KR_Gevalideerd  ;
       format Kkr_Relatie_id  ;
       format Mutatie_dat B8601DT19. ;
       format mutatie_user  ;
       format Rbm_org  ;
       format Rbm_persoon  ;
       format Ref_kkr_relatie_id  ;
       format Rel_id best12. ;
       format Relatietype  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Actief)
         then put "," @;
         else do;
                   attrLengte_9040032925271508250=length(Actief);
                   aantalLF_9040032925271508250 = countc(Actief,'0A'x);
                   maxPassend_9040032925271508250=1-1-aantalLF_9040032925271508250;
                   if attrLengte_9040032925271508250 > max(maxPassend_9040032925271508250,1000)
                     then passend_9040032925271508250 = substr(Actief,1,maxPassend_9040032925271508250);
                     else passend_9040032925271508250 = Actief;
                   passend_9040032925271508250 = tranwrd(passend_9040032925271508250,'9D'x,'D0'x);
                   put passend_9040032925271508250 ~ @;
              end;
       if missing(Auth_id)
         then put "," @;
         else put Auth_id @;
       if missing(Belastingeenheid)
         then put "," @;
         else put Belastingeenheid @;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(creatie_user)
         then put "," @;
         else do;
                   attrLengte_5059886387476131123=length(creatie_user);
                   aantalLF_5059886387476131123 = countc(creatie_user,'0A'x);
                   maxPassend_5059886387476131123=30-1-aantalLF_5059886387476131123;
                   if attrLengte_5059886387476131123 > max(maxPassend_5059886387476131123,1000)
                     then passend_5059886387476131123 = substr(creatie_user,1,maxPassend_5059886387476131123);
                     else passend_5059886387476131123 = creatie_user;
                   passend_5059886387476131123 = tranwrd(passend_5059886387476131123,'9D'x,'D0'x);
                   put passend_5059886387476131123 ~ @;
              end;
       if missing(Fiscaalnr)
         then put "," @;
         else do;
                   attrLengte_5810707595799730434=length(Fiscaalnr);
                   aantalLF_5810707595799730434 = countc(Fiscaalnr,'0A'x);
                   maxPassend_5810707595799730434=10-1-aantalLF_5810707595799730434;
                   if attrLengte_5810707595799730434 > max(maxPassend_5810707595799730434,1000)
                     then passend_5810707595799730434 = substr(Fiscaalnr,1,maxPassend_5810707595799730434);
                     else passend_5810707595799730434 = Fiscaalnr;
                   passend_5810707595799730434 = tranwrd(passend_5810707595799730434,'9D'x,'D0'x);
                   put passend_5810707595799730434 ~ @;
              end;
       if missing(IdE_id)
         then put "," @;
         else put IdE_id @;
       if missing(Invoer_id)
         then put "," @;
         else put Invoer_id @;
       if missing(KR_Gevalideerd)
         then put "," @;
         else do;
                   attrLengte_2024144945627468982=length(KR_Gevalideerd);
                   aantalLF_2024144945627468982 = countc(KR_Gevalideerd,'0A'x);
                   maxPassend_2024144945627468982=1-1-aantalLF_2024144945627468982;
                   if attrLengte_2024144945627468982 > max(maxPassend_2024144945627468982,1000)
                     then passend_2024144945627468982 = substr(KR_Gevalideerd,1,maxPassend_2024144945627468982);
                     else passend_2024144945627468982 = KR_Gevalideerd;
                   passend_2024144945627468982 = tranwrd(passend_2024144945627468982,'9D'x,'D0'x);
                   put passend_2024144945627468982 ~ @;
              end;
       if missing(Kkr_Relatie_id)
         then put "," @;
         else do;
                   attrLengte_4018094934927046027=length(Kkr_Relatie_id);
                   aantalLF_4018094934927046027 = countc(Kkr_Relatie_id,'0A'x);
                   maxPassend_4018094934927046027=10-1-aantalLF_4018094934927046027;
                   if attrLengte_4018094934927046027 > max(maxPassend_4018094934927046027,1000)
                     then passend_4018094934927046027 = substr(Kkr_Relatie_id,1,maxPassend_4018094934927046027);
                     else passend_4018094934927046027 = Kkr_Relatie_id;
                   passend_4018094934927046027 = tranwrd(passend_4018094934927046027,'9D'x,'D0'x);
                   put passend_4018094934927046027 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(mutatie_user)
         then put "," @;
         else do;
                   attrLengte_5480117132585686229=length(mutatie_user);
                   aantalLF_5480117132585686229 = countc(mutatie_user,'0A'x);
                   maxPassend_5480117132585686229=30-1-aantalLF_5480117132585686229;
                   if attrLengte_5480117132585686229 > max(maxPassend_5480117132585686229,1000)
                     then passend_5480117132585686229 = substr(mutatie_user,1,maxPassend_5480117132585686229);
                     else passend_5480117132585686229 = mutatie_user;
                   passend_5480117132585686229 = tranwrd(passend_5480117132585686229,'9D'x,'D0'x);
                   put passend_5480117132585686229 ~ @;
              end;
       if missing(Rbm_org)
         then put "," @;
         else do;
                   attrLengte_6138613567655976457=length(Rbm_org);
                   aantalLF_6138613567655976457 = countc(Rbm_org,'0A'x);
                   maxPassend_6138613567655976457=1-1-aantalLF_6138613567655976457;
                   if attrLengte_6138613567655976457 > max(maxPassend_6138613567655976457,1000)
                     then passend_6138613567655976457 = substr(Rbm_org,1,maxPassend_6138613567655976457);
                     else passend_6138613567655976457 = Rbm_org;
                   passend_6138613567655976457 = tranwrd(passend_6138613567655976457,'9D'x,'D0'x);
                   put passend_6138613567655976457 ~ @;
              end;
       if missing(Rbm_persoon)
         then put "," @;
         else do;
                   attrLengte_6424765951754053919=length(Rbm_persoon);
                   aantalLF_6424765951754053919 = countc(Rbm_persoon,'0A'x);
                   maxPassend_6424765951754053919=1-1-aantalLF_6424765951754053919;
                   if attrLengte_6424765951754053919 > max(maxPassend_6424765951754053919,1000)
                     then passend_6424765951754053919 = substr(Rbm_persoon,1,maxPassend_6424765951754053919);
                     else passend_6424765951754053919 = Rbm_persoon;
                   passend_6424765951754053919 = tranwrd(passend_6424765951754053919,'9D'x,'D0'x);
                   put passend_6424765951754053919 ~ @;
              end;
       if missing(Ref_kkr_relatie_id)
         then put "," @;
         else do;
                   attrLengte_4695035597672197297=length(Ref_kkr_relatie_id);
                   aantalLF_4695035597672197297 = countc(Ref_kkr_relatie_id,'0A'x);
                   maxPassend_4695035597672197297=10-1-aantalLF_4695035597672197297;
                   if attrLengte_4695035597672197297 > max(maxPassend_4695035597672197297,1000)
                     then passend_4695035597672197297 = substr(Ref_kkr_relatie_id,1,maxPassend_4695035597672197297);
                     else passend_4695035597672197297 = Ref_kkr_relatie_id;
                   passend_4695035597672197297 = tranwrd(passend_4695035597672197297,'9D'x,'D0'x);
                   put passend_4695035597672197297 ~ @;
              end;
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(Relatietype)
         then put "," @;
         else do;
                   attrLengte_4792766152801411253=length(Relatietype);
                   aantalLF_4792766152801411253 = countc(Relatietype,'0A'x);
                   maxPassend_4792766152801411253=1-1-aantalLF_4792766152801411253;
                   if attrLengte_4792766152801411253 > max(maxPassend_4792766152801411253,1000)
                     then passend_4792766152801411253 = substr(Relatietype,1,maxPassend_4792766152801411253);
                     else passend_4792766152801411253 = Relatietype;
                   passend_4792766152801411253 = tranwrd(passend_4792766152801411253,'9D'x,'D0'x);
                   put passend_4792766152801411253 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RBM_SBI_ORG AS
   SELECT t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Hoofdactiviteit,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Rel_id,
          t1.Sbi_cd
     FROM DATAQASG.RBM_SBI_ORG_TCMG t1;
QUIT;

data MIGRATIE.BAS_RBM_SBI_ORG;
  set MIGRATIE.BAS_RBM_SBI_ORG;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RBM_SBI_ORG.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Hoofdactiviteit" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Rel_id" 
       ','
          "Sbi_cd" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RBM_SBI_ORG   end=EFIEOD; 
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Hoofdactiviteit  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Rel_id best12. ;
       format Sbi_cd best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Hoofdactiviteit)
         then put "," @;
         else do;
                   attrLengte_4211185628616237269=length(Hoofdactiviteit);
                   aantalLF_4211185628616237269 = countc(Hoofdactiviteit,'0A'x);
                   maxPassend_4211185628616237269=1-1-aantalLF_4211185628616237269;
                   if attrLengte_4211185628616237269 > max(maxPassend_4211185628616237269,1000)
                     then passend_4211185628616237269 = substr(Hoofdactiviteit,1,maxPassend_4211185628616237269);
                     else passend_4211185628616237269 = Hoofdactiviteit;
                   passend_4211185628616237269 = tranwrd(passend_4211185628616237269,'9D'x,'D0'x);
                   put passend_4211185628616237269 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(Sbi_cd)
         then put "," @;
         else put Sbi_cd @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RBM_VESTIGING AS
   SELECT t1.Actief,
          t1.Auth_id,
          t1.Bik_cd,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Hoofd_neven,
          t1.Kkr_conversie,
          t1.Kkr_gevalideerd,
          t1.Kkr_gevonden,
          t1.Kkr_relatie_id,
          t1.Kkr_verversingsdatum FORMAT=B8601DT19. AS Kkr_verversingsdatum,
          t1.KvK_volgnr,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Ref_Kkr_relatie_id,
          t1.Rel_id,
          t1.Vest_naam,
          t1.Vestigings_nummer,
          t1.Vst_volgnr
     FROM DATAQASG.RBM_VESTIGING_TCMG t1;
QUIT;

data MIGRATIE.BAS_RBM_VESTIGING;
  set MIGRATIE.BAS_RBM_VESTIGING;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RBM_VESTIGING.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Actief" 
       ','
          "Auth_id" 
       ','
          "Bik_cd" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Hoofd_neven" 
       ','
          "Kkr_conversie" 
       ','
          "Kkr_gevalideerd" 
       ','
          "Kkr_gevonden" 
       ','
          "Kkr_relatie_id" 
       ','
          "Kkr_verversingsdatum" 
       ','
          "KvK_volgnr" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Ref_Kkr_relatie_id" 
       ','
          "Rel_id" 
       ','
          "Vest_naam" 
       ','
          "Vestigings_nummer" 
       ','
          "Vst_volgnr" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RBM_VESTIGING   end=EFIEOD; 
       format Actief  ;
       format Auth_id best12. ;
       format Bik_cd  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Hoofd_neven  ;
       format Kkr_conversie  ;
       format Kkr_gevalideerd  ;
       format Kkr_gevonden  ;
       format Kkr_relatie_id  ;
       format Kkr_verversingsdatum B8601DT19. ;
       format KvK_volgnr  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Ref_Kkr_relatie_id  ;
       format Rel_id best12. ;
       format Vest_naam  ;
       format Vestigings_nummer  ;
       format Vst_volgnr best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Actief)
         then put "," @;
         else do;
                   attrLengte_9040032925271508250=length(Actief);
                   aantalLF_9040032925271508250 = countc(Actief,'0A'x);
                   maxPassend_9040032925271508250=1-1-aantalLF_9040032925271508250;
                   if attrLengte_9040032925271508250 > max(maxPassend_9040032925271508250,1000)
                     then passend_9040032925271508250 = substr(Actief,1,maxPassend_9040032925271508250);
                     else passend_9040032925271508250 = Actief;
                   passend_9040032925271508250 = tranwrd(passend_9040032925271508250,'9D'x,'D0'x);
                   put passend_9040032925271508250 ~ @;
              end;
       if missing(Auth_id)
         then put "," @;
         else put Auth_id @;
       if missing(Bik_cd)
         then put "," @;
         else do;
                   attrLengte_5799857564552390002=length(Bik_cd);
                   aantalLF_5799857564552390002 = countc(Bik_cd,'0A'x);
                   maxPassend_5799857564552390002=9-1-aantalLF_5799857564552390002;
                   if attrLengte_5799857564552390002 > max(maxPassend_5799857564552390002,1000)
                     then passend_5799857564552390002 = substr(Bik_cd,1,maxPassend_5799857564552390002);
                     else passend_5799857564552390002 = Bik_cd;
                   passend_5799857564552390002 = tranwrd(passend_5799857564552390002,'9D'x,'D0'x);
                   put passend_5799857564552390002 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Hoofd_neven)
         then put "," @;
         else do;
                   attrLengte_2098055832942848170=length(Hoofd_neven);
                   aantalLF_2098055832942848170 = countc(Hoofd_neven,'0A'x);
                   maxPassend_2098055832942848170=1-1-aantalLF_2098055832942848170;
                   if attrLengte_2098055832942848170 > max(maxPassend_2098055832942848170,1000)
                     then passend_2098055832942848170 = substr(Hoofd_neven,1,maxPassend_2098055832942848170);
                     else passend_2098055832942848170 = Hoofd_neven;
                   passend_2098055832942848170 = tranwrd(passend_2098055832942848170,'9D'x,'D0'x);
                   put passend_2098055832942848170 ~ @;
              end;
       if missing(Kkr_conversie)
         then put "," @;
         else do;
                   attrLengte_4966042720380832294=length(Kkr_conversie);
                   aantalLF_4966042720380832294 = countc(Kkr_conversie,'0A'x);
                   maxPassend_4966042720380832294=1-1-aantalLF_4966042720380832294;
                   if attrLengte_4966042720380832294 > max(maxPassend_4966042720380832294,1000)
                     then passend_4966042720380832294 = substr(Kkr_conversie,1,maxPassend_4966042720380832294);
                     else passend_4966042720380832294 = Kkr_conversie;
                   passend_4966042720380832294 = tranwrd(passend_4966042720380832294,'9D'x,'D0'x);
                   put passend_4966042720380832294 ~ @;
              end;
       if missing(Kkr_gevalideerd)
         then put "," @;
         else do;
                   attrLengte_4275823587113271514=length(Kkr_gevalideerd);
                   aantalLF_4275823587113271514 = countc(Kkr_gevalideerd,'0A'x);
                   maxPassend_4275823587113271514=1-1-aantalLF_4275823587113271514;
                   if attrLengte_4275823587113271514 > max(maxPassend_4275823587113271514,1000)
                     then passend_4275823587113271514 = substr(Kkr_gevalideerd,1,maxPassend_4275823587113271514);
                     else passend_4275823587113271514 = Kkr_gevalideerd;
                   passend_4275823587113271514 = tranwrd(passend_4275823587113271514,'9D'x,'D0'x);
                   put passend_4275823587113271514 ~ @;
              end;
       if missing(Kkr_gevonden)
         then put "," @;
         else do;
                   attrLengte_4735801167311526277=length(Kkr_gevonden);
                   aantalLF_4735801167311526277 = countc(Kkr_gevonden,'0A'x);
                   maxPassend_4735801167311526277=1-1-aantalLF_4735801167311526277;
                   if attrLengte_4735801167311526277 > max(maxPassend_4735801167311526277,1000)
                     then passend_4735801167311526277 = substr(Kkr_gevonden,1,maxPassend_4735801167311526277);
                     else passend_4735801167311526277 = Kkr_gevonden;
                   passend_4735801167311526277 = tranwrd(passend_4735801167311526277,'9D'x,'D0'x);
                   put passend_4735801167311526277 ~ @;
              end;
       if missing(Kkr_relatie_id)
         then put "," @;
         else do;
                   attrLengte_5909357663416120533=length(Kkr_relatie_id);
                   aantalLF_5909357663416120533 = countc(Kkr_relatie_id,'0A'x);
                   maxPassend_5909357663416120533=36-1-aantalLF_5909357663416120533;
                   if attrLengte_5909357663416120533 > max(maxPassend_5909357663416120533,1000)
                     then passend_5909357663416120533 = substr(Kkr_relatie_id,1,maxPassend_5909357663416120533);
                     else passend_5909357663416120533 = Kkr_relatie_id;
                   passend_5909357663416120533 = tranwrd(passend_5909357663416120533,'9D'x,'D0'x);
                   put passend_5909357663416120533 ~ @;
              end;
       if missing(Kkr_verversingsdatum)
         then put "," @;
         else put Kkr_verversingsdatum @;
       if missing(KvK_volgnr)
         then put "," @;
         else do;
                   attrLengte_6725546751009021785=length(KvK_volgnr);
                   aantalLF_6725546751009021785 = countc(KvK_volgnr,'0A'x);
                   maxPassend_6725546751009021785=4-1-aantalLF_6725546751009021785;
                   if attrLengte_6725546751009021785 > max(maxPassend_6725546751009021785,1000)
                     then passend_6725546751009021785 = substr(KvK_volgnr,1,maxPassend_6725546751009021785);
                     else passend_6725546751009021785 = KvK_volgnr;
                   passend_6725546751009021785 = tranwrd(passend_6725546751009021785,'9D'x,'D0'x);
                   put passend_6725546751009021785 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Ref_Kkr_relatie_id)
         then put "," @;
         else do;
                   attrLengte_5930909227385726767=length(Ref_Kkr_relatie_id);
                   aantalLF_5930909227385726767 = countc(Ref_Kkr_relatie_id,'0A'x);
                   maxPassend_5930909227385726767=36-1-aantalLF_5930909227385726767;
                   if attrLengte_5930909227385726767 > max(maxPassend_5930909227385726767,1000)
                     then passend_5930909227385726767 = substr(Ref_Kkr_relatie_id,1,maxPassend_5930909227385726767);
                     else passend_5930909227385726767 = Ref_Kkr_relatie_id;
                   passend_5930909227385726767 = tranwrd(passend_5930909227385726767,'9D'x,'D0'x);
                   put passend_5930909227385726767 ~ @;
              end;
       if missing(Rel_id)
         then put "," @;
         else put Rel_id @;
       if missing(Vest_naam)
         then put "," @;
         else do;
                   attrLengte_153734467788040877=length(Vest_naam);
                   aantalLF_153734467788040877 = countc(Vest_naam,'0A'x);
                   maxPassend_153734467788040877=625-1-aantalLF_153734467788040877;
                   if attrLengte_153734467788040877 > max(maxPassend_153734467788040877,1000)
                     then passend_153734467788040877 = substr(Vest_naam,1,maxPassend_153734467788040877);
                     else passend_153734467788040877 = Vest_naam;
                   passend_153734467788040877 = tranwrd(passend_153734467788040877,'9D'x,'D0'x);
                   put passend_153734467788040877 ~ @;
              end;
       if missing(Vestigings_nummer)
         then put "," @;
         else do;
                   attrLengte_8533057996254239991=length(Vestigings_nummer);
                   aantalLF_8533057996254239991 = countc(Vestigings_nummer,'0A'x);
                   maxPassend_8533057996254239991=12-1-aantalLF_8533057996254239991;
                   if attrLengte_8533057996254239991 > max(maxPassend_8533057996254239991,1000)
                     then passend_8533057996254239991 = substr(Vestigings_nummer,1,maxPassend_8533057996254239991);
                     else passend_8533057996254239991 = Vestigings_nummer;
                   passend_8533057996254239991 = tranwrd(passend_8533057996254239991,'9D'x,'D0'x);
                   put passend_8533057996254239991 ~ @;
              end;
       if missing(Vst_volgnr)
         then put "," @;
         else put Vst_volgnr @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RDM_BUDGETONDERVERDELING AS
   SELECT t1.Bgt_cd,
          t1.Budget,
          t1.Budget_uitputting,
          t1.Correctie_budget,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Jaar,
          t1.Koppelen_jn,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Ovk_nr,
          t1.Reg_id,
          t1.Rpe_datum_van FORMAT=B8601DT19. AS Rpe_datum_van,
          t1.Rpt_nr,
          t1.Verdeeld_budget,
          t1.Vrij_budget
     FROM DATAQASG.RDM_BUDGETONDERVERDELING_TCMG t1;
QUIT;

data MIGRATIE.BAS_RDM_BUDGETONDERVERDELING;
  set MIGRATIE.BAS_RDM_BUDGETONDERVERDELING;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RDM_BUDGETONDERVERDELING.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Bgt_cd" 
       ','
          "Budget" 
       ','
          "Budget_uitputting" 
       ','
          "Correctie_budget" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Jaar" 
       ','
          "Koppelen_jn" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Ovk_nr" 
       ','
          "Reg_id" 
       ','
          "Rpe_datum_van" 
       ','
          "Rpt_nr" 
       ','
          "Verdeeld_budget" 
       ','
          "Vrij_budget" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RDM_BUDGETONDERVERDELING   end=EFIEOD; 
       format Bgt_cd  ;
       format Budget best12. ;
       format Budget_uitputting best12. ;
       format Correctie_budget best12. ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Jaar best12. ;
       format Koppelen_jn  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Ovk_nr  ;
       format Reg_id best12. ;
       format Rpe_datum_van B8601DT19. ;
       format Rpt_nr best12. ;
       format Verdeeld_budget best12. ;
       format Vrij_budget best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Bgt_cd)
         then put "," @;
         else do;
                   attrLengte_7370879967810917187=length(Bgt_cd);
                   aantalLF_7370879967810917187 = countc(Bgt_cd,'0A'x);
                   maxPassend_7370879967810917187=1-1-aantalLF_7370879967810917187;
                   if attrLengte_7370879967810917187 > max(maxPassend_7370879967810917187,1000)
                     then passend_7370879967810917187 = substr(Bgt_cd,1,maxPassend_7370879967810917187);
                     else passend_7370879967810917187 = Bgt_cd;
                   passend_7370879967810917187 = tranwrd(passend_7370879967810917187,'9D'x,'D0'x);
                   put passend_7370879967810917187 ~ @;
              end;
       if missing(Budget)
         then put "," @;
         else put Budget @;
       if missing(Budget_uitputting)
         then put "," @;
         else put Budget_uitputting @;
       if missing(Correctie_budget)
         then put "," @;
         else put Correctie_budget @;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Jaar)
         then put "," @;
         else put Jaar @;
       if missing(Koppelen_jn)
         then put "," @;
         else do;
                   attrLengte_8010221947609816734=length(Koppelen_jn);
                   aantalLF_8010221947609816734 = countc(Koppelen_jn,'0A'x);
                   maxPassend_8010221947609816734=1-1-aantalLF_8010221947609816734;
                   if attrLengte_8010221947609816734 > max(maxPassend_8010221947609816734,1000)
                     then passend_8010221947609816734 = substr(Koppelen_jn,1,maxPassend_8010221947609816734);
                     else passend_8010221947609816734 = Koppelen_jn;
                   passend_8010221947609816734 = tranwrd(passend_8010221947609816734,'9D'x,'D0'x);
                   put passend_8010221947609816734 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Ovk_nr)
         then put "," @;
         else do;
                   attrLengte_7575938694744162813=length(Ovk_nr);
                   aantalLF_7575938694744162813 = countc(Ovk_nr,'0A'x);
                   maxPassend_7575938694744162813=20-1-aantalLF_7575938694744162813;
                   if attrLengte_7575938694744162813 > max(maxPassend_7575938694744162813,1000)
                     then passend_7575938694744162813 = substr(Ovk_nr,1,maxPassend_7575938694744162813);
                     else passend_7575938694744162813 = Ovk_nr;
                   passend_7575938694744162813 = tranwrd(passend_7575938694744162813,'9D'x,'D0'x);
                   put passend_7575938694744162813 ~ @;
              end;
       if missing(Reg_id)
         then put "," @;
         else put Reg_id @;
       if missing(Rpe_datum_van)
         then put "," @;
         else put Rpe_datum_van @;
       if missing(Rpt_nr)
         then put "," @;
         else put Rpt_nr @;
       if missing(Verdeeld_budget)
         then put "," @;
         else put Verdeeld_budget @;
       if missing(Vrij_budget)
         then put "," @;
         else put Vrij_budget @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RDM_CLASSIFICATIE AS
   SELECT t1.Prg_id,
          t1.Class_cd,
          t1.Class_oms,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat
     FROM DATAQASG.RDM_CLASSIFICATIE_TCMG t1;
QUIT;

data MIGRATIE.BAS_RDM_CLASSIFICATIE;
  set MIGRATIE.BAS_RDM_CLASSIFICATIE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RDM_CLASSIFICATIE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Prg_id" 
       ','
          "Class_cd" 
       ','
          "Class_oms" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RDM_CLASSIFICATIE   end=EFIEOD; 
       format Prg_id best12. ;
       format Class_cd  ;
       format Class_oms  ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Prg_id)
         then put "," @;
         else put Prg_id @;
       if missing(Class_cd)
         then put "," @;
         else do;
                   attrLengte_3670722283148550818=length(Class_cd);
                   aantalLF_3670722283148550818 = countc(Class_cd,'0A'x);
                   maxPassend_3670722283148550818=10-1-aantalLF_3670722283148550818;
                   if attrLengte_3670722283148550818 > max(maxPassend_3670722283148550818,1000)
                     then passend_3670722283148550818 = substr(Class_cd,1,maxPassend_3670722283148550818);
                     else passend_3670722283148550818 = Class_cd;
                   passend_3670722283148550818 = tranwrd(passend_3670722283148550818,'9D'x,'D0'x);
                   put passend_3670722283148550818 ~ @;
              end;
       if missing(Class_oms)
         then put "," @;
         else do;
                   attrLengte_8096349315438384613=length(Class_oms);
                   aantalLF_8096349315438384613 = countc(Class_oms,'0A'x);
                   maxPassend_8096349315438384613=100-1-aantalLF_8096349315438384613;
                   if attrLengte_8096349315438384613 > max(maxPassend_8096349315438384613,1000)
                     then passend_8096349315438384613 = substr(Class_oms,1,maxPassend_8096349315438384613);
                     else passend_8096349315438384613 = Class_oms;
                   passend_8096349315438384613 = tranwrd(passend_8096349315438384613,'9D'x,'D0'x);
                   put passend_8096349315438384613 ~ @;
              end;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RDM_JAARBUDGET AS
   SELECT t1.Afgesloten,
          t1.Bgt_cd,
          t1.Budget_uitputting,
          t1.Correctie_budget,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Datum_van FORMAT=B8601DT19. AS Datum_van,
          t1.Jaar,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Ovk_nr,
          t1.Rpt_nr,
          t1.Tot_budget,
          t1.Verdeeld_budget,
          t1.Verdeeld_jn,
          t1.Vrij_budget
     FROM DATAQASG.RDM_JAARBUDGET_TCMG t1;
QUIT;

data MIGRATIE.BAS_RDM_JAARBUDGET;
  set MIGRATIE.BAS_RDM_JAARBUDGET;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RDM_JAARBUDGET.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Afgesloten" 
       ','
          "Bgt_cd" 
       ','
          "Budget_uitputting" 
       ','
          "Correctie_budget" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Datum_van" 
       ','
          "Jaar" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Ovk_nr" 
       ','
          "Rpt_nr" 
       ','
          "Tot_budget" 
       ','
          "Verdeeld_budget" 
       ','
          "Verdeeld_jn" 
       ','
          "Vrij_budget" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RDM_JAARBUDGET   end=EFIEOD; 
       format Afgesloten  ;
       format Bgt_cd  ;
       format Budget_uitputting best12. ;
       format Correctie_budget best12. ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Datum_van B8601DT19. ;
       format Jaar best12. ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Ovk_nr  ;
       format Rpt_nr best12. ;
       format Tot_budget best12. ;
       format Verdeeld_budget best12. ;
       format Verdeeld_jn  ;
       format Vrij_budget best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Afgesloten)
         then put "," @;
         else do;
                   attrLengte_8640113711822652606=length(Afgesloten);
                   aantalLF_8640113711822652606 = countc(Afgesloten,'0A'x);
                   maxPassend_8640113711822652606=1-1-aantalLF_8640113711822652606;
                   if attrLengte_8640113711822652606 > max(maxPassend_8640113711822652606,1000)
                     then passend_8640113711822652606 = substr(Afgesloten,1,maxPassend_8640113711822652606);
                     else passend_8640113711822652606 = Afgesloten;
                   passend_8640113711822652606 = tranwrd(passend_8640113711822652606,'9D'x,'D0'x);
                   put passend_8640113711822652606 ~ @;
              end;
       if missing(Bgt_cd)
         then put "," @;
         else do;
                   attrLengte_7370879967810917187=length(Bgt_cd);
                   aantalLF_7370879967810917187 = countc(Bgt_cd,'0A'x);
                   maxPassend_7370879967810917187=1-1-aantalLF_7370879967810917187;
                   if attrLengte_7370879967810917187 > max(maxPassend_7370879967810917187,1000)
                     then passend_7370879967810917187 = substr(Bgt_cd,1,maxPassend_7370879967810917187);
                     else passend_7370879967810917187 = Bgt_cd;
                   passend_7370879967810917187 = tranwrd(passend_7370879967810917187,'9D'x,'D0'x);
                   put passend_7370879967810917187 ~ @;
              end;
       if missing(Budget_uitputting)
         then put "," @;
         else put Budget_uitputting @;
       if missing(Correctie_budget)
         then put "," @;
         else put Correctie_budget @;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Datum_van)
         then put "," @;
         else put Datum_van @;
       if missing(Jaar)
         then put "," @;
         else put Jaar @;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Ovk_nr)
         then put "," @;
         else do;
                   attrLengte_7575938694744162813=length(Ovk_nr);
                   aantalLF_7575938694744162813 = countc(Ovk_nr,'0A'x);
                   maxPassend_7575938694744162813=20-1-aantalLF_7575938694744162813;
                   if attrLengte_7575938694744162813 > max(maxPassend_7575938694744162813,1000)
                     then passend_7575938694744162813 = substr(Ovk_nr,1,maxPassend_7575938694744162813);
                     else passend_7575938694744162813 = Ovk_nr;
                   passend_7575938694744162813 = tranwrd(passend_7575938694744162813,'9D'x,'D0'x);
                   put passend_7575938694744162813 ~ @;
              end;
       if missing(Rpt_nr)
         then put "," @;
         else put Rpt_nr @;
       if missing(Tot_budget)
         then put "," @;
         else put Tot_budget @;
       if missing(Verdeeld_budget)
         then put "," @;
         else put Verdeeld_budget @;
       if missing(Verdeeld_jn)
         then put "," @;
         else do;
                   attrLengte_5019175436802110303=length(Verdeeld_jn);
                   aantalLF_5019175436802110303 = countc(Verdeeld_jn,'0A'x);
                   maxPassend_5019175436802110303=1-1-aantalLF_5019175436802110303;
                   if attrLengte_5019175436802110303 > max(maxPassend_5019175436802110303,1000)
                     then passend_5019175436802110303 = substr(Verdeeld_jn,1,maxPassend_5019175436802110303);
                     else passend_5019175436802110303 = Verdeeld_jn;
                   passend_5019175436802110303 = tranwrd(passend_5019175436802110303,'9D'x,'D0'x);
                   put passend_5019175436802110303 ~ @;
              end;
       if missing(Vrij_budget)
         then put "," @;
         else put Vrij_budget @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RDM_MANDAAT AS
   SELECT t1.Mdt_id,
          t1.Middelen_type,
          t1.Mandaat_srt,
          t1.Max_bedrag,
          t1.Rdm_mandaat_rol,
          t1.Rdm_mandaat_mdw,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mdw_id,
          t1.Reg_id,
          t1.Rol_cd
     FROM DATAQASG.RDM_MANDAAT_TCMG t1;
QUIT;

data MIGRATIE.BAS_RDM_MANDAAT;
  set MIGRATIE.BAS_RDM_MANDAAT;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RDM_MANDAAT.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Mdt_id" 
       ','
          "Middelen_type" 
       ','
          "Mandaat_srt" 
       ','
          "Max_bedrag" 
       ','
          "Rdm_mandaat_rol" 
       ','
          "Rdm_mandaat_mdw" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mdw_id" 
       ','
          "Reg_id" 
       ','
          "Rol_cd" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RDM_MANDAAT   end=EFIEOD; 
       format Mdt_id best12. ;
       format Middelen_type  ;
       format Mandaat_srt  ;
       format Max_bedrag best12. ;
       format Rdm_mandaat_rol  ;
       format Rdm_mandaat_mdw  ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mdw_id best12. ;
       format Reg_id best12. ;
       format Rol_cd  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Mdt_id)
         then put "," @;
         else put Mdt_id @;
       if missing(Middelen_type)
         then put "," @;
         else do;
                   attrLengte_8082276134056304352=length(Middelen_type);
                   aantalLF_8082276134056304352 = countc(Middelen_type,'0A'x);
                   maxPassend_8082276134056304352=2-1-aantalLF_8082276134056304352;
                   if attrLengte_8082276134056304352 > max(maxPassend_8082276134056304352,1000)
                     then passend_8082276134056304352 = substr(Middelen_type,1,maxPassend_8082276134056304352);
                     else passend_8082276134056304352 = Middelen_type;
                   passend_8082276134056304352 = tranwrd(passend_8082276134056304352,'9D'x,'D0'x);
                   put passend_8082276134056304352 ~ @;
              end;
       if missing(Mandaat_srt)
         then put "," @;
         else do;
                   attrLengte_45581615089552039=length(Mandaat_srt);
                   aantalLF_45581615089552039 = countc(Mandaat_srt,'0A'x);
                   maxPassend_45581615089552039=2-1-aantalLF_45581615089552039;
                   if attrLengte_45581615089552039 > max(maxPassend_45581615089552039,1000)
                     then passend_45581615089552039 = substr(Mandaat_srt,1,maxPassend_45581615089552039);
                     else passend_45581615089552039 = Mandaat_srt;
                   passend_45581615089552039 = tranwrd(passend_45581615089552039,'9D'x,'D0'x);
                   put passend_45581615089552039 ~ @;
              end;
       if missing(Max_bedrag)
         then put "," @;
         else put Max_bedrag @;
       if missing(Rdm_mandaat_rol)
         then put "," @;
         else do;
                   attrLengte_6267154196586753525=length(Rdm_mandaat_rol);
                   aantalLF_6267154196586753525 = countc(Rdm_mandaat_rol,'0A'x);
                   maxPassend_6267154196586753525=1-1-aantalLF_6267154196586753525;
                   if attrLengte_6267154196586753525 > max(maxPassend_6267154196586753525,1000)
                     then passend_6267154196586753525 = substr(Rdm_mandaat_rol,1,maxPassend_6267154196586753525);
                     else passend_6267154196586753525 = Rdm_mandaat_rol;
                   passend_6267154196586753525 = tranwrd(passend_6267154196586753525,'9D'x,'D0'x);
                   put passend_6267154196586753525 ~ @;
              end;
       if missing(Rdm_mandaat_mdw)
         then put "," @;
         else do;
                   attrLengte_3884692758649452826=length(Rdm_mandaat_mdw);
                   aantalLF_3884692758649452826 = countc(Rdm_mandaat_mdw,'0A'x);
                   maxPassend_3884692758649452826=1-1-aantalLF_3884692758649452826;
                   if attrLengte_3884692758649452826 > max(maxPassend_3884692758649452826,1000)
                     then passend_3884692758649452826 = substr(Rdm_mandaat_mdw,1,maxPassend_3884692758649452826);
                     else passend_3884692758649452826 = Rdm_mandaat_mdw;
                   passend_3884692758649452826 = tranwrd(passend_3884692758649452826,'9D'x,'D0'x);
                   put passend_3884692758649452826 ~ @;
              end;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mdw_id)
         then put "," @;
         else put Mdw_id @;
       if missing(Reg_id)
         then put "," @;
         else put Reg_id @;
       if missing(Rol_cd)
         then put "," @;
         else do;
                   attrLengte_3864349925788261245=length(Rol_cd);
                   aantalLF_3864349925788261245 = countc(Rol_cd,'0A'x);
                   maxPassend_3864349925788261245=3-1-aantalLF_3864349925788261245;
                   if attrLengte_3864349925788261245 > max(maxPassend_3864349925788261245,1000)
                     then passend_3864349925788261245 = substr(Rol_cd,1,maxPassend_3864349925788261245);
                     else passend_3864349925788261245 = Rol_cd;
                   passend_3864349925788261245 = tranwrd(passend_3864349925788261245,'9D'x,'D0'x);
                   put passend_3864349925788261245 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RDM_OVEREENKOMST_DOCUMENT AS
   SELECT t1.Ovk_nr,
          t1.Doc_naam,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Bgt_cd,
          t1.Rpt_nr,
          t1.Datum_van FORMAT=B8601DT19. AS Datum_van
     FROM DATAQASG.RDM_OVEREENKOMST_DOCUMENT_TCMG t1;
QUIT;

data MIGRATIE.BAS_RDM_OVEREENKOMST_DOCUMENT;
  set MIGRATIE.BAS_RDM_OVEREENKOMST_DOCUMENT;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RDM_OVEREENKOMST_DOCUMENT.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Ovk_nr" 
       ','
          "Doc_naam" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Bgt_cd" 
       ','
          "Rpt_nr" 
       ','
          "Datum_van" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RDM_OVEREENKOMST_DOCUMENT   end=EFIEOD; 
       format Ovk_nr  ;
       format Doc_naam  ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Bgt_cd  ;
       format Rpt_nr best12. ;
       format Datum_van B8601DT19. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Ovk_nr)
         then put "," @;
         else do;
                   attrLengte_7575938694744162813=length(Ovk_nr);
                   aantalLF_7575938694744162813 = countc(Ovk_nr,'0A'x);
                   maxPassend_7575938694744162813=20-1-aantalLF_7575938694744162813;
                   if attrLengte_7575938694744162813 > max(maxPassend_7575938694744162813,1000)
                     then passend_7575938694744162813 = substr(Ovk_nr,1,maxPassend_7575938694744162813);
                     else passend_7575938694744162813 = Ovk_nr;
                   passend_7575938694744162813 = tranwrd(passend_7575938694744162813,'9D'x,'D0'x);
                   put passend_7575938694744162813 ~ @;
              end;
       if missing(Doc_naam)
         then put "," @;
         else do;
                   attrLengte_4570953002792249656=length(Doc_naam);
                   aantalLF_4570953002792249656 = countc(Doc_naam,'0A'x);
                   maxPassend_4570953002792249656=255-1-aantalLF_4570953002792249656;
                   if attrLengte_4570953002792249656 > max(maxPassend_4570953002792249656,1000)
                     then passend_4570953002792249656 = substr(Doc_naam,1,maxPassend_4570953002792249656);
                     else passend_4570953002792249656 = Doc_naam;
                   passend_4570953002792249656 = tranwrd(passend_4570953002792249656,'9D'x,'D0'x);
                   put passend_4570953002792249656 ~ @;
              end;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Bgt_cd)
         then put "," @;
         else do;
                   attrLengte_7370879967810917187=length(Bgt_cd);
                   aantalLF_7370879967810917187 = countc(Bgt_cd,'0A'x);
                   maxPassend_7370879967810917187=1-1-aantalLF_7370879967810917187;
                   if attrLengte_7370879967810917187 > max(maxPassend_7370879967810917187,1000)
                     then passend_7370879967810917187 = substr(Bgt_cd,1,maxPassend_7370879967810917187);
                     else passend_7370879967810917187 = Bgt_cd;
                   passend_7370879967810917187 = tranwrd(passend_7370879967810917187,'9D'x,'D0'x);
                   put passend_7370879967810917187 ~ @;
              end;
       if missing(Rpt_nr)
         then put "," @;
         else put Rpt_nr @;
       if missing(Datum_van)
         then put "," @;
         else put Datum_van @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RDM_PERIODE AS
   SELECT t1.Ovk_nr,
          t1.Rpt_nr,
          t1.Bgt_cd,
          t1.Datum_van FORMAT=B8601DT19. AS Datum_van,
          t1.Datum_tot FORMAT=B8601DT19. AS Datum_tot,
          t1.Kopieer_periode,
          t1.Auto_sap_jn,
          t1.Comm_rente_pct,
          t1.Beschik_datum FORMAT=B8601DT19. AS Beschik_datum,
          t1.Tot_budget,
          t1.Verdeeld_budget,
          t1.Omschrijving,
          t1.Prg_cd,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Bdg_verdelen_100_pct_dp,
          t1.Bdg_verdelen_100_pct_th,
          t1.Iban,
          t1.Bic,
          t1.Imvb,
          t1.Correctie_code,
          t1.Auto_oracle,
          t1.Boeking,
          t1.Fin_soort,
          t1.Kenmerk_lijn,
          t1.Aflossing
     FROM DATAQASG.RDM_PERIODE_TCMG t1;
QUIT;

data MIGRATIE.BAS_RDM_PERIODE;
  set MIGRATIE.BAS_RDM_PERIODE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RDM_PERIODE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Ovk_nr" 
       ','
          "Rpt_nr" 
       ','
          "Bgt_cd" 
       ','
          "Datum_van" 
       ','
          "Datum_tot" 
       ','
          "Kopieer_periode" 
       ','
          "Auto_sap_jn" 
       ','
          "Comm_rente_pct" 
       ','
          "Beschik_datum" 
       ','
          "Tot_budget" 
       ','
          "Verdeeld_budget" 
       ','
          "Omschrijving" 
       ','
          "Prg_cd" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Bdg_verdelen_100_pct_dp" 
       ','
          "Bdg_verdelen_100_pct_th" 
       ','
          "Iban" 
       ','
          "Bic" 
       ','
          "Imvb" 
       ','
          "Correctie_code" 
       ','
          "Auto_oracle" 
       ','
          "Boeking" 
       ','
          "Fin_soort" 
       ','
          "Kenmerk_lijn" 
       ','
          "Aflossing" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RDM_PERIODE   end=EFIEOD; 
       format Ovk_nr  ;
       format Rpt_nr best12. ;
       format Bgt_cd  ;
       format Datum_van B8601DT19. ;
       format Datum_tot B8601DT19. ;
       format Kopieer_periode  ;
       format Auto_sap_jn  ;
       format Comm_rente_pct best12. ;
       format Beschik_datum B8601DT19. ;
       format Tot_budget best12. ;
       format Verdeeld_budget best12. ;
       format Omschrijving  ;
       format Prg_cd  ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Bdg_verdelen_100_pct_dp  ;
       format Bdg_verdelen_100_pct_th  ;
       format Iban  ;
       format Bic  ;
       format Imvb best12. ;
       format Correctie_code  ;
       format Auto_oracle  ;
       format Boeking  ;
       format Fin_soort  ;
       format Kenmerk_lijn  ;
       format Aflossing best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Ovk_nr)
         then put "," @;
         else do;
                   attrLengte_7575938694744162813=length(Ovk_nr);
                   aantalLF_7575938694744162813 = countc(Ovk_nr,'0A'x);
                   maxPassend_7575938694744162813=20-1-aantalLF_7575938694744162813;
                   if attrLengte_7575938694744162813 > max(maxPassend_7575938694744162813,1000)
                     then passend_7575938694744162813 = substr(Ovk_nr,1,maxPassend_7575938694744162813);
                     else passend_7575938694744162813 = Ovk_nr;
                   passend_7575938694744162813 = tranwrd(passend_7575938694744162813,'9D'x,'D0'x);
                   put passend_7575938694744162813 ~ @;
              end;
       if missing(Rpt_nr)
         then put "," @;
         else put Rpt_nr @;
       if missing(Bgt_cd)
         then put "," @;
         else do;
                   attrLengte_7370879967810917187=length(Bgt_cd);
                   aantalLF_7370879967810917187 = countc(Bgt_cd,'0A'x);
                   maxPassend_7370879967810917187=1-1-aantalLF_7370879967810917187;
                   if attrLengte_7370879967810917187 > max(maxPassend_7370879967810917187,1000)
                     then passend_7370879967810917187 = substr(Bgt_cd,1,maxPassend_7370879967810917187);
                     else passend_7370879967810917187 = Bgt_cd;
                   passend_7370879967810917187 = tranwrd(passend_7370879967810917187,'9D'x,'D0'x);
                   put passend_7370879967810917187 ~ @;
              end;
       if missing(Datum_van)
         then put "," @;
         else put Datum_van @;
       if missing(Datum_tot)
         then put "," @;
         else put Datum_tot @;
       if missing(Kopieer_periode)
         then put "," @;
         else do;
                   attrLengte_3124754035359486199=length(Kopieer_periode);
                   aantalLF_3124754035359486199 = countc(Kopieer_periode,'0A'x);
                   maxPassend_3124754035359486199=1-1-aantalLF_3124754035359486199;
                   if attrLengte_3124754035359486199 > max(maxPassend_3124754035359486199,1000)
                     then passend_3124754035359486199 = substr(Kopieer_periode,1,maxPassend_3124754035359486199);
                     else passend_3124754035359486199 = Kopieer_periode;
                   passend_3124754035359486199 = tranwrd(passend_3124754035359486199,'9D'x,'D0'x);
                   put passend_3124754035359486199 ~ @;
              end;
       if missing(Auto_sap_jn)
         then put "," @;
         else do;
                   attrLengte_3802303003931793618=length(Auto_sap_jn);
                   aantalLF_3802303003931793618 = countc(Auto_sap_jn,'0A'x);
                   maxPassend_3802303003931793618=1-1-aantalLF_3802303003931793618;
                   if attrLengte_3802303003931793618 > max(maxPassend_3802303003931793618,1000)
                     then passend_3802303003931793618 = substr(Auto_sap_jn,1,maxPassend_3802303003931793618);
                     else passend_3802303003931793618 = Auto_sap_jn;
                   passend_3802303003931793618 = tranwrd(passend_3802303003931793618,'9D'x,'D0'x);
                   put passend_3802303003931793618 ~ @;
              end;
       if missing(Comm_rente_pct)
         then put "," @;
         else put Comm_rente_pct @;
       if missing(Beschik_datum)
         then put "," @;
         else put Beschik_datum @;
       if missing(Tot_budget)
         then put "," @;
         else put Tot_budget @;
       if missing(Verdeeld_budget)
         then put "," @;
         else put Verdeeld_budget @;
       if missing(Omschrijving)
         then put "," @;
         else do;
                   attrLengte_2792940614022500175=length(Omschrijving);
                   aantalLF_2792940614022500175 = countc(Omschrijving,'0A'x);
                   maxPassend_2792940614022500175=60-1-aantalLF_2792940614022500175;
                   if attrLengte_2792940614022500175 > max(maxPassend_2792940614022500175,1000)
                     then passend_2792940614022500175 = substr(Omschrijving,1,maxPassend_2792940614022500175);
                     else passend_2792940614022500175 = Omschrijving;
                   passend_2792940614022500175 = tranwrd(passend_2792940614022500175,'9D'x,'D0'x);
                   put passend_2792940614022500175 ~ @;
              end;
       if missing(Prg_cd)
         then put "," @;
         else do;
                   attrLengte_9026548999479988017=length(Prg_cd);
                   aantalLF_9026548999479988017 = countc(Prg_cd,'0A'x);
                   maxPassend_9026548999479988017=12-1-aantalLF_9026548999479988017;
                   if attrLengte_9026548999479988017 > max(maxPassend_9026548999479988017,1000)
                     then passend_9026548999479988017 = substr(Prg_cd,1,maxPassend_9026548999479988017);
                     else passend_9026548999479988017 = Prg_cd;
                   passend_9026548999479988017 = tranwrd(passend_9026548999479988017,'9D'x,'D0'x);
                   put passend_9026548999479988017 ~ @;
              end;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Bdg_verdelen_100_pct_dp)
         then put "," @;
         else do;
                   attrLengte_3785071286235317929=length(Bdg_verdelen_100_pct_dp);
                   aantalLF_3785071286235317929 = countc(Bdg_verdelen_100_pct_dp,'0A'x);
                   maxPassend_3785071286235317929=1-1-aantalLF_3785071286235317929;
                   if attrLengte_3785071286235317929 > max(maxPassend_3785071286235317929,1000)
                     then passend_3785071286235317929 = substr(Bdg_verdelen_100_pct_dp,1,maxPassend_3785071286235317929);
                     else passend_3785071286235317929 = Bdg_verdelen_100_pct_dp;
                   passend_3785071286235317929 = tranwrd(passend_3785071286235317929,'9D'x,'D0'x);
                   put passend_3785071286235317929 ~ @;
              end;
       if missing(Bdg_verdelen_100_pct_th)
         then put "," @;
         else do;
                   attrLengte_3780567471454359953=length(Bdg_verdelen_100_pct_th);
                   aantalLF_3780567471454359953 = countc(Bdg_verdelen_100_pct_th,'0A'x);
                   maxPassend_3780567471454359953=1-1-aantalLF_3780567471454359953;
                   if attrLengte_3780567471454359953 > max(maxPassend_3780567471454359953,1000)
                     then passend_3780567471454359953 = substr(Bdg_verdelen_100_pct_th,1,maxPassend_3780567471454359953);
                     else passend_3780567471454359953 = Bdg_verdelen_100_pct_th;
                   passend_3780567471454359953 = tranwrd(passend_3780567471454359953,'9D'x,'D0'x);
                   put passend_3780567471454359953 ~ @;
              end;
       if missing(Iban)
         then put "," @;
         else do;
                   attrLengte_8433717562044549680=length(Iban);
                   aantalLF_8433717562044549680 = countc(Iban,'0A'x);
                   maxPassend_8433717562044549680=34-1-aantalLF_8433717562044549680;
                   if attrLengte_8433717562044549680 > max(maxPassend_8433717562044549680,1000)
                     then passend_8433717562044549680 = substr(Iban,1,maxPassend_8433717562044549680);
                     else passend_8433717562044549680 = Iban;
                   passend_8433717562044549680 = tranwrd(passend_8433717562044549680,'9D'x,'D0'x);
                   put passend_8433717562044549680 ~ @;
              end;
       if missing(Bic)
         then put "," @;
         else do;
                   attrLengte_8393283933206478573=length(Bic);
                   aantalLF_8393283933206478573 = countc(Bic,'0A'x);
                   maxPassend_8393283933206478573=11-1-aantalLF_8393283933206478573;
                   if attrLengte_8393283933206478573 > max(maxPassend_8393283933206478573,1000)
                     then passend_8393283933206478573 = substr(Bic,1,maxPassend_8393283933206478573);
                     else passend_8393283933206478573 = Bic;
                   passend_8393283933206478573 = tranwrd(passend_8393283933206478573,'9D'x,'D0'x);
                   put passend_8393283933206478573 ~ @;
              end;
       if missing(Imvb)
         then put "," @;
         else put Imvb @;
       if missing(Correctie_code)
         then put "," @;
         else do;
                   attrLengte_8136469209690216678=length(Correctie_code);
                   aantalLF_8136469209690216678 = countc(Correctie_code,'0A'x);
                   maxPassend_8136469209690216678=5-1-aantalLF_8136469209690216678;
                   if attrLengte_8136469209690216678 > max(maxPassend_8136469209690216678,1000)
                     then passend_8136469209690216678 = substr(Correctie_code,1,maxPassend_8136469209690216678);
                     else passend_8136469209690216678 = Correctie_code;
                   passend_8136469209690216678 = tranwrd(passend_8136469209690216678,'9D'x,'D0'x);
                   put passend_8136469209690216678 ~ @;
              end;
       if missing(Auto_oracle)
         then put "," @;
         else do;
                   attrLengte_2821618412975311163=length(Auto_oracle);
                   aantalLF_2821618412975311163 = countc(Auto_oracle,'0A'x);
                   maxPassend_2821618412975311163=1-1-aantalLF_2821618412975311163;
                   if attrLengte_2821618412975311163 > max(maxPassend_2821618412975311163,1000)
                     then passend_2821618412975311163 = substr(Auto_oracle,1,maxPassend_2821618412975311163);
                     else passend_2821618412975311163 = Auto_oracle;
                   passend_2821618412975311163 = tranwrd(passend_2821618412975311163,'9D'x,'D0'x);
                   put passend_2821618412975311163 ~ @;
              end;
       if missing(Boeking)
         then put "," @;
         else do;
                   attrLengte_1952708952664785282=length(Boeking);
                   aantalLF_1952708952664785282 = countc(Boeking,'0A'x);
                   maxPassend_1952708952664785282=1-1-aantalLF_1952708952664785282;
                   if attrLengte_1952708952664785282 > max(maxPassend_1952708952664785282,1000)
                     then passend_1952708952664785282 = substr(Boeking,1,maxPassend_1952708952664785282);
                     else passend_1952708952664785282 = Boeking;
                   passend_1952708952664785282 = tranwrd(passend_1952708952664785282,'9D'x,'D0'x);
                   put passend_1952708952664785282 ~ @;
              end;
       if missing(Fin_soort)
         then put "," @;
         else do;
                   attrLengte_4097127069211440246=length(Fin_soort);
                   aantalLF_4097127069211440246 = countc(Fin_soort,'0A'x);
                   maxPassend_4097127069211440246=1-1-aantalLF_4097127069211440246;
                   if attrLengte_4097127069211440246 > max(maxPassend_4097127069211440246,1000)
                     then passend_4097127069211440246 = substr(Fin_soort,1,maxPassend_4097127069211440246);
                     else passend_4097127069211440246 = Fin_soort;
                   passend_4097127069211440246 = tranwrd(passend_4097127069211440246,'9D'x,'D0'x);
                   put passend_4097127069211440246 ~ @;
              end;
       if missing(Kenmerk_lijn)
         then put "," @;
         else do;
                   attrLengte_4927202612135555295=length(Kenmerk_lijn);
                   aantalLF_4927202612135555295 = countc(Kenmerk_lijn,'0A'x);
                   maxPassend_4927202612135555295=20-1-aantalLF_4927202612135555295;
                   if attrLengte_4927202612135555295 > max(maxPassend_4927202612135555295,1000)
                     then passend_4927202612135555295 = substr(Kenmerk_lijn,1,maxPassend_4927202612135555295);
                     else passend_4927202612135555295 = Kenmerk_lijn;
                   passend_4927202612135555295 = tranwrd(passend_4927202612135555295,'9D'x,'D0'x);
                   put passend_4927202612135555295 ~ @;
              end;
       if missing(Aflossing)
         then put "," @;
         else put Aflossing @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RDM_PRG_OVEREENKOMST AS
   SELECT t1.Prg_id,
          t1.Ovk_nr,
          t1.Datum_van FORMAT=B8601DT19. AS Datum_van,
          t1.Datum_tot FORMAT=B8601DT19. AS Datum_tot,
          t1.Inhoud,
          t1.Status,
          t1.Contractdatum FORMAT=B8601DT19. AS Contractdatum,
          t1.Totaal_budget,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mjp_jn,
          t1.Ovk_budget_controle,
          t1.Vrij_budget,
          t1.Budget_uitputting
     FROM DATAQASG.RDM_PRG_OVEREENKOMST_TCMG t1;
QUIT;

data MIGRATIE.BAS_RDM_PRG_OVEREENKOMST;
  set MIGRATIE.BAS_RDM_PRG_OVEREENKOMST;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RDM_PRG_OVEREENKOMST.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Prg_id" 
       ','
          "Ovk_nr" 
       ','
          "Datum_van" 
       ','
          "Datum_tot" 
       ','
          "Inhoud" 
       ','
          "Status" 
       ','
          "Contractdatum" 
       ','
          "Totaal_budget" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mjp_jn" 
       ','
          "Ovk_budget_controle" 
       ','
          "Vrij_budget" 
       ','
          "Budget_uitputting" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RDM_PRG_OVEREENKOMST   end=EFIEOD; 
       format Prg_id best12. ;
       format Ovk_nr  ;
       format Datum_van B8601DT19. ;
       format Datum_tot B8601DT19. ;
       format Inhoud  ;
       format Status  ;
       format Contractdatum B8601DT19. ;
       format Totaal_budget best12. ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mjp_jn  ;
       format Ovk_budget_controle  ;
       format Vrij_budget best12. ;
       format Budget_uitputting best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Prg_id)
         then put "," @;
         else put Prg_id @;
       if missing(Ovk_nr)
         then put "," @;
         else do;
                   attrLengte_7575938694744162813=length(Ovk_nr);
                   aantalLF_7575938694744162813 = countc(Ovk_nr,'0A'x);
                   maxPassend_7575938694744162813=20-1-aantalLF_7575938694744162813;
                   if attrLengte_7575938694744162813 > max(maxPassend_7575938694744162813,1000)
                     then passend_7575938694744162813 = substr(Ovk_nr,1,maxPassend_7575938694744162813);
                     else passend_7575938694744162813 = Ovk_nr;
                   passend_7575938694744162813 = tranwrd(passend_7575938694744162813,'9D'x,'D0'x);
                   put passend_7575938694744162813 ~ @;
              end;
       if missing(Datum_van)
         then put "," @;
         else put Datum_van @;
       if missing(Datum_tot)
         then put "," @;
         else put Datum_tot @;
       if missing(Inhoud)
         then put "," @;
         else do;
                   attrLengte_4250420340675441405=length(Inhoud);
                   aantalLF_4250420340675441405 = countc(Inhoud,'0A'x);
                   maxPassend_4250420340675441405=2048-1-aantalLF_4250420340675441405;
                   if attrLengte_4250420340675441405 > max(maxPassend_4250420340675441405,1000)
                     then passend_4250420340675441405 = substr(Inhoud,1,maxPassend_4250420340675441405);
                     else passend_4250420340675441405 = Inhoud;
                   passend_4250420340675441405 = tranwrd(passend_4250420340675441405,'9D'x,'D0'x);
                   put passend_4250420340675441405 ~ @;
              end;
       if missing(Status)
         then put "," @;
         else do;
                   attrLengte_5988018406811650736=length(Status);
                   aantalLF_5988018406811650736 = countc(Status,'0A'x);
                   maxPassend_5988018406811650736=1-1-aantalLF_5988018406811650736;
                   if attrLengte_5988018406811650736 > max(maxPassend_5988018406811650736,1000)
                     then passend_5988018406811650736 = substr(Status,1,maxPassend_5988018406811650736);
                     else passend_5988018406811650736 = Status;
                   passend_5988018406811650736 = tranwrd(passend_5988018406811650736,'9D'x,'D0'x);
                   put passend_5988018406811650736 ~ @;
              end;
       if missing(Contractdatum)
         then put "," @;
         else put Contractdatum @;
       if missing(Totaal_budget)
         then put "," @;
         else put Totaal_budget @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mjp_jn)
         then put "," @;
         else do;
                   attrLengte_837135120333362348=length(Mjp_jn);
                   aantalLF_837135120333362348 = countc(Mjp_jn,'0A'x);
                   maxPassend_837135120333362348=1-1-aantalLF_837135120333362348;
                   if attrLengte_837135120333362348 > max(maxPassend_837135120333362348,1000)
                     then passend_837135120333362348 = substr(Mjp_jn,1,maxPassend_837135120333362348);
                     else passend_837135120333362348 = Mjp_jn;
                   passend_837135120333362348 = tranwrd(passend_837135120333362348,'9D'x,'D0'x);
                   put passend_837135120333362348 ~ @;
              end;
       if missing(Ovk_budget_controle)
         then put "," @;
         else do;
                   attrLengte_3560946579088680324=length(Ovk_budget_controle);
                   aantalLF_3560946579088680324 = countc(Ovk_budget_controle,'0A'x);
                   maxPassend_3560946579088680324=1-1-aantalLF_3560946579088680324;
                   if attrLengte_3560946579088680324 > max(maxPassend_3560946579088680324,1000)
                     then passend_3560946579088680324 = substr(Ovk_budget_controle,1,maxPassend_3560946579088680324);
                     else passend_3560946579088680324 = Ovk_budget_controle;
                   passend_3560946579088680324 = tranwrd(passend_3560946579088680324,'9D'x,'D0'x);
                   put passend_3560946579088680324 ~ @;
              end;
       if missing(Vrij_budget)
         then put "," @;
         else put Vrij_budget @;
       if missing(Budget_uitputting)
         then put "," @;
         else put Budget_uitputting @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RDM_PROGRAMMAMEDEWERKERROL AS
   SELECT t1.Prg_id,
          t1.Mdw_id,
          t1.Auth_mdw_cd,
          t1.Rol_cd,
          t1.Actief,
          t1.Opmerking,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Senioriteit,
          t1.Mentor_id,
          t1.Vervang_id,
          t1.Vervang_rol,
          t1.Acc_id,
          t1.Mdw_id_parf_naar,
          t1.Mentor_rol_cd
     FROM DATAQASG.RDM_PROGRAMMAMEDEWERKERROL_TCMG t1;
QUIT;

data MIGRATIE.BAS_RDM_PROGRAMMAMEDEWERKERROL;
  set MIGRATIE.BAS_RDM_PROGRAMMAMEDEWERKERROL;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RDM_PROGRAMMAMEDEWERKERROL.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Prg_id" 
       ','
          "Mdw_id" 
       ','
          "Auth_mdw_cd" 
       ','
          "Rol_cd" 
       ','
          "Actief" 
       ','
          "Opmerking" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Senioriteit" 
       ','
          "Mentor_id" 
       ','
          "Vervang_id" 
       ','
          "Vervang_rol" 
       ','
          "Acc_id" 
       ','
          "Mdw_id_parf_naar" 
       ','
          "Mentor_rol_cd" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RDM_PROGRAMMAMEDEWERKERROL   end=EFIEOD; 
       format Prg_id best12. ;
       format Mdw_id best12. ;
       format Auth_mdw_cd  ;
       format Rol_cd  ;
       format Actief  ;
       format Opmerking  ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Senioriteit  ;
       format Mentor_id best12. ;
       format Vervang_id best12. ;
       format Vervang_rol  ;
       format Acc_id best12. ;
       format Mdw_id_parf_naar best12. ;
       format Mentor_rol_cd  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Prg_id)
         then put "," @;
         else put Prg_id @;
       if missing(Mdw_id)
         then put "," @;
         else put Mdw_id @;
       if missing(Auth_mdw_cd)
         then put "," @;
         else do;
                   attrLengte_5387589372927854328=length(Auth_mdw_cd);
                   aantalLF_5387589372927854328 = countc(Auth_mdw_cd,'0A'x);
                   maxPassend_5387589372927854328=30-1-aantalLF_5387589372927854328;
                   if attrLengte_5387589372927854328 > max(maxPassend_5387589372927854328,1000)
                     then passend_5387589372927854328 = substr(Auth_mdw_cd,1,maxPassend_5387589372927854328);
                     else passend_5387589372927854328 = Auth_mdw_cd;
                   passend_5387589372927854328 = tranwrd(passend_5387589372927854328,'9D'x,'D0'x);
                   put passend_5387589372927854328 ~ @;
              end;
       if missing(Rol_cd)
         then put "," @;
         else do;
                   attrLengte_3864349925788261245=length(Rol_cd);
                   aantalLF_3864349925788261245 = countc(Rol_cd,'0A'x);
                   maxPassend_3864349925788261245=3-1-aantalLF_3864349925788261245;
                   if attrLengte_3864349925788261245 > max(maxPassend_3864349925788261245,1000)
                     then passend_3864349925788261245 = substr(Rol_cd,1,maxPassend_3864349925788261245);
                     else passend_3864349925788261245 = Rol_cd;
                   passend_3864349925788261245 = tranwrd(passend_3864349925788261245,'9D'x,'D0'x);
                   put passend_3864349925788261245 ~ @;
              end;
       if missing(Actief)
         then put "," @;
         else do;
                   attrLengte_9040032925271508250=length(Actief);
                   aantalLF_9040032925271508250 = countc(Actief,'0A'x);
                   maxPassend_9040032925271508250=1-1-aantalLF_9040032925271508250;
                   if attrLengte_9040032925271508250 > max(maxPassend_9040032925271508250,1000)
                     then passend_9040032925271508250 = substr(Actief,1,maxPassend_9040032925271508250);
                     else passend_9040032925271508250 = Actief;
                   passend_9040032925271508250 = tranwrd(passend_9040032925271508250,'9D'x,'D0'x);
                   put passend_9040032925271508250 ~ @;
              end;
       if missing(Opmerking)
         then put "," @;
         else do;
                   attrLengte_1343037086106328577=length(Opmerking);
                   aantalLF_1343037086106328577 = countc(Opmerking,'0A'x);
                   maxPassend_1343037086106328577=255-1-aantalLF_1343037086106328577;
                   if attrLengte_1343037086106328577 > max(maxPassend_1343037086106328577,1000)
                     then passend_1343037086106328577 = substr(Opmerking,1,maxPassend_1343037086106328577);
                     else passend_1343037086106328577 = Opmerking;
                   passend_1343037086106328577 = tranwrd(passend_1343037086106328577,'9D'x,'D0'x);
                   put passend_1343037086106328577 ~ @;
              end;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Senioriteit)
         then put "," @;
         else do;
                   attrLengte_1708104729569954294=length(Senioriteit);
                   aantalLF_1708104729569954294 = countc(Senioriteit,'0A'x);
                   maxPassend_1708104729569954294=30-1-aantalLF_1708104729569954294;
                   if attrLengte_1708104729569954294 > max(maxPassend_1708104729569954294,1000)
                     then passend_1708104729569954294 = substr(Senioriteit,1,maxPassend_1708104729569954294);
                     else passend_1708104729569954294 = Senioriteit;
                   passend_1708104729569954294 = tranwrd(passend_1708104729569954294,'9D'x,'D0'x);
                   put passend_1708104729569954294 ~ @;
              end;
       if missing(Mentor_id)
         then put "," @;
         else put Mentor_id @;
       if missing(Vervang_id)
         then put "," @;
         else put Vervang_id @;
       if missing(Vervang_rol)
         then put "," @;
         else do;
                   attrLengte_229469790558856446=length(Vervang_rol);
                   aantalLF_229469790558856446 = countc(Vervang_rol,'0A'x);
                   maxPassend_229469790558856446=3-1-aantalLF_229469790558856446;
                   if attrLengte_229469790558856446 > max(maxPassend_229469790558856446,1000)
                     then passend_229469790558856446 = substr(Vervang_rol,1,maxPassend_229469790558856446);
                     else passend_229469790558856446 = Vervang_rol;
                   passend_229469790558856446 = tranwrd(passend_229469790558856446,'9D'x,'D0'x);
                   put passend_229469790558856446 ~ @;
              end;
       if missing(Acc_id)
         then put "," @;
         else put Acc_id @;
       if missing(Mdw_id_parf_naar)
         then put "," @;
         else put Mdw_id_parf_naar @;
       if missing(Mentor_rol_cd)
         then put "," @;
         else do;
                   attrLengte_1142361471725319962=length(Mentor_rol_cd);
                   aantalLF_1142361471725319962 = countc(Mentor_rol_cd,'0A'x);
                   maxPassend_1142361471725319962=3-1-aantalLF_1142361471725319962;
                   if attrLengte_1142361471725319962 > max(maxPassend_1142361471725319962,1000)
                     then passend_1142361471725319962 = substr(Mentor_rol_cd,1,maxPassend_1142361471725319962);
                     else passend_1142361471725319962 = Mentor_rol_cd;
                   passend_1142361471725319962 = tranwrd(passend_1142361471725319962,'9D'x,'D0'x);
                   put passend_1142361471725319962 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RDM_REGELING AS
   SELECT t1.Reg_id,
          t1.Reg_cd,
          t1.Reg_oms,
          t1.Prg_id,
          t1.Thema,
          t1.Rap_freq,
          t1.Ingangs_datum FORMAT=B8601DT19. AS Ingangs_datum,
          t1.Pub_datum FORMAT=B8601DT19. AS Pub_datum,
          t1.Eind_datum FORMAT=B8601DT19. AS Eind_datum,
          t1.Reg_document,
          t1.Betaalmodule,
          t1.Regelingscontrole,
          t1.Ic_helptekst,
          t1.Geblokkeerd_jn,
          t1.Min_id,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Reg_prefix,
          t1.Volg_nr,
          t1.Mail_bericht_parafering,
          t1.Reg_mail_adres,
          t1.Reg_geen_dig_parafering,
          t1.Fin_schermen,
          t1.Budgetbewaking_pct,
          t1.Budgetbewaking_hard,
          t1.Dig_parf_mand,
          t1.Cst_set_cd,
          t1.Auto_samenvoeg_jn,
          t1.Fpc_status,
          t1.Dcp_automatisch_jn,
          t1.Paraf_mandat_pr_rol_jn,
          t1.Dos_referentie_jaar,
          t1.Auto_insert_sde_jn,
          t1.Ingangsdatum_zer FORMAT=B8601DT19. AS Ingangsdatum_zer
     FROM DATAQASG.RDM_REGELING_TCMG t1;
QUIT;

data MIGRATIE.BAS_RDM_REGELING;
  set MIGRATIE.BAS_RDM_REGELING;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RDM_REGELING.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Reg_id" 
       ','
          "Reg_cd" 
       ','
          "Reg_oms" 
       ','
          "Prg_id" 
       ','
          "Thema" 
       ','
          "Rap_freq" 
       ','
          "Ingangs_datum" 
       ','
          "Pub_datum" 
       ','
          "Eind_datum" 
       ','
          "Reg_document" 
       ','
          "Betaalmodule" 
       ','
          "Regelingscontrole" 
       ','
          "Ic_helptekst" 
       ','
          "Geblokkeerd_jn" 
       ','
          "Min_id" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Reg_prefix" 
       ','
          "Volg_nr" 
       ','
          "Mail_bericht_parafering" 
       ','
          "Reg_mail_adres" 
       ','
          "Reg_geen_dig_parafering" 
       ','
          "Fin_schermen" 
       ','
          "Budgetbewaking_pct" 
       ','
          "Budgetbewaking_hard" 
       ','
          "Dig_parf_mand" 
       ','
          "Cst_set_cd" 
       ','
          "Auto_samenvoeg_jn" 
       ','
          "Fpc_status" 
       ','
          "Dcp_automatisch_jn" 
       ','
          "Paraf_mandat_pr_rol_jn" 
       ','
          "Dos_referentie_jaar" 
       ','
          "Auto_insert_sde_jn" 
       ','
          "Ingangsdatum_zer" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RDM_REGELING   end=EFIEOD; 
       format Reg_id best12. ;
       format Reg_cd  ;
       format Reg_oms  ;
       format Prg_id best12. ;
       format Thema  ;
       format Rap_freq best12. ;
       format Ingangs_datum B8601DT19. ;
       format Pub_datum B8601DT19. ;
       format Eind_datum B8601DT19. ;
       format Reg_document  ;
       format Betaalmodule  ;
       format Regelingscontrole  ;
       format Ic_helptekst  ;
       format Geblokkeerd_jn  ;
       format Min_id best12. ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Reg_prefix  ;
       format Volg_nr best12. ;
       format Mail_bericht_parafering  ;
       format Reg_mail_adres  ;
       format Reg_geen_dig_parafering  ;
       format Fin_schermen  ;
       format Budgetbewaking_pct best12. ;
       format Budgetbewaking_hard  ;
       format Dig_parf_mand  ;
       format Cst_set_cd  ;
       format Auto_samenvoeg_jn  ;
       format Fpc_status  ;
       format Dcp_automatisch_jn  ;
       format Paraf_mandat_pr_rol_jn  ;
       format Dos_referentie_jaar  ;
       format Auto_insert_sde_jn  ;
       format Ingangsdatum_zer B8601DT19. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Reg_id)
         then put "," @;
         else put Reg_id @;
       if missing(Reg_cd)
         then put "," @;
         else do;
                   attrLengte_8089610682312470086=length(Reg_cd);
                   aantalLF_8089610682312470086 = countc(Reg_cd,'0A'x);
                   maxPassend_8089610682312470086=20-1-aantalLF_8089610682312470086;
                   if attrLengte_8089610682312470086 > max(maxPassend_8089610682312470086,1000)
                     then passend_8089610682312470086 = substr(Reg_cd,1,maxPassend_8089610682312470086);
                     else passend_8089610682312470086 = Reg_cd;
                   passend_8089610682312470086 = tranwrd(passend_8089610682312470086,'9D'x,'D0'x);
                   put passend_8089610682312470086 ~ @;
              end;
       if missing(Reg_oms)
         then put "," @;
         else do;
                   attrLengte_8048633119966655007=length(Reg_oms);
                   aantalLF_8048633119966655007 = countc(Reg_oms,'0A'x);
                   maxPassend_8048633119966655007=120-1-aantalLF_8048633119966655007;
                   if attrLengte_8048633119966655007 > max(maxPassend_8048633119966655007,1000)
                     then passend_8048633119966655007 = substr(Reg_oms,1,maxPassend_8048633119966655007);
                     else passend_8048633119966655007 = Reg_oms;
                   passend_8048633119966655007 = tranwrd(passend_8048633119966655007,'9D'x,'D0'x);
                   put passend_8048633119966655007 ~ @;
              end;
       if missing(Prg_id)
         then put "," @;
         else put Prg_id @;
       if missing(Thema)
         then put "," @;
         else do;
                   attrLengte_4904519751506790512=length(Thema);
                   aantalLF_4904519751506790512 = countc(Thema,'0A'x);
                   maxPassend_4904519751506790512=1-1-aantalLF_4904519751506790512;
                   if attrLengte_4904519751506790512 > max(maxPassend_4904519751506790512,1000)
                     then passend_4904519751506790512 = substr(Thema,1,maxPassend_4904519751506790512);
                     else passend_4904519751506790512 = Thema;
                   passend_4904519751506790512 = tranwrd(passend_4904519751506790512,'9D'x,'D0'x);
                   put passend_4904519751506790512 ~ @;
              end;
       if missing(Rap_freq)
         then put "," @;
         else put Rap_freq @;
       if missing(Ingangs_datum)
         then put "," @;
         else put Ingangs_datum @;
       if missing(Pub_datum)
         then put "," @;
         else put Pub_datum @;
       if missing(Eind_datum)
         then put "," @;
         else put Eind_datum @;
       if missing(Reg_document)
         then put "," @;
         else do;
                   attrLengte_7383118781553457770=length(Reg_document);
                   aantalLF_7383118781553457770 = countc(Reg_document,'0A'x);
                   maxPassend_7383118781553457770=50-1-aantalLF_7383118781553457770;
                   if attrLengte_7383118781553457770 > max(maxPassend_7383118781553457770,1000)
                     then passend_7383118781553457770 = substr(Reg_document,1,maxPassend_7383118781553457770);
                     else passend_7383118781553457770 = Reg_document;
                   passend_7383118781553457770 = tranwrd(passend_7383118781553457770,'9D'x,'D0'x);
                   put passend_7383118781553457770 ~ @;
              end;
       if missing(Betaalmodule)
         then put "," @;
         else do;
                   attrLengte_3526882150107883917=length(Betaalmodule);
                   aantalLF_3526882150107883917 = countc(Betaalmodule,'0A'x);
                   maxPassend_3526882150107883917=1-1-aantalLF_3526882150107883917;
                   if attrLengte_3526882150107883917 > max(maxPassend_3526882150107883917,1000)
                     then passend_3526882150107883917 = substr(Betaalmodule,1,maxPassend_3526882150107883917);
                     else passend_3526882150107883917 = Betaalmodule;
                   passend_3526882150107883917 = tranwrd(passend_3526882150107883917,'9D'x,'D0'x);
                   put passend_3526882150107883917 ~ @;
              end;
       if missing(Regelingscontrole)
         then put "," @;
         else do;
                   attrLengte_4877794543932319083=length(Regelingscontrole);
                   aantalLF_4877794543932319083 = countc(Regelingscontrole,'0A'x);
                   maxPassend_4877794543932319083=1-1-aantalLF_4877794543932319083;
                   if attrLengte_4877794543932319083 > max(maxPassend_4877794543932319083,1000)
                     then passend_4877794543932319083 = substr(Regelingscontrole,1,maxPassend_4877794543932319083);
                     else passend_4877794543932319083 = Regelingscontrole;
                   passend_4877794543932319083 = tranwrd(passend_4877794543932319083,'9D'x,'D0'x);
                   put passend_4877794543932319083 ~ @;
              end;
       if missing(Ic_helptekst)
         then put "," @;
         else do;
                   attrLengte_7347360163492415997=length(Ic_helptekst);
                   aantalLF_7347360163492415997 = countc(Ic_helptekst,'0A'x);
                   maxPassend_7347360163492415997=2048-1-aantalLF_7347360163492415997;
                   if attrLengte_7347360163492415997 > max(maxPassend_7347360163492415997,1000)
                     then passend_7347360163492415997 = substr(Ic_helptekst,1,maxPassend_7347360163492415997);
                     else passend_7347360163492415997 = Ic_helptekst;
                   passend_7347360163492415997 = tranwrd(passend_7347360163492415997,'9D'x,'D0'x);
                   put passend_7347360163492415997 ~ @;
              end;
       if missing(Geblokkeerd_jn)
         then put "," @;
         else do;
                   attrLengte_7719773628010563908=length(Geblokkeerd_jn);
                   aantalLF_7719773628010563908 = countc(Geblokkeerd_jn,'0A'x);
                   maxPassend_7719773628010563908=1-1-aantalLF_7719773628010563908;
                   if attrLengte_7719773628010563908 > max(maxPassend_7719773628010563908,1000)
                     then passend_7719773628010563908 = substr(Geblokkeerd_jn,1,maxPassend_7719773628010563908);
                     else passend_7719773628010563908 = Geblokkeerd_jn;
                   passend_7719773628010563908 = tranwrd(passend_7719773628010563908,'9D'x,'D0'x);
                   put passend_7719773628010563908 ~ @;
              end;
       if missing(Min_id)
         then put "," @;
         else put Min_id @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Reg_prefix)
         then put "," @;
         else do;
                   attrLengte_4465592721297386989=length(Reg_prefix);
                   aantalLF_4465592721297386989 = countc(Reg_prefix,'0A'x);
                   maxPassend_4465592721297386989=6-1-aantalLF_4465592721297386989;
                   if attrLengte_4465592721297386989 > max(maxPassend_4465592721297386989,1000)
                     then passend_4465592721297386989 = substr(Reg_prefix,1,maxPassend_4465592721297386989);
                     else passend_4465592721297386989 = Reg_prefix;
                   passend_4465592721297386989 = tranwrd(passend_4465592721297386989,'9D'x,'D0'x);
                   put passend_4465592721297386989 ~ @;
              end;
       if missing(Volg_nr)
         then put "," @;
         else put Volg_nr @;
       if missing(Mail_bericht_parafering)
         then put "," @;
         else do;
                   attrLengte_6263883538153590736=length(Mail_bericht_parafering);
                   aantalLF_6263883538153590736 = countc(Mail_bericht_parafering,'0A'x);
                   maxPassend_6263883538153590736=1-1-aantalLF_6263883538153590736;
                   if attrLengte_6263883538153590736 > max(maxPassend_6263883538153590736,1000)
                     then passend_6263883538153590736 = substr(Mail_bericht_parafering,1,maxPassend_6263883538153590736);
                     else passend_6263883538153590736 = Mail_bericht_parafering;
                   passend_6263883538153590736 = tranwrd(passend_6263883538153590736,'9D'x,'D0'x);
                   put passend_6263883538153590736 ~ @;
              end;
       if missing(Reg_mail_adres)
         then put "," @;
         else do;
                   attrLengte_5971966142831170572=length(Reg_mail_adres);
                   aantalLF_5971966142831170572 = countc(Reg_mail_adres,'0A'x);
                   maxPassend_5971966142831170572=60-1-aantalLF_5971966142831170572;
                   if attrLengte_5971966142831170572 > max(maxPassend_5971966142831170572,1000)
                     then passend_5971966142831170572 = substr(Reg_mail_adres,1,maxPassend_5971966142831170572);
                     else passend_5971966142831170572 = Reg_mail_adres;
                   passend_5971966142831170572 = tranwrd(passend_5971966142831170572,'9D'x,'D0'x);
                   put passend_5971966142831170572 ~ @;
              end;
       if missing(Reg_geen_dig_parafering)
         then put "," @;
         else do;
                   attrLengte_1292753338332248782=length(Reg_geen_dig_parafering);
                   aantalLF_1292753338332248782 = countc(Reg_geen_dig_parafering,'0A'x);
                   maxPassend_1292753338332248782=1-1-aantalLF_1292753338332248782;
                   if attrLengte_1292753338332248782 > max(maxPassend_1292753338332248782,1000)
                     then passend_1292753338332248782 = substr(Reg_geen_dig_parafering,1,maxPassend_1292753338332248782);
                     else passend_1292753338332248782 = Reg_geen_dig_parafering;
                   passend_1292753338332248782 = tranwrd(passend_1292753338332248782,'9D'x,'D0'x);
                   put passend_1292753338332248782 ~ @;
              end;
       if missing(Fin_schermen)
         then put "," @;
         else do;
                   attrLengte_911904525501931183=length(Fin_schermen);
                   aantalLF_911904525501931183 = countc(Fin_schermen,'0A'x);
                   maxPassend_911904525501931183=1-1-aantalLF_911904525501931183;
                   if attrLengte_911904525501931183 > max(maxPassend_911904525501931183,1000)
                     then passend_911904525501931183 = substr(Fin_schermen,1,maxPassend_911904525501931183);
                     else passend_911904525501931183 = Fin_schermen;
                   passend_911904525501931183 = tranwrd(passend_911904525501931183,'9D'x,'D0'x);
                   put passend_911904525501931183 ~ @;
              end;
       if missing(Budgetbewaking_pct)
         then put "," @;
         else put Budgetbewaking_pct @;
       if missing(Budgetbewaking_hard)
         then put "," @;
         else do;
                   attrLengte_2651479358715290174=length(Budgetbewaking_hard);
                   aantalLF_2651479358715290174 = countc(Budgetbewaking_hard,'0A'x);
                   maxPassend_2651479358715290174=1-1-aantalLF_2651479358715290174;
                   if attrLengte_2651479358715290174 > max(maxPassend_2651479358715290174,1000)
                     then passend_2651479358715290174 = substr(Budgetbewaking_hard,1,maxPassend_2651479358715290174);
                     else passend_2651479358715290174 = Budgetbewaking_hard;
                   passend_2651479358715290174 = tranwrd(passend_2651479358715290174,'9D'x,'D0'x);
                   put passend_2651479358715290174 ~ @;
              end;
       if missing(Dig_parf_mand)
         then put "," @;
         else do;
                   attrLengte_7869809262385558754=length(Dig_parf_mand);
                   aantalLF_7869809262385558754 = countc(Dig_parf_mand,'0A'x);
                   maxPassend_7869809262385558754=1-1-aantalLF_7869809262385558754;
                   if attrLengte_7869809262385558754 > max(maxPassend_7869809262385558754,1000)
                     then passend_7869809262385558754 = substr(Dig_parf_mand,1,maxPassend_7869809262385558754);
                     else passend_7869809262385558754 = Dig_parf_mand;
                   passend_7869809262385558754 = tranwrd(passend_7869809262385558754,'9D'x,'D0'x);
                   put passend_7869809262385558754 ~ @;
              end;
       if missing(Cst_set_cd)
         then put "," @;
         else do;
                   attrLengte_8058619802847207325=length(Cst_set_cd);
                   aantalLF_8058619802847207325 = countc(Cst_set_cd,'0A'x);
                   maxPassend_8058619802847207325=10-1-aantalLF_8058619802847207325;
                   if attrLengte_8058619802847207325 > max(maxPassend_8058619802847207325,1000)
                     then passend_8058619802847207325 = substr(Cst_set_cd,1,maxPassend_8058619802847207325);
                     else passend_8058619802847207325 = Cst_set_cd;
                   passend_8058619802847207325 = tranwrd(passend_8058619802847207325,'9D'x,'D0'x);
                   put passend_8058619802847207325 ~ @;
              end;
       if missing(Auto_samenvoeg_jn)
         then put "," @;
         else do;
                   attrLengte_2110398600305530271=length(Auto_samenvoeg_jn);
                   aantalLF_2110398600305530271 = countc(Auto_samenvoeg_jn,'0A'x);
                   maxPassend_2110398600305530271=1-1-aantalLF_2110398600305530271;
                   if attrLengte_2110398600305530271 > max(maxPassend_2110398600305530271,1000)
                     then passend_2110398600305530271 = substr(Auto_samenvoeg_jn,1,maxPassend_2110398600305530271);
                     else passend_2110398600305530271 = Auto_samenvoeg_jn;
                   passend_2110398600305530271 = tranwrd(passend_2110398600305530271,'9D'x,'D0'x);
                   put passend_2110398600305530271 ~ @;
              end;
       if missing(Fpc_status)
         then put "," @;
         else do;
                   attrLengte_5842689462633185036=length(Fpc_status);
                   aantalLF_5842689462633185036 = countc(Fpc_status,'0A'x);
                   maxPassend_5842689462633185036=1-1-aantalLF_5842689462633185036;
                   if attrLengte_5842689462633185036 > max(maxPassend_5842689462633185036,1000)
                     then passend_5842689462633185036 = substr(Fpc_status,1,maxPassend_5842689462633185036);
                     else passend_5842689462633185036 = Fpc_status;
                   passend_5842689462633185036 = tranwrd(passend_5842689462633185036,'9D'x,'D0'x);
                   put passend_5842689462633185036 ~ @;
              end;
       if missing(Dcp_automatisch_jn)
         then put "," @;
         else do;
                   attrLengte_5749236548403605141=length(Dcp_automatisch_jn);
                   aantalLF_5749236548403605141 = countc(Dcp_automatisch_jn,'0A'x);
                   maxPassend_5749236548403605141=1-1-aantalLF_5749236548403605141;
                   if attrLengte_5749236548403605141 > max(maxPassend_5749236548403605141,1000)
                     then passend_5749236548403605141 = substr(Dcp_automatisch_jn,1,maxPassend_5749236548403605141);
                     else passend_5749236548403605141 = Dcp_automatisch_jn;
                   passend_5749236548403605141 = tranwrd(passend_5749236548403605141,'9D'x,'D0'x);
                   put passend_5749236548403605141 ~ @;
              end;
       if missing(Paraf_mandat_pr_rol_jn)
         then put "," @;
         else do;
                   attrLengte_2135051168692226800=length(Paraf_mandat_pr_rol_jn);
                   aantalLF_2135051168692226800 = countc(Paraf_mandat_pr_rol_jn,'0A'x);
                   maxPassend_2135051168692226800=1-1-aantalLF_2135051168692226800;
                   if attrLengte_2135051168692226800 > max(maxPassend_2135051168692226800,1000)
                     then passend_2135051168692226800 = substr(Paraf_mandat_pr_rol_jn,1,maxPassend_2135051168692226800);
                     else passend_2135051168692226800 = Paraf_mandat_pr_rol_jn;
                   passend_2135051168692226800 = tranwrd(passend_2135051168692226800,'9D'x,'D0'x);
                   put passend_2135051168692226800 ~ @;
              end;
       if missing(Dos_referentie_jaar)
         then put "," @;
         else do;
                   attrLengte_7729616129515536002=length(Dos_referentie_jaar);
                   aantalLF_7729616129515536002 = countc(Dos_referentie_jaar,'0A'x);
                   maxPassend_7729616129515536002=4-1-aantalLF_7729616129515536002;
                   if attrLengte_7729616129515536002 > max(maxPassend_7729616129515536002,1000)
                     then passend_7729616129515536002 = substr(Dos_referentie_jaar,1,maxPassend_7729616129515536002);
                     else passend_7729616129515536002 = Dos_referentie_jaar;
                   passend_7729616129515536002 = tranwrd(passend_7729616129515536002,'9D'x,'D0'x);
                   put passend_7729616129515536002 ~ @;
              end;
       if missing(Auto_insert_sde_jn)
         then put "," @;
         else do;
                   attrLengte_1121401602846738077=length(Auto_insert_sde_jn);
                   aantalLF_1121401602846738077 = countc(Auto_insert_sde_jn,'0A'x);
                   maxPassend_1121401602846738077=1-1-aantalLF_1121401602846738077;
                   if attrLengte_1121401602846738077 > max(maxPassend_1121401602846738077,1000)
                     then passend_1121401602846738077 = substr(Auto_insert_sde_jn,1,maxPassend_1121401602846738077);
                     else passend_1121401602846738077 = Auto_insert_sde_jn;
                   passend_1121401602846738077 = tranwrd(passend_1121401602846738077,'9D'x,'D0'x);
                   put passend_1121401602846738077 ~ @;
              end;
       if missing(Ingangsdatum_zer)
         then put "," @;
         else put Ingangsdatum_zer @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RDM_REGPAR_BUDGONDVERD AS
   SELECT t1.Ovk_nr,
          t1.Rpt_nr,
          t1.Bgt_cd,
          t1.Rpe_datum_van FORMAT=B8601DT19. AS Rpe_datum_van,
          t1.Jaar,
          t1.Reg_id,
          t1.Reg_nr,
          t1.Budget,
          t1.Budget_uitputting,
          t1.Koppelen_jn,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.Correctie_budget,
          t1.Vrij_budget,
          t1.Rpt_nr_oud
     FROM DATAQASG.RDM_REGPAR_BUDGONDVERD_TCMG t1;
QUIT;

data MIGRATIE.BAS_RDM_REGPAR_BUDGONDVERD;
  set MIGRATIE.BAS_RDM_REGPAR_BUDGONDVERD;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RDM_REGPAR_BUDGONDVERD.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Ovk_nr" 
       ','
          "Rpt_nr" 
       ','
          "Bgt_cd" 
       ','
          "Rpe_datum_van" 
       ','
          "Jaar" 
       ','
          "Reg_id" 
       ','
          "Reg_nr" 
       ','
          "Budget" 
       ','
          "Budget_uitputting" 
       ','
          "Koppelen_jn" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Correctie_budget" 
       ','
          "Vrij_budget" 
       ','
          "Rpt_nr_oud" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RDM_REGPAR_BUDGONDVERD   end=EFIEOD; 
       format Ovk_nr  ;
       format Rpt_nr best12. ;
       format Bgt_cd  ;
       format Rpe_datum_van B8601DT19. ;
       format Jaar best12. ;
       format Reg_id best12. ;
       format Reg_nr best12. ;
       format Budget best12. ;
       format Budget_uitputting best12. ;
       format Koppelen_jn  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Correctie_budget best12. ;
       format Vrij_budget best12. ;
       format Rpt_nr_oud  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Ovk_nr)
         then put "," @;
         else do;
                   attrLengte_7575938694744162813=length(Ovk_nr);
                   aantalLF_7575938694744162813 = countc(Ovk_nr,'0A'x);
                   maxPassend_7575938694744162813=20-1-aantalLF_7575938694744162813;
                   if attrLengte_7575938694744162813 > max(maxPassend_7575938694744162813,1000)
                     then passend_7575938694744162813 = substr(Ovk_nr,1,maxPassend_7575938694744162813);
                     else passend_7575938694744162813 = Ovk_nr;
                   passend_7575938694744162813 = tranwrd(passend_7575938694744162813,'9D'x,'D0'x);
                   put passend_7575938694744162813 ~ @;
              end;
       if missing(Rpt_nr)
         then put "," @;
         else put Rpt_nr @;
       if missing(Bgt_cd)
         then put "," @;
         else do;
                   attrLengte_7370879967810917187=length(Bgt_cd);
                   aantalLF_7370879967810917187 = countc(Bgt_cd,'0A'x);
                   maxPassend_7370879967810917187=1-1-aantalLF_7370879967810917187;
                   if attrLengte_7370879967810917187 > max(maxPassend_7370879967810917187,1000)
                     then passend_7370879967810917187 = substr(Bgt_cd,1,maxPassend_7370879967810917187);
                     else passend_7370879967810917187 = Bgt_cd;
                   passend_7370879967810917187 = tranwrd(passend_7370879967810917187,'9D'x,'D0'x);
                   put passend_7370879967810917187 ~ @;
              end;
       if missing(Rpe_datum_van)
         then put "," @;
         else put Rpe_datum_van @;
       if missing(Jaar)
         then put "," @;
         else put Jaar @;
       if missing(Reg_id)
         then put "," @;
         else put Reg_id @;
       if missing(Reg_nr)
         then put "," @;
         else put Reg_nr @;
       if missing(Budget)
         then put "," @;
         else put Budget @;
       if missing(Budget_uitputting)
         then put "," @;
         else put Budget_uitputting @;
       if missing(Koppelen_jn)
         then put "," @;
         else do;
                   attrLengte_8010221947609816734=length(Koppelen_jn);
                   aantalLF_8010221947609816734 = countc(Koppelen_jn,'0A'x);
                   maxPassend_8010221947609816734=1-1-aantalLF_8010221947609816734;
                   if attrLengte_8010221947609816734 > max(maxPassend_8010221947609816734,1000)
                     then passend_8010221947609816734 = substr(Koppelen_jn,1,maxPassend_8010221947609816734);
                     else passend_8010221947609816734 = Koppelen_jn;
                   passend_8010221947609816734 = tranwrd(passend_8010221947609816734,'9D'x,'D0'x);
                   put passend_8010221947609816734 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Correctie_budget)
         then put "," @;
         else put Correctie_budget @;
       if missing(Vrij_budget)
         then put "," @;
         else put Vrij_budget @;
       if missing(Rpt_nr_oud)
         then put "," @;
         else do;
                   attrLengte_6398700462504815438=length(Rpt_nr_oud);
                   aantalLF_6398700462504815438 = countc(Rpt_nr_oud,'0A'x);
                   maxPassend_6398700462504815438=20-1-aantalLF_6398700462504815438;
                   if attrLengte_6398700462504815438 > max(maxPassend_6398700462504815438,1000)
                     then passend_6398700462504815438 = substr(Rpt_nr_oud,1,maxPassend_6398700462504815438);
                     else passend_6398700462504815438 = Rpt_nr_oud;
                   passend_6398700462504815438 = tranwrd(passend_6398700462504815438,'9D'x,'D0'x);
                   put passend_6398700462504815438 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RDM_STATUSOVERG_BIJ_BRIEF AS
   SELECT t1.Reg_id,
          t1.Status_van,
          t1.Statusgroep,
          t1.Status_naar,
          t1.Cst_cd,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Xps_cd
     FROM DATAQASG.RDM_STATUSOVERG_BIJ_BRIEF_TCMG t1;
QUIT;

data MIGRATIE.BAS_RDM_STATUSOVERG_BIJ_BRIEF;
  set MIGRATIE.BAS_RDM_STATUSOVERG_BIJ_BRIEF;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RDM_STATUSOVERG_BIJ_BRIEF.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Reg_id" 
       ','
          "Status_van" 
       ','
          "Statusgroep" 
       ','
          "Status_naar" 
       ','
          "Cst_cd" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Xps_cd" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RDM_STATUSOVERG_BIJ_BRIEF   end=EFIEOD; 
       format Reg_id best12. ;
       format Status_van  ;
       format Statusgroep  ;
       format Status_naar  ;
       format Cst_cd  ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Xps_cd  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Reg_id)
         then put "," @;
         else put Reg_id @;
       if missing(Status_van)
         then put "," @;
         else do;
                   attrLengte_9079540650060306462=length(Status_van);
                   aantalLF_9079540650060306462 = countc(Status_van,'0A'x);
                   maxPassend_9079540650060306462=3-1-aantalLF_9079540650060306462;
                   if attrLengte_9079540650060306462 > max(maxPassend_9079540650060306462,1000)
                     then passend_9079540650060306462 = substr(Status_van,1,maxPassend_9079540650060306462);
                     else passend_9079540650060306462 = Status_van;
                   passend_9079540650060306462 = tranwrd(passend_9079540650060306462,'9D'x,'D0'x);
                   put passend_9079540650060306462 ~ @;
              end;
       if missing(Statusgroep)
         then put "," @;
         else do;
                   attrLengte_6104227251393262734=length(Statusgroep);
                   aantalLF_6104227251393262734 = countc(Statusgroep,'0A'x);
                   maxPassend_6104227251393262734=1-1-aantalLF_6104227251393262734;
                   if attrLengte_6104227251393262734 > max(maxPassend_6104227251393262734,1000)
                     then passend_6104227251393262734 = substr(Statusgroep,1,maxPassend_6104227251393262734);
                     else passend_6104227251393262734 = Statusgroep;
                   passend_6104227251393262734 = tranwrd(passend_6104227251393262734,'9D'x,'D0'x);
                   put passend_6104227251393262734 ~ @;
              end;
       if missing(Status_naar)
         then put "," @;
         else do;
                   attrLengte_2859492518089918434=length(Status_naar);
                   aantalLF_2859492518089918434 = countc(Status_naar,'0A'x);
                   maxPassend_2859492518089918434=3-1-aantalLF_2859492518089918434;
                   if attrLengte_2859492518089918434 > max(maxPassend_2859492518089918434,1000)
                     then passend_2859492518089918434 = substr(Status_naar,1,maxPassend_2859492518089918434);
                     else passend_2859492518089918434 = Status_naar;
                   passend_2859492518089918434 = tranwrd(passend_2859492518089918434,'9D'x,'D0'x);
                   put passend_2859492518089918434 ~ @;
              end;
       if missing(Cst_cd)
         then put "," @;
         else do;
                   attrLengte_6311705118691231734=length(Cst_cd);
                   aantalLF_6311705118691231734 = countc(Cst_cd,'0A'x);
                   maxPassend_6311705118691231734=8-1-aantalLF_6311705118691231734;
                   if attrLengte_6311705118691231734 > max(maxPassend_6311705118691231734,1000)
                     then passend_6311705118691231734 = substr(Cst_cd,1,maxPassend_6311705118691231734);
                     else passend_6311705118691231734 = Cst_cd;
                   passend_6311705118691231734 = tranwrd(passend_6311705118691231734,'9D'x,'D0'x);
                   put passend_6311705118691231734 ~ @;
              end;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Xps_cd)
         then put "," @;
         else do;
                   attrLengte_2736054697416343873=length(Xps_cd);
                   aantalLF_2736054697416343873 = countc(Xps_cd,'0A'x);
                   maxPassend_2736054697416343873=10-1-aantalLF_2736054697416343873;
                   if attrLengte_2736054697416343873 > max(maxPassend_2736054697416343873,1000)
                     then passend_2736054697416343873 = substr(Xps_cd,1,maxPassend_2736054697416343873);
                     else passend_2736054697416343873 = Xps_cd;
                   passend_2736054697416343873 = tranwrd(passend_2736054697416343873,'9D'x,'D0'x);
                   put passend_2736054697416343873 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_RDM_VARIABELE AS
   SELECT t1.Reg_id,
          t1.Code,
          t1.Begindatum FORMAT=B8601DT19. AS Begindatum,
          t1.Inhoud,
          t1.Toelichting,
          t1.Einddatum FORMAT=B8601DT19. AS Einddatum,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user
     FROM DATAQASG.RDM_VARIABELE_TCMG t1;
QUIT;

data MIGRATIE.BAS_RDM_VARIABELE;
  set MIGRATIE.BAS_RDM_VARIABELE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_RDM_VARIABELE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Reg_id" 
       ','
          "Code" 
       ','
          "Begindatum" 
       ','
          "Inhoud" 
       ','
          "Toelichting" 
       ','
          "Einddatum" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_RDM_VARIABELE   end=EFIEOD; 
       format Reg_id best12. ;
       format Code  ;
       format Begindatum B8601DT19. ;
       format Inhoud  ;
       format Toelichting  ;
       format Einddatum B8601DT19. ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Reg_id)
         then put "," @;
         else put Reg_id @;
       if missing(Code)
         then put "," @;
         else do;
                   attrLengte_7956994429245100397=length(Code);
                   aantalLF_7956994429245100397 = countc(Code,'0A'x);
                   maxPassend_7956994429245100397=50-1-aantalLF_7956994429245100397;
                   if attrLengte_7956994429245100397 > max(maxPassend_7956994429245100397,1000)
                     then passend_7956994429245100397 = substr(Code,1,maxPassend_7956994429245100397);
                     else passend_7956994429245100397 = Code;
                   passend_7956994429245100397 = tranwrd(passend_7956994429245100397,'9D'x,'D0'x);
                   put passend_7956994429245100397 ~ @;
              end;
       if missing(Begindatum)
         then put "," @;
         else put Begindatum @;
       if missing(Inhoud)
         then put "," @;
         else do;
                   attrLengte_4250420340675441405=length(Inhoud);
                   aantalLF_4250420340675441405 = countc(Inhoud,'0A'x);
                   maxPassend_4250420340675441405=255-1-aantalLF_4250420340675441405;
                   if attrLengte_4250420340675441405 > max(maxPassend_4250420340675441405,1000)
                     then passend_4250420340675441405 = substr(Inhoud,1,maxPassend_4250420340675441405);
                     else passend_4250420340675441405 = Inhoud;
                   passend_4250420340675441405 = tranwrd(passend_4250420340675441405,'9D'x,'D0'x);
                   put passend_4250420340675441405 ~ @;
              end;
       if missing(Toelichting)
         then put "," @;
         else do;
                   attrLengte_4385385912596099835=length(Toelichting);
                   aantalLF_4385385912596099835 = countc(Toelichting,'0A'x);
                   maxPassend_4385385912596099835=2048-1-aantalLF_4385385912596099835;
                   if attrLengte_4385385912596099835 > max(maxPassend_4385385912596099835,1000)
                     then passend_4385385912596099835 = substr(Toelichting,1,maxPassend_4385385912596099835);
                     else passend_4385385912596099835 = Toelichting;
                   passend_4385385912596099835 = tranwrd(passend_4385385912596099835,'9D'x,'D0'x);
                   put passend_4385385912596099835 ~ @;
              end;
       if missing(Einddatum)
         then put "," @;
         else put Einddatum @;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_STM_BSI AS
   SELECT t1.Startdatum FORMAT=B8601DT19. AS Startdatum,
          t1.Einddatum FORMAT=B8601DT19. AS Einddatum,
          t1.Bsi_cd,
          t1.Bsi_oms,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat
     FROM DATAQASG.STM_BSI_TCMG t1;
QUIT;

data MIGRATIE.BAS_STM_BSI;
  set MIGRATIE.BAS_STM_BSI;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_STM_BSI.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Startdatum" 
       ','
          "Einddatum" 
       ','
          "Bsi_cd" 
       ','
          "Bsi_oms" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_STM_BSI   end=EFIEOD; 
       format Startdatum B8601DT19. ;
       format Einddatum B8601DT19. ;
       format Bsi_cd  ;
       format Bsi_oms  ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Startdatum)
         then put "," @;
         else put Startdatum @;
       if missing(Einddatum)
         then put "," @;
         else put Einddatum @;
       if missing(Bsi_cd)
         then put "," @;
         else do;
                   attrLengte_3451443017000934866=length(Bsi_cd);
                   aantalLF_3451443017000934866 = countc(Bsi_cd,'0A'x);
                   maxPassend_3451443017000934866=7-1-aantalLF_3451443017000934866;
                   if attrLengte_3451443017000934866 > max(maxPassend_3451443017000934866,1000)
                     then passend_3451443017000934866 = substr(Bsi_cd,1,maxPassend_3451443017000934866);
                     else passend_3451443017000934866 = Bsi_cd;
                   passend_3451443017000934866 = tranwrd(passend_3451443017000934866,'9D'x,'D0'x);
                   put passend_3451443017000934866 ~ @;
              end;
       if missing(Bsi_oms)
         then put "," @;
         else do;
                   attrLengte_8559432772166713383=length(Bsi_oms);
                   aantalLF_8559432772166713383 = countc(Bsi_oms,'0A'x);
                   maxPassend_8559432772166713383=100-1-aantalLF_8559432772166713383;
                   if attrLengte_8559432772166713383 > max(maxPassend_8559432772166713383,1000)
                     then passend_8559432772166713383 = substr(Bsi_oms,1,maxPassend_8559432772166713383);
                     else passend_8559432772166713383 = Bsi_oms;
                   passend_8559432772166713383 = tranwrd(passend_8559432772166713383,'9D'x,'D0'x);
                   put passend_8559432772166713383 ~ @;
              end;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_STM_REACTIE AS
   SELECT t1.Reactie_cd,
          t1.Reactie_oms,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat
     FROM DATAQASG.STM_REACTIE_TCMG t1;
QUIT;

data MIGRATIE.BAS_STM_REACTIE;
  set MIGRATIE.BAS_STM_REACTIE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_STM_REACTIE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Reactie_cd" 
       ','
          "Reactie_oms" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_STM_REACTIE   end=EFIEOD; 
       format Reactie_cd  ;
       format Reactie_oms  ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Reactie_cd)
         then put "," @;
         else do;
                   attrLengte_4412363972584569639=length(Reactie_cd);
                   aantalLF_4412363972584569639 = countc(Reactie_cd,'0A'x);
                   maxPassend_4412363972584569639=3-1-aantalLF_4412363972584569639;
                   if attrLengte_4412363972584569639 > max(maxPassend_4412363972584569639,1000)
                     then passend_4412363972584569639 = substr(Reactie_cd,1,maxPassend_4412363972584569639);
                     else passend_4412363972584569639 = Reactie_cd;
                   passend_4412363972584569639 = tranwrd(passend_4412363972584569639,'9D'x,'D0'x);
                   put passend_4412363972584569639 ~ @;
              end;
       if missing(Reactie_oms)
         then put "," @;
         else do;
                   attrLengte_392247235326241948=length(Reactie_oms);
                   aantalLF_392247235326241948 = countc(Reactie_oms,'0A'x);
                   maxPassend_392247235326241948=60-1-aantalLF_392247235326241948;
                   if attrLengte_392247235326241948 > max(maxPassend_392247235326241948,1000)
                     then passend_392247235326241948 = substr(Reactie_oms,1,maxPassend_392247235326241948);
                     else passend_392247235326241948 = Reactie_oms;
                   passend_392247235326241948 = tranwrd(passend_392247235326241948,'9D'x,'D0'x);
                   put passend_392247235326241948 ~ @;
              end;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_STM_ROL AS
   SELECT t1.Rol_cd,
          t1.Rol_oms,
          t1.Interne_rol,
          t1.Externe_rol,
          t1.Organisatie_rol,
          t1.Controller,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Type_rol,
          t1.Ed_rol_cd,
          t1.Ed_rol_oms
     FROM DATAQASG.STM_ROL_TCMG t1;
QUIT;

data MIGRATIE.BAS_STM_ROL;
  set MIGRATIE.BAS_STM_ROL;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_STM_ROL.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Rol_cd" 
       ','
          "Rol_oms" 
       ','
          "Interne_rol" 
       ','
          "Externe_rol" 
       ','
          "Organisatie_rol" 
       ','
          "Controller" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Type_rol" 
       ','
          "Ed_rol_cd" 
       ','
          "Ed_rol_oms" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_STM_ROL   end=EFIEOD; 
       format Rol_cd  ;
       format Rol_oms  ;
       format Interne_rol  ;
       format Externe_rol  ;
       format Organisatie_rol  ;
       format Controller  ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Type_rol  ;
       format Ed_rol_cd best12. ;
       format Ed_rol_oms  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Rol_cd)
         then put "," @;
         else do;
                   attrLengte_3864349925788261245=length(Rol_cd);
                   aantalLF_3864349925788261245 = countc(Rol_cd,'0A'x);
                   maxPassend_3864349925788261245=3-1-aantalLF_3864349925788261245;
                   if attrLengte_3864349925788261245 > max(maxPassend_3864349925788261245,1000)
                     then passend_3864349925788261245 = substr(Rol_cd,1,maxPassend_3864349925788261245);
                     else passend_3864349925788261245 = Rol_cd;
                   passend_3864349925788261245 = tranwrd(passend_3864349925788261245,'9D'x,'D0'x);
                   put passend_3864349925788261245 ~ @;
              end;
       if missing(Rol_oms)
         then put "," @;
         else do;
                   attrLengte_292343333598675216=length(Rol_oms);
                   aantalLF_292343333598675216 = countc(Rol_oms,'0A'x);
                   maxPassend_292343333598675216=50-1-aantalLF_292343333598675216;
                   if attrLengte_292343333598675216 > max(maxPassend_292343333598675216,1000)
                     then passend_292343333598675216 = substr(Rol_oms,1,maxPassend_292343333598675216);
                     else passend_292343333598675216 = Rol_oms;
                   passend_292343333598675216 = tranwrd(passend_292343333598675216,'9D'x,'D0'x);
                   put passend_292343333598675216 ~ @;
              end;
       if missing(Interne_rol)
         then put "," @;
         else do;
                   attrLengte_8075008499931704538=length(Interne_rol);
                   aantalLF_8075008499931704538 = countc(Interne_rol,'0A'x);
                   maxPassend_8075008499931704538=1-1-aantalLF_8075008499931704538;
                   if attrLengte_8075008499931704538 > max(maxPassend_8075008499931704538,1000)
                     then passend_8075008499931704538 = substr(Interne_rol,1,maxPassend_8075008499931704538);
                     else passend_8075008499931704538 = Interne_rol;
                   passend_8075008499931704538 = tranwrd(passend_8075008499931704538,'9D'x,'D0'x);
                   put passend_8075008499931704538 ~ @;
              end;
       if missing(Externe_rol)
         then put "," @;
         else do;
                   attrLengte_5855131029356933992=length(Externe_rol);
                   aantalLF_5855131029356933992 = countc(Externe_rol,'0A'x);
                   maxPassend_5855131029356933992=1-1-aantalLF_5855131029356933992;
                   if attrLengte_5855131029356933992 > max(maxPassend_5855131029356933992,1000)
                     then passend_5855131029356933992 = substr(Externe_rol,1,maxPassend_5855131029356933992);
                     else passend_5855131029356933992 = Externe_rol;
                   passend_5855131029356933992 = tranwrd(passend_5855131029356933992,'9D'x,'D0'x);
                   put passend_5855131029356933992 ~ @;
              end;
       if missing(Organisatie_rol)
         then put "," @;
         else do;
                   attrLengte_752592000902709611=length(Organisatie_rol);
                   aantalLF_752592000902709611 = countc(Organisatie_rol,'0A'x);
                   maxPassend_752592000902709611=1-1-aantalLF_752592000902709611;
                   if attrLengte_752592000902709611 > max(maxPassend_752592000902709611,1000)
                     then passend_752592000902709611 = substr(Organisatie_rol,1,maxPassend_752592000902709611);
                     else passend_752592000902709611 = Organisatie_rol;
                   passend_752592000902709611 = tranwrd(passend_752592000902709611,'9D'x,'D0'x);
                   put passend_752592000902709611 ~ @;
              end;
       if missing(Controller)
         then put "," @;
         else do;
                   attrLengte_1802135007604418486=length(Controller);
                   aantalLF_1802135007604418486 = countc(Controller,'0A'x);
                   maxPassend_1802135007604418486=1-1-aantalLF_1802135007604418486;
                   if attrLengte_1802135007604418486 > max(maxPassend_1802135007604418486,1000)
                     then passend_1802135007604418486 = substr(Controller,1,maxPassend_1802135007604418486);
                     else passend_1802135007604418486 = Controller;
                   passend_1802135007604418486 = tranwrd(passend_1802135007604418486,'9D'x,'D0'x);
                   put passend_1802135007604418486 ~ @;
              end;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Type_rol)
         then put "," @;
         else do;
                   attrLengte_6785800588360122194=length(Type_rol);
                   aantalLF_6785800588360122194 = countc(Type_rol,'0A'x);
                   maxPassend_6785800588360122194=30-1-aantalLF_6785800588360122194;
                   if attrLengte_6785800588360122194 > max(maxPassend_6785800588360122194,1000)
                     then passend_6785800588360122194 = substr(Type_rol,1,maxPassend_6785800588360122194);
                     else passend_6785800588360122194 = Type_rol;
                   passend_6785800588360122194 = tranwrd(passend_6785800588360122194,'9D'x,'D0'x);
                   put passend_6785800588360122194 ~ @;
              end;
       if missing(Ed_rol_cd)
         then put "," @;
         else put Ed_rol_cd @;
       if missing(Ed_rol_oms)
         then put "," @;
         else do;
                   attrLengte_1807973709382915987=length(Ed_rol_oms);
                   aantalLF_1807973709382915987 = countc(Ed_rol_oms,'0A'x);
                   maxPassend_1807973709382915987=50-1-aantalLF_1807973709382915987;
                   if attrLengte_1807973709382915987 > max(maxPassend_1807973709382915987,1000)
                     then passend_1807973709382915987 = substr(Ed_rol_oms,1,maxPassend_1807973709382915987);
                     else passend_1807973709382915987 = Ed_rol_oms;
                   passend_1807973709382915987 = tranwrd(passend_1807973709382915987,'9D'x,'D0'x);
                   put passend_1807973709382915987 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_STM_SBI AS
   SELECT t1.Sbi_cd,
          t1.Sbi_oms,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user
     FROM DATAQASG.STM_SBI_TCMG t1;
QUIT;

data MIGRATIE.BAS_STM_SBI;
  set MIGRATIE.BAS_STM_SBI;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_STM_SBI.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Sbi_cd" 
       ','
          "Sbi_oms" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_STM_SBI   end=EFIEOD; 
       format Sbi_cd best12. ;
       format Sbi_oms  ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Sbi_cd)
         then put "," @;
         else put Sbi_cd @;
       if missing(Sbi_oms)
         then put "," @;
         else do;
                   attrLengte_3943580785683993491=length(Sbi_oms);
                   aantalLF_3943580785683993491 = countc(Sbi_oms,'0A'x);
                   maxPassend_3943580785683993491=500-1-aantalLF_3943580785683993491;
                   if attrLengte_3943580785683993491 > max(maxPassend_3943580785683993491,1000)
                     then passend_3943580785683993491 = substr(Sbi_oms,1,maxPassend_3943580785683993491);
                     else passend_3943580785683993491 = Sbi_oms;
                   passend_3943580785683993491 = tranwrd(passend_3943580785683993491,'9D'x,'D0'x);
                   put passend_3943580785683993491 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_STM_STATUS AS
   SELECT t1.Sts_cd,
          t1.Sts_oms,
          t1.Ssg_cd,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Sts_e_indienen,
          t1.Eindstatus,
          t1.Sts_e_loket
     FROM DATAQASG.STM_STATUS_TCMG t1;
QUIT;

data MIGRATIE.BAS_STM_STATUS;
  set MIGRATIE.BAS_STM_STATUS;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_STM_STATUS.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Sts_cd" 
       ','
          "Sts_oms" 
       ','
          "Ssg_cd" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "Sts_e_indienen" 
       ','
          "Eindstatus" 
       ','
          "Sts_e_loket" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_STM_STATUS   end=EFIEOD; 
       format Sts_cd  ;
       format Sts_oms  ;
       format Ssg_cd  ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format Sts_e_indienen  ;
       format Eindstatus  ;
       format Sts_e_loket  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Sts_cd)
         then put "," @;
         else do;
                   attrLengte_1792820026946084444=length(Sts_cd);
                   aantalLF_1792820026946084444 = countc(Sts_cd,'0A'x);
                   maxPassend_1792820026946084444=3-1-aantalLF_1792820026946084444;
                   if attrLengte_1792820026946084444 > max(maxPassend_1792820026946084444,1000)
                     then passend_1792820026946084444 = substr(Sts_cd,1,maxPassend_1792820026946084444);
                     else passend_1792820026946084444 = Sts_cd;
                   passend_1792820026946084444 = tranwrd(passend_1792820026946084444,'9D'x,'D0'x);
                   put passend_1792820026946084444 ~ @;
              end;
       if missing(Sts_oms)
         then put "," @;
         else do;
                   attrLengte_7514770531092261719=length(Sts_oms);
                   aantalLF_7514770531092261719 = countc(Sts_oms,'0A'x);
                   maxPassend_7514770531092261719=50-1-aantalLF_7514770531092261719;
                   if attrLengte_7514770531092261719 > max(maxPassend_7514770531092261719,1000)
                     then passend_7514770531092261719 = substr(Sts_oms,1,maxPassend_7514770531092261719);
                     else passend_7514770531092261719 = Sts_oms;
                   passend_7514770531092261719 = tranwrd(passend_7514770531092261719,'9D'x,'D0'x);
                   put passend_7514770531092261719 ~ @;
              end;
       if missing(Ssg_cd)
         then put "," @;
         else do;
                   attrLengte_1782260468804165719=length(Ssg_cd);
                   aantalLF_1782260468804165719 = countc(Ssg_cd,'0A'x);
                   maxPassend_1782260468804165719=1-1-aantalLF_1782260468804165719;
                   if attrLengte_1782260468804165719 > max(maxPassend_1782260468804165719,1000)
                     then passend_1782260468804165719 = substr(Ssg_cd,1,maxPassend_1782260468804165719);
                     else passend_1782260468804165719 = Ssg_cd;
                   passend_1782260468804165719 = tranwrd(passend_1782260468804165719,'9D'x,'D0'x);
                   put passend_1782260468804165719 ~ @;
              end;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Sts_e_indienen)
         then put "," @;
         else do;
                   attrLengte_3738995019246665905=length(Sts_e_indienen);
                   aantalLF_3738995019246665905 = countc(Sts_e_indienen,'0A'x);
                   maxPassend_3738995019246665905=50-1-aantalLF_3738995019246665905;
                   if attrLengte_3738995019246665905 > max(maxPassend_3738995019246665905,1000)
                     then passend_3738995019246665905 = substr(Sts_e_indienen,1,maxPassend_3738995019246665905);
                     else passend_3738995019246665905 = Sts_e_indienen;
                   passend_3738995019246665905 = tranwrd(passend_3738995019246665905,'9D'x,'D0'x);
                   put passend_3738995019246665905 ~ @;
              end;
       if missing(Eindstatus)
         then put "," @;
         else do;
                   attrLengte_6709342567121400716=length(Eindstatus);
                   aantalLF_6709342567121400716 = countc(Eindstatus,'0A'x);
                   maxPassend_6709342567121400716=1-1-aantalLF_6709342567121400716;
                   if attrLengte_6709342567121400716 > max(maxPassend_6709342567121400716,1000)
                     then passend_6709342567121400716 = substr(Eindstatus,1,maxPassend_6709342567121400716);
                     else passend_6709342567121400716 = Eindstatus;
                   passend_6709342567121400716 = tranwrd(passend_6709342567121400716,'9D'x,'D0'x);
                   put passend_6709342567121400716 ~ @;
              end;
       if missing(Sts_e_loket)
         then put "," @;
         else do;
                   attrLengte_1680578028301391311=length(Sts_e_loket);
                   aantalLF_1680578028301391311 = countc(Sts_e_loket,'0A'x);
                   maxPassend_1680578028301391311=50-1-aantalLF_1680578028301391311;
                   if attrLengte_1680578028301391311 > max(maxPassend_1680578028301391311,1000)
                     then passend_1680578028301391311 = substr(Sts_e_loket,1,maxPassend_1680578028301391311);
                     else passend_1680578028301391311 = Sts_e_loket;
                   passend_1680578028301391311 = tranwrd(passend_1680578028301391311,'9D'x,'D0'x);
                   put passend_1680578028301391311 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_STM_STATUSOVERG_BIJ_BRIEF AS
   SELECT t1.Van_status,
          t1.naar_status,
          t1.Ssg_cd,
          t1.Cst_cd,
          t1.Creatie_user,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Mutatie_user,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat
     FROM DATAQASG.STM_STATUSOVERG_BIJ_BRIEF_TCMG t1;
QUIT;

data MIGRATIE.BAS_STM_STATUSOVERG_BIJ_BRIEF;
  set MIGRATIE.BAS_STM_STATUSOVERG_BIJ_BRIEF;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_STM_STATUSOVERG_BIJ_BRIEF.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Van_status" 
       ','
          "naar_status" 
       ','
          "Ssg_cd" 
       ','
          "Cst_cd" 
       ','
          "Creatie_user" 
       ','
          "Creatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "Mutatie_dat" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_STM_STATUSOVERG_BIJ_BRIEF   end=EFIEOD; 
       format Van_status  ;
       format naar_status  ;
       format Ssg_cd  ;
       format Cst_cd  ;
       format Creatie_user  ;
       format Creatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format Mutatie_dat B8601DT19. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Van_status)
         then put "," @;
         else do;
                   attrLengte_6930841630683810202=length(Van_status);
                   aantalLF_6930841630683810202 = countc(Van_status,'0A'x);
                   maxPassend_6930841630683810202=3-1-aantalLF_6930841630683810202;
                   if attrLengte_6930841630683810202 > max(maxPassend_6930841630683810202,1000)
                     then passend_6930841630683810202 = substr(Van_status,1,maxPassend_6930841630683810202);
                     else passend_6930841630683810202 = Van_status;
                   passend_6930841630683810202 = tranwrd(passend_6930841630683810202,'9D'x,'D0'x);
                   put passend_6930841630683810202 ~ @;
              end;
       if missing(naar_status)
         then put "," @;
         else do;
                   attrLengte_2781314311842969374=length(naar_status);
                   aantalLF_2781314311842969374 = countc(naar_status,'0A'x);
                   maxPassend_2781314311842969374=3-1-aantalLF_2781314311842969374;
                   if attrLengte_2781314311842969374 > max(maxPassend_2781314311842969374,1000)
                     then passend_2781314311842969374 = substr(naar_status,1,maxPassend_2781314311842969374);
                     else passend_2781314311842969374 = naar_status;
                   passend_2781314311842969374 = tranwrd(passend_2781314311842969374,'9D'x,'D0'x);
                   put passend_2781314311842969374 ~ @;
              end;
       if missing(Ssg_cd)
         then put "," @;
         else do;
                   attrLengte_1782260468804165719=length(Ssg_cd);
                   aantalLF_1782260468804165719 = countc(Ssg_cd,'0A'x);
                   maxPassend_1782260468804165719=1-1-aantalLF_1782260468804165719;
                   if attrLengte_1782260468804165719 > max(maxPassend_1782260468804165719,1000)
                     then passend_1782260468804165719 = substr(Ssg_cd,1,maxPassend_1782260468804165719);
                     else passend_1782260468804165719 = Ssg_cd;
                   passend_1782260468804165719 = tranwrd(passend_1782260468804165719,'9D'x,'D0'x);
                   put passend_1782260468804165719 ~ @;
              end;
       if missing(Cst_cd)
         then put "," @;
         else do;
                   attrLengte_6311705118691231734=length(Cst_cd);
                   aantalLF_6311705118691231734 = countc(Cst_cd,'0A'x);
                   maxPassend_6311705118691231734=8-1-aantalLF_6311705118691231734;
                   if attrLengte_6311705118691231734 > max(maxPassend_6311705118691231734,1000)
                     then passend_6311705118691231734 = substr(Cst_cd,1,maxPassend_6311705118691231734);
                     else passend_6311705118691231734 = Cst_cd;
                   passend_6311705118691231734 = tranwrd(passend_6311705118691231734,'9D'x,'D0'x);
                   put passend_6311705118691231734 ~ @;
              end;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_VKM_TOEGEV_VAR_VELD_WAARDE AS
   SELECT t1.Vkt_id,
          t1.Fysieke_naam,
          t1.Waarde,
          t1.Volgorde
     FROM DATAQASG.VKM_TOEGEV_VAR_VELD_WAARDE_TCMG t1;
QUIT;

data MIGRATIE.BAS_VKM_TOEGEV_VAR_VELD_WAARDE;
  set MIGRATIE.BAS_VKM_TOEGEV_VAR_VELD_WAARDE;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_VKM_TOEGEV_VAR_VELD_WAARDE.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Vkt_id" 
       ','
          "Fysieke_naam" 
       ','
          "Waarde" 
       ','
          "Volgorde" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_VKM_TOEGEV_VAR_VELD_WAARDE   end=EFIEOD; 
       format Vkt_id best12. ;
       format Fysieke_naam  ;
       format Waarde  ;
       format Volgorde best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Vkt_id)
         then put "," @;
         else put Vkt_id @;
       if missing(Fysieke_naam)
         then put "," @;
         else do;
                   attrLengte_8215966990912033166=length(Fysieke_naam);
                   aantalLF_8215966990912033166 = countc(Fysieke_naam,'0A'x);
                   maxPassend_8215966990912033166=30-1-aantalLF_8215966990912033166;
                   if attrLengte_8215966990912033166 > max(maxPassend_8215966990912033166,1000)
                     then passend_8215966990912033166 = substr(Fysieke_naam,1,maxPassend_8215966990912033166);
                     else passend_8215966990912033166 = Fysieke_naam;
                   passend_8215966990912033166 = tranwrd(passend_8215966990912033166,'9D'x,'D0'x);
                   put passend_8215966990912033166 ~ @;
              end;
       if missing(Waarde)
         then put "," @;
         else do;
                   attrLengte_1568641964639052694=length(Waarde);
                   aantalLF_1568641964639052694 = countc(Waarde,'0A'x);
                   maxPassend_1568641964639052694=255-1-aantalLF_1568641964639052694;
                   if attrLengte_1568641964639052694 > max(maxPassend_1568641964639052694,1000)
                     then passend_1568641964639052694 = substr(Waarde,1,maxPassend_1568641964639052694);
                     else passend_1568641964639052694 = Waarde;
                   passend_1568641964639052694 = tranwrd(passend_1568641964639052694,'9D'x,'D0'x);
                   put passend_1568641964639052694 ~ @;
              end;
       if missing(Volgorde)
         then put "," @;
         else put Volgorde @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_VKM_TOEGEVOEGD_VAR_VELD AS
   SELECT t1.Vkt_id,
          t1.Fysieke_naam,
          t1.Datum_start FORMAT=B8601DT19. AS Datum_start,
          t1.Datum_einde FORMAT=B8601DT19. AS Datum_einde,
          t1.Volgorde,
          t1.Verplicht_jn,
          t1.Prompt,
          t1.Min_waarde,
          t1.Max_waarde,
          t1.Default_waarde,
          t1.Helptekst
     FROM DATAQASG.VKM_TOEGEVOEGD_VAR_VELD_TCMG t1;
QUIT;

data MIGRATIE.BAS_VKM_TOEGEVOEGD_VAR_VELD;
  set MIGRATIE.BAS_VKM_TOEGEVOEGD_VAR_VELD;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_VKM_TOEGEVOEGD_VAR_VELD.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Vkt_id" 
       ','
          "Fysieke_naam" 
       ','
          "Datum_start" 
       ','
          "Datum_einde" 
       ','
          "Volgorde" 
       ','
          "Verplicht_jn" 
       ','
          "Prompt" 
       ','
          "Min_waarde" 
       ','
          "Max_waarde" 
       ','
          "Default_waarde" 
       ','
          "Helptekst" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_VKM_TOEGEVOEGD_VAR_VELD   end=EFIEOD; 
       format Vkt_id best12. ;
       format Fysieke_naam  ;
       format Datum_start B8601DT19. ;
       format Datum_einde B8601DT19. ;
       format Volgorde best12. ;
       format Verplicht_jn  ;
       format Prompt  ;
       format Min_waarde best12. ;
       format Max_waarde best12. ;
       format Default_waarde  ;
       format Helptekst  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Vkt_id)
         then put "," @;
         else put Vkt_id @;
       if missing(Fysieke_naam)
         then put "," @;
         else do;
                   attrLengte_8215966990912033166=length(Fysieke_naam);
                   aantalLF_8215966990912033166 = countc(Fysieke_naam,'0A'x);
                   maxPassend_8215966990912033166=30-1-aantalLF_8215966990912033166;
                   if attrLengte_8215966990912033166 > max(maxPassend_8215966990912033166,1000)
                     then passend_8215966990912033166 = substr(Fysieke_naam,1,maxPassend_8215966990912033166);
                     else passend_8215966990912033166 = Fysieke_naam;
                   passend_8215966990912033166 = tranwrd(passend_8215966990912033166,'9D'x,'D0'x);
                   put passend_8215966990912033166 ~ @;
              end;
       if missing(Datum_start)
         then put "," @;
         else put Datum_start @;
       if missing(Datum_einde)
         then put "," @;
         else put Datum_einde @;
       if missing(Volgorde)
         then put "," @;
         else put Volgorde @;
       if missing(Verplicht_jn)
         then put "," @;
         else do;
                   attrLengte_1020401250997552318=length(Verplicht_jn);
                   aantalLF_1020401250997552318 = countc(Verplicht_jn,'0A'x);
                   maxPassend_1020401250997552318=1-1-aantalLF_1020401250997552318;
                   if attrLengte_1020401250997552318 > max(maxPassend_1020401250997552318,1000)
                     then passend_1020401250997552318 = substr(Verplicht_jn,1,maxPassend_1020401250997552318);
                     else passend_1020401250997552318 = Verplicht_jn;
                   passend_1020401250997552318 = tranwrd(passend_1020401250997552318,'9D'x,'D0'x);
                   put passend_1020401250997552318 ~ @;
              end;
       if missing(Prompt)
         then put "," @;
         else do;
                   attrLengte_2040212189845707876=length(Prompt);
                   aantalLF_2040212189845707876 = countc(Prompt,'0A'x);
                   maxPassend_2040212189845707876=40-1-aantalLF_2040212189845707876;
                   if attrLengte_2040212189845707876 > max(maxPassend_2040212189845707876,1000)
                     then passend_2040212189845707876 = substr(Prompt,1,maxPassend_2040212189845707876);
                     else passend_2040212189845707876 = Prompt;
                   passend_2040212189845707876 = tranwrd(passend_2040212189845707876,'9D'x,'D0'x);
                   put passend_2040212189845707876 ~ @;
              end;
       if missing(Min_waarde)
         then put "," @;
         else put Min_waarde @;
       if missing(Max_waarde)
         then put "," @;
         else put Max_waarde @;
       if missing(Default_waarde)
         then put "," @;
         else do;
                   attrLengte_8662422097031864624=length(Default_waarde);
                   aantalLF_8662422097031864624 = countc(Default_waarde,'0A'x);
                   maxPassend_8662422097031864624=255-1-aantalLF_8662422097031864624;
                   if attrLengte_8662422097031864624 > max(maxPassend_8662422097031864624,1000)
                     then passend_8662422097031864624 = substr(Default_waarde,1,maxPassend_8662422097031864624);
                     else passend_8662422097031864624 = Default_waarde;
                   passend_8662422097031864624 = tranwrd(passend_8662422097031864624,'9D'x,'D0'x);
                   put passend_8662422097031864624 ~ @;
              end;
       if missing(Helptekst)
         then put "," @;
         else do;
                   attrLengte_5028727268169430923=length(Helptekst);
                   aantalLF_5028727268169430923 = countc(Helptekst,'0A'x);
                   maxPassend_5028727268169430923=72-1-aantalLF_5028727268169430923;
                   if attrLengte_5028727268169430923 > max(maxPassend_5028727268169430923,1000)
                     then passend_5028727268169430923 = substr(Helptekst,1,maxPassend_5028727268169430923);
                     else passend_5028727268169430923 = Helptekst;
                   passend_5028727268169430923 = tranwrd(passend_5028727268169430923,'9D'x,'D0'x);
                   put passend_5028727268169430923 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_VKM_VAR_GEGEVENS AS
   SELECT t1.BEDRAG_01,
          t1.BEDRAG_02,
          t1.BEDRAG_03,
          t1.BEDRAG_04,
          t1.BEDRAG_05,
          t1.BEDRAG_06,
          t1.BEDRAG_07,
          t1.BEDRAG_08,
          t1.BEDRAG_09,
          t1.BEDRAG_10,
          t1.BEDRAG_11,
          t1.BEDRAG_12,
          t1.BEDRAG_13,
          t1.BEDRAG_14,
          t1.BEDRAG_15,
          t1.BEDRAG_16,
          t1.BEDRAG_17,
          t1.BEDRAG_18,
          t1.BEDRAG_19,
          t1.BEDRAG_20,
          t1.BEDRAG_21,
          t1.BEDRAG_22,
          t1.BEDRAG_23,
          t1.BEDRAG_24,
          t1.BEDRAG_25,
          t1.BEDRAG_26,
          t1.BEDRAG_27,
          t1.BEDRAG_28,
          t1.BEDRAG_29,
          t1.BEDRAG_30,
          t1.BEDRAG_31,
          t1.BEDRAG_32,
          t1.BEDRAG_33,
          t1.BEDRAG_34,
          t1.BEDRAG_35,
          t1.BEDRAG_36,
          t1.BEDRAG_37,
          t1.BEDRAG_38,
          t1.BEDRAG_39,
          t1.BEDRAG_40,
          t1.Creatie_dat FORMAT=B8601DT19. AS Creatie_dat,
          t1.Creatie_user,
          t1.DATUM_01 FORMAT=B8601DT19. AS DATUM_01,
          t1.DATUM_02 FORMAT=B8601DT19. AS DATUM_02,
          t1.DATUM_03 FORMAT=B8601DT19. AS DATUM_03,
          t1.DATUM_04 FORMAT=B8601DT19. AS DATUM_04,
          t1.DATUM_05 FORMAT=B8601DT19. AS DATUM_05,
          t1.DATUM_06 FORMAT=B8601DT19. AS DATUM_06,
          t1.DATUM_07 FORMAT=B8601DT19. AS DATUM_07,
          t1.DATUM_08 FORMAT=B8601DT19. AS DATUM_08,
          t1.DATUM_09 FORMAT=B8601DT19. AS DATUM_09,
          t1.DATUM_10 FORMAT=B8601DT19. AS DATUM_10,
          t1.DATUM_11 FORMAT=B8601DT19. AS DATUM_11,
          t1.DATUM_12 FORMAT=B8601DT19. AS DATUM_12,
          t1.DATUM_13 FORMAT=B8601DT19. AS DATUM_13,
          t1.DATUM_14 FORMAT=B8601DT19. AS DATUM_14,
          t1.DATUM_15 FORMAT=B8601DT19. AS DATUM_15,
          t1.DATUM_16 FORMAT=B8601DT19. AS DATUM_16,
          t1.DATUM_17 FORMAT=B8601DT19. AS DATUM_17,
          t1.DATUM_18 FORMAT=B8601DT19. AS DATUM_18,
          t1.DATUM_19 FORMAT=B8601DT19. AS DATUM_19,
          t1.DATUM_20 FORMAT=B8601DT19. AS DATUM_20,
          t1.DATUM_AANMAAK FORMAT=B8601DT19. AS DATUM_AANMAAK,
          t1.DROPDOWNLIST_01,
          t1.DROPDOWNLIST_02,
          t1.DROPDOWNLIST_03,
          t1.DROPDOWNLIST_04,
          t1.DROPDOWNLIST_05,
          t1.DROPDOWNLIST_06,
          t1.DROPDOWNLIST_07,
          t1.DROPDOWNLIST_08,
          t1.DROPDOWNLIST_09,
          t1.DROPDOWNLIST_10,
          t1.DROPDOWNLIST_11,
          t1.DROPDOWNLIST_12,
          t1.DROPDOWNLIST_13,
          t1.DROPDOWNLIST_14,
          t1.DROPDOWNLIST_15,
          t1.DROPDOWNLIST_16,
          t1.DROPDOWNLIST_17,
          t1.DROPDOWNLIST_18,
          t1.DROPDOWNLIST_19,
          t1.DROPDOWNLIST_20,
          t1.DROPDOWNLIST_21,
          t1.DROPDOWNLIST_22,
          t1.DROPDOWNLIST_23,
          t1.DROPDOWNLIST_24,
          t1.DROPDOWNLIST_25,
          t1.DROPDOWNLIST_26,
          t1.DROPDOWNLIST_27,
          t1.DROPDOWNLIST_28,
          t1.DROPDOWNLIST_29,
          t1.DROPDOWNLIST_30,
          t1.DROPDOWNLIST_31,
          t1.DROPDOWNLIST_32,
          t1.DROPDOWNLIST_33,
          t1.DROPDOWNLIST_34,
          t1.DROPDOWNLIST_35,
          t1.DROPDOWNLIST_36,
          t1.DROPDOWNLIST_37,
          t1.DROPDOWNLIST_38,
          t1.DROPDOWNLIST_39,
          t1.DROPDOWNLIST_40,
          t1.INT_01,
          t1.INT_02,
          t1.INT_03,
          t1.INT_04,
          t1.INT_05,
          t1.INT_06,
          t1.INT_07,
          t1.INT_08,
          t1.INT_09,
          t1.INT_10,
          t1.INT_11,
          t1.INT_12,
          t1.INT_13,
          t1.INT_14,
          t1.INT_15,
          t1.INT_16,
          t1.INT_17,
          t1.INT_18,
          t1.INT_19,
          t1.INT_20,
          t1.INT_21,
          t1.INT_22,
          t1.INT_23,
          t1.INT_24,
          t1.INT_25,
          t1.INT_26,
          t1.INT_27,
          t1.INT_28,
          t1.INT_29,
          t1.INT_30,
          t1.INT_31,
          t1.INT_32,
          t1.INT_33,
          t1.INT_34,
          t1.INT_35,
          t1.INT_36,
          t1.INT_37,
          t1.INT_38,
          t1.INT_39,
          t1.INT_40,
          t1.JA_NEE_01,
          t1.JA_NEE_02,
          t1.JA_NEE_03,
          t1.JA_NEE_04,
          t1.JA_NEE_05,
          t1.JA_NEE_06,
          t1.JA_NEE_07,
          t1.JA_NEE_08,
          t1.JA_NEE_09,
          t1.JA_NEE_10,
          t1.JA_NEE_11,
          t1.JA_NEE_12,
          t1.JA_NEE_13,
          t1.JA_NEE_14,
          t1.JA_NEE_15,
          t1.JA_NEE_16,
          t1.JA_NEE_17,
          t1.JA_NEE_18,
          t1.JA_NEE_19,
          t1.JA_NEE_20,
          t1.JA_NEE_21,
          t1.JA_NEE_22,
          t1.JA_NEE_23,
          t1.JA_NEE_24,
          t1.JA_NEE_25,
          t1.JA_NEE_26,
          t1.JA_NEE_27,
          t1.JA_NEE_28,
          t1.JA_NEE_29,
          t1.JA_NEE_30,
          t1.JA_NEE_NVT_01,
          t1.JA_NEE_NVT_02,
          t1.JA_NEE_NVT_03,
          t1.JA_NEE_NVT_04,
          t1.JA_NEE_NVT_05,
          t1.JA_NEE_NVT_06,
          t1.JA_NEE_NVT_07,
          t1.JA_NEE_NVT_08,
          t1.JA_NEE_NVT_09,
          t1.JA_NEE_NVT_10,
          t1.JA_NEE_NVT_11,
          t1.JA_NEE_NVT_12,
          t1.JA_NEE_NVT_13,
          t1.JA_NEE_NVT_14,
          t1.JA_NEE_NVT_15,
          t1.JA_NEE_NVT_16,
          t1.JA_NEE_NVT_17,
          t1.JA_NEE_NVT_18,
          t1.JA_NEE_NVT_19,
          t1.JA_NEE_NVT_20,
          t1.JA_NEE_ONB_01,
          t1.JA_NEE_ONB_02,
          t1.JA_NEE_ONB_03,
          t1.JA_NEE_ONB_04,
          t1.JA_NEE_ONB_05,
          t1.JA_NEE_ONB_06,
          t1.JA_NEE_ONB_07,
          t1.JA_NEE_ONB_08,
          t1.JA_NEE_ONB_09,
          t1.JA_NEE_ONB_10,
          t1.JA_NEE_ONB_11,
          t1.JA_NEE_ONB_12,
          t1.JA_NEE_ONB_13,
          t1.JA_NEE_ONB_14,
          t1.JA_NEE_ONB_15,
          t1.JA_NEE_ONB_16,
          t1.JA_NEE_ONB_17,
          t1.JA_NEE_ONB_18,
          t1.JA_NEE_ONB_19,
          t1.JA_NEE_ONB_20,
          t1.Mutatie_dat FORMAT=B8601DT19. AS Mutatie_dat,
          t1.Mutatie_user,
          t1.NUMERIEK_01,
          t1.NUMERIEK_02,
          t1.NUMERIEK_03,
          t1.NUMERIEK_04,
          t1.NUMERIEK_05,
          t1.NUMERIEK_06,
          t1.NUMERIEK_07,
          t1.NUMERIEK_08,
          t1.NUMERIEK_09,
          t1.NUMERIEK_10,
          t1.NUMERIEK_11,
          t1.NUMERIEK_12,
          t1.NUMERIEK_13,
          t1.NUMERIEK_14,
          t1.NUMERIEK_15,
          t1.NUMERIEK_16,
          t1.NUMERIEK_17,
          t1.NUMERIEK_18,
          t1.NUMERIEK_19,
          t1.NUMERIEK_20,
          t1.NUMERIEK_21,
          t1.NUMERIEK_22,
          t1.NUMERIEK_23,
          t1.NUMERIEK_24,
          t1.NUMERIEK_25,
          t1.NUMERIEK_26,
          t1.NUMERIEK_27,
          t1.NUMERIEK_28,
          t1.NUMERIEK_29,
          t1.NUMERIEK_30,
          t1.NUMERIEK_31,
          t1.NUMERIEK_32,
          t1.NUMERIEK_33,
          t1.NUMERIEK_34,
          t1.NUMERIEK_35,
          t1.NUMERIEK_36,
          t1.NUMERIEK_37,
          t1.NUMERIEK_38,
          t1.NUMERIEK_39,
          t1.NUMERIEK_40,
          t1.OPTIONBUTTON_01,
          t1.OPTIONBUTTON_02,
          t1.OPTIONBUTTON_03,
          t1.OPTIONBUTTON_04,
          t1.OPTIONBUTTON_05,
          t1.OPTIONBUTTON_06,
          t1.OPTIONBUTTON_07,
          t1.OPTIONBUTTON_08,
          t1.OPTIONBUTTON_09,
          t1.OPTIONBUTTON_10,
          t1.OPTIONBUTTON_11,
          t1.OPTIONBUTTON_12,
          t1.OPTIONBUTTON_13,
          t1.OPTIONBUTTON_14,
          t1.OPTIONBUTTON_15,
          t1.OPTIONBUTTON_16,
          t1.OPTIONBUTTON_17,
          t1.OPTIONBUTTON_18,
          t1.OPTIONBUTTON_19,
          t1.OPTIONBUTTON_20,
          t1.TEKSTBLOK_01,
          t1.TEKSTBLOK_02,
          t1.TEKSTBLOK_03,
          t1.TEKSTBLOK_04,
          t1.TEKSTBLOK_05,
          t1.TEKSTBLOK_06,
          t1.TEKSTBLOK_07,
          t1.TEKSTBLOK_08,
          t1.TEKSTBLOK_09,
          t1.TEKSTBLOK_10,
          t1.VARCHAR_60_01,
          t1.VARCHAR_60_02,
          t1.VARCHAR_60_03,
          t1.VARCHAR_60_04,
          t1.VARCHAR_60_05,
          t1.VARCHAR_60_06,
          t1.VARCHAR_60_07,
          t1.VARCHAR_60_08,
          t1.VARCHAR_60_09,
          t1.VARCHAR_60_10,
          t1.VARCHAR_60_11,
          t1.VARCHAR_60_12,
          t1.VARCHAR_60_13,
          t1.VARCHAR_60_14,
          t1.VARCHAR_60_15,
          t1.VARCHAR_60_16,
          t1.VARCHAR_60_17,
          t1.VARCHAR_60_18,
          t1.VARCHAR_60_19,
          t1.VARCHAR_60_20,
          t1.VARCHAR_60_21,
          t1.VARCHAR_60_22,
          t1.VARCHAR_60_23,
          t1.VARCHAR_60_24,
          t1.VARCHAR_60_25,
          t1.VARCHAR_60_26,
          t1.VARCHAR_60_27,
          t1.VARCHAR_60_28,
          t1.VARCHAR_60_29,
          t1.VARCHAR_60_30,
          t1.VARCHAR_60_31,
          t1.VARCHAR_60_32,
          t1.VARCHAR_60_33,
          t1.VARCHAR_60_34,
          t1.VARCHAR_60_35,
          t1.VARCHAR_60_36,
          t1.VARCHAR_60_37,
          t1.VARCHAR_60_38,
          t1.VARCHAR_60_39,
          t1.VARCHAR_60_40,
          t1.VGS_ID,
          t1.'VKM_VAR_GEGEVENS_DOS'n AS VVG_VKM_VAR_GEGEVENS_DOS,
          t1.'VKM_VAR_GEGEVENS_PRG'n AS VVG_VKM_VAR_GEGEVENS_PRG,
          t1.'VKT_ID'n AS VVG_VKT_ID,
          t1.'DOS_ID'n AS VVG_DOS_ID
     FROM DATAQASG.VKM_VAR_GEGEVENS_TCMG t1;
QUIT;

data MIGRATIE.BAS_VKM_VAR_GEGEVENS;
  set MIGRATIE.BAS_VKM_VAR_GEGEVENS;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_VKM_VAR_GEGEVENS.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "BEDRAG_01" 
       ','
          "BEDRAG_02" 
       ','
          "BEDRAG_03" 
       ','
          "BEDRAG_04" 
       ','
          "BEDRAG_05" 
       ','
          "BEDRAG_06" 
       ','
          "BEDRAG_07" 
       ','
          "BEDRAG_08" 
       ','
          "BEDRAG_09" 
       ','
          "BEDRAG_10" 
       ','
          "BEDRAG_11" 
       ','
          "BEDRAG_12" 
       ','
          "BEDRAG_13" 
       ','
          "BEDRAG_14" 
       ','
          "BEDRAG_15" 
       ','
          "BEDRAG_16" 
       ','
          "BEDRAG_17" 
       ','
          "BEDRAG_18" 
       ','
          "BEDRAG_19" 
       ','
          "BEDRAG_20" 
       ','
          "BEDRAG_21" 
       ','
          "BEDRAG_22" 
       ','
          "BEDRAG_23" 
       ','
          "BEDRAG_24" 
       ','
          "BEDRAG_25" 
       ','
          "BEDRAG_26" 
       ','
          "BEDRAG_27" 
       ','
          "BEDRAG_28" 
       ','
          "BEDRAG_29" 
       ','
          "BEDRAG_30" 
       ','
          "BEDRAG_31" 
       ','
          "BEDRAG_32" 
       ','
          "BEDRAG_33" 
       ','
          "BEDRAG_34" 
       ','
          "BEDRAG_35" 
       ','
          "BEDRAG_36" 
       ','
          "BEDRAG_37" 
       ','
          "BEDRAG_38" 
       ','
          "BEDRAG_39" 
       ','
          "BEDRAG_40" 
       ','
          "Creatie_dat" 
       ','
          "Creatie_user" 
       ','
          "DATUM_01" 
       ','
          "DATUM_02" 
       ','
          "DATUM_03" 
       ','
          "DATUM_04" 
       ','
          "DATUM_05" 
       ','
          "DATUM_06" 
       ','
          "DATUM_07" 
       ','
          "DATUM_08" 
       ','
          "DATUM_09" 
       ','
          "DATUM_10" 
       ','
          "DATUM_11" 
       ','
          "DATUM_12" 
       ','
          "DATUM_13" 
       ','
          "DATUM_14" 
       ','
          "DATUM_15" 
       ','
          "DATUM_16" 
       ','
          "DATUM_17" 
       ','
          "DATUM_18" 
       ','
          "DATUM_19" 
       ','
          "DATUM_20" 
       ','
          "DATUM_AANMAAK" 
       ','
          "DROPDOWNLIST_01" 
       ','
          "DROPDOWNLIST_02" 
       ','
          "DROPDOWNLIST_03" 
       ','
          "DROPDOWNLIST_04" 
       ','
          "DROPDOWNLIST_05" 
       ','
          "DROPDOWNLIST_06" 
       ','
          "DROPDOWNLIST_07" 
       ','
          "DROPDOWNLIST_08" 
       ','
          "DROPDOWNLIST_09" 
       ','
          "DROPDOWNLIST_10" 
       ','
          "DROPDOWNLIST_11" 
       ','
          "DROPDOWNLIST_12" 
       ','
          "DROPDOWNLIST_13" 
       ','
          "DROPDOWNLIST_14" 
       ','
          "DROPDOWNLIST_15" 
       ','
          "DROPDOWNLIST_16" 
       ','
          "DROPDOWNLIST_17" 
       ','
          "DROPDOWNLIST_18" 
       ','
          "DROPDOWNLIST_19" 
       ','
          "DROPDOWNLIST_20" 
       ','
          "DROPDOWNLIST_21" 
       ','
          "DROPDOWNLIST_22" 
       ','
          "DROPDOWNLIST_23" 
       ','
          "DROPDOWNLIST_24" 
       ','
          "DROPDOWNLIST_25" 
       ','
          "DROPDOWNLIST_26" 
       ','
          "DROPDOWNLIST_27" 
       ','
          "DROPDOWNLIST_28" 
       ','
          "DROPDOWNLIST_29" 
       ','
          "DROPDOWNLIST_30" 
       ','
          "DROPDOWNLIST_31" 
       ','
          "DROPDOWNLIST_32" 
       ','
          "DROPDOWNLIST_33" 
       ','
          "DROPDOWNLIST_34" 
       ','
          "DROPDOWNLIST_35" 
       ','
          "DROPDOWNLIST_36" 
       ','
          "DROPDOWNLIST_37" 
       ','
          "DROPDOWNLIST_38" 
       ','
          "DROPDOWNLIST_39" 
       ','
          "DROPDOWNLIST_40" 
       ','
          "INT_01" 
       ','
          "INT_02" 
       ','
          "INT_03" 
       ','
          "INT_04" 
       ','
          "INT_05" 
       ','
          "INT_06" 
       ','
          "INT_07" 
       ','
          "INT_08" 
       ','
          "INT_09" 
       ','
          "INT_10" 
       ','
          "INT_11" 
       ','
          "INT_12" 
       ','
          "INT_13" 
       ','
          "INT_14" 
       ','
          "INT_15" 
       ','
          "INT_16" 
       ','
          "INT_17" 
       ','
          "INT_18" 
       ','
          "INT_19" 
       ','
          "INT_20" 
       ','
          "INT_21" 
       ','
          "INT_22" 
       ','
          "INT_23" 
       ','
          "INT_24" 
       ','
          "INT_25" 
       ','
          "INT_26" 
       ','
          "INT_27" 
       ','
          "INT_28" 
       ','
          "INT_29" 
       ','
          "INT_30" 
       ','
          "INT_31" 
       ','
          "INT_32" 
       ','
          "INT_33" 
       ','
          "INT_34" 
       ','
          "INT_35" 
       ','
          "INT_36" 
       ','
          "INT_37" 
       ','
          "INT_38" 
       ','
          "INT_39" 
       ','
          "INT_40" 
       ','
          "JA_NEE_01" 
       ','
          "JA_NEE_02" 
       ','
          "JA_NEE_03" 
       ','
          "JA_NEE_04" 
       ','
          "JA_NEE_05" 
       ','
          "JA_NEE_06" 
       ','
          "JA_NEE_07" 
       ','
          "JA_NEE_08" 
       ','
          "JA_NEE_09" 
       ','
          "JA_NEE_10" 
       ','
          "JA_NEE_11" 
       ','
          "JA_NEE_12" 
       ','
          "JA_NEE_13" 
       ','
          "JA_NEE_14" 
       ','
          "JA_NEE_15" 
       ','
          "JA_NEE_16" 
       ','
          "JA_NEE_17" 
       ','
          "JA_NEE_18" 
       ','
          "JA_NEE_19" 
       ','
          "JA_NEE_20" 
       ','
          "JA_NEE_21" 
       ','
          "JA_NEE_22" 
       ','
          "JA_NEE_23" 
       ','
          "JA_NEE_24" 
       ','
          "JA_NEE_25" 
       ','
          "JA_NEE_26" 
       ','
          "JA_NEE_27" 
       ','
          "JA_NEE_28" 
       ','
          "JA_NEE_29" 
       ','
          "JA_NEE_30" 
       ','
          "JA_NEE_NVT_01" 
       ','
          "JA_NEE_NVT_02" 
       ','
          "JA_NEE_NVT_03" 
       ','
          "JA_NEE_NVT_04" 
       ','
          "JA_NEE_NVT_05" 
       ','
          "JA_NEE_NVT_06" 
       ','
          "JA_NEE_NVT_07" 
       ','
          "JA_NEE_NVT_08" 
       ','
          "JA_NEE_NVT_09" 
       ','
          "JA_NEE_NVT_10" 
       ','
          "JA_NEE_NVT_11" 
       ','
          "JA_NEE_NVT_12" 
       ','
          "JA_NEE_NVT_13" 
       ','
          "JA_NEE_NVT_14" 
       ','
          "JA_NEE_NVT_15" 
       ','
          "JA_NEE_NVT_16" 
       ','
          "JA_NEE_NVT_17" 
       ','
          "JA_NEE_NVT_18" 
       ','
          "JA_NEE_NVT_19" 
       ','
          "JA_NEE_NVT_20" 
       ','
          "JA_NEE_ONB_01" 
       ','
          "JA_NEE_ONB_02" 
       ','
          "JA_NEE_ONB_03" 
       ','
          "JA_NEE_ONB_04" 
       ','
          "JA_NEE_ONB_05" 
       ','
          "JA_NEE_ONB_06" 
       ','
          "JA_NEE_ONB_07" 
       ','
          "JA_NEE_ONB_08" 
       ','
          "JA_NEE_ONB_09" 
       ','
          "JA_NEE_ONB_10" 
       ','
          "JA_NEE_ONB_11" 
       ','
          "JA_NEE_ONB_12" 
       ','
          "JA_NEE_ONB_13" 
       ','
          "JA_NEE_ONB_14" 
       ','
          "JA_NEE_ONB_15" 
       ','
          "JA_NEE_ONB_16" 
       ','
          "JA_NEE_ONB_17" 
       ','
          "JA_NEE_ONB_18" 
       ','
          "JA_NEE_ONB_19" 
       ','
          "JA_NEE_ONB_20" 
       ','
          "Mutatie_dat" 
       ','
          "Mutatie_user" 
       ','
          "NUMERIEK_01" 
       ','
          "NUMERIEK_02" 
       ','
          "NUMERIEK_03" 
       ','
          "NUMERIEK_04" 
       ','
          "NUMERIEK_05" 
       ','
          "NUMERIEK_06" 
       ','
          "NUMERIEK_07" 
       ','
          "NUMERIEK_08" 
       ','
          "NUMERIEK_09" 
       ','
          "NUMERIEK_10" 
       ','
          "NUMERIEK_11" 
       ','
          "NUMERIEK_12" 
       ','
          "NUMERIEK_13" 
       ','
          "NUMERIEK_14" 
       ','
          "NUMERIEK_15" 
       ','
          "NUMERIEK_16" 
       ','
          "NUMERIEK_17" 
       ','
          "NUMERIEK_18" 
       ','
          "NUMERIEK_19" 
       ','
          "NUMERIEK_20" 
       ','
          "NUMERIEK_21" 
       ','
          "NUMERIEK_22" 
       ','
          "NUMERIEK_23" 
       ','
          "NUMERIEK_24" 
       ','
          "NUMERIEK_25" 
       ','
          "NUMERIEK_26" 
       ','
          "NUMERIEK_27" 
       ','
          "NUMERIEK_28" 
       ','
          "NUMERIEK_29" 
       ','
          "NUMERIEK_30" 
       ','
          "NUMERIEK_31" 
       ','
          "NUMERIEK_32" 
       ','
          "NUMERIEK_33" 
       ','
          "NUMERIEK_34" 
       ','
          "NUMERIEK_35" 
       ','
          "NUMERIEK_36" 
       ','
          "NUMERIEK_37" 
       ','
          "NUMERIEK_38" 
       ','
          "NUMERIEK_39" 
       ','
          "NUMERIEK_40" 
       ','
          "OPTIONBUTTON_01" 
       ','
          "OPTIONBUTTON_02" 
       ','
          "OPTIONBUTTON_03" 
       ','
          "OPTIONBUTTON_04" 
       ','
          "OPTIONBUTTON_05" 
       ','
          "OPTIONBUTTON_06" 
       ','
          "OPTIONBUTTON_07" 
       ','
          "OPTIONBUTTON_08" 
       ','
          "OPTIONBUTTON_09" 
       ','
          "OPTIONBUTTON_10" 
       ','
          "OPTIONBUTTON_11" 
       ','
          "OPTIONBUTTON_12" 
       ','
          "OPTIONBUTTON_13" 
       ','
          "OPTIONBUTTON_14" 
       ','
          "OPTIONBUTTON_15" 
       ','
          "OPTIONBUTTON_16" 
       ','
          "OPTIONBUTTON_17" 
       ','
          "OPTIONBUTTON_18" 
       ','
          "OPTIONBUTTON_19" 
       ','
          "OPTIONBUTTON_20" 
       ','
          "TEKSTBLOK_01" 
       ','
          "TEKSTBLOK_02" 
       ','
          "TEKSTBLOK_03" 
       ','
          "TEKSTBLOK_04" 
       ','
          "TEKSTBLOK_05" 
       ','
          "TEKSTBLOK_06" 
       ','
          "TEKSTBLOK_07" 
       ','
          "TEKSTBLOK_08" 
       ','
          "TEKSTBLOK_09" 
       ','
          "TEKSTBLOK_10" 
       ','
          "VARCHAR_60_01" 
       ','
          "VARCHAR_60_02" 
       ','
          "VARCHAR_60_03" 
       ','
          "VARCHAR_60_04" 
       ','
          "VARCHAR_60_05" 
       ','
          "VARCHAR_60_06" 
       ','
          "VARCHAR_60_07" 
       ','
          "VARCHAR_60_08" 
       ','
          "VARCHAR_60_09" 
       ','
          "VARCHAR_60_10" 
       ','
          "VARCHAR_60_11" 
       ','
          "VARCHAR_60_12" 
       ','
          "VARCHAR_60_13" 
       ','
          "VARCHAR_60_14" 
       ','
          "VARCHAR_60_15" 
       ','
          "VARCHAR_60_16" 
       ','
          "VARCHAR_60_17" 
       ','
          "VARCHAR_60_18" 
       ','
          "VARCHAR_60_19" 
       ','
          "VARCHAR_60_20" 
       ','
          "VARCHAR_60_21" 
       ','
          "VARCHAR_60_22" 
       ','
          "VARCHAR_60_23" 
       ','
          "VARCHAR_60_24" 
       ','
          "VARCHAR_60_25" 
       ','
          "VARCHAR_60_26" 
       ','
          "VARCHAR_60_27" 
       ','
          "VARCHAR_60_28" 
       ','
          "VARCHAR_60_29" 
       ','
          "VARCHAR_60_30" 
       ','
          "VARCHAR_60_31" 
       ','
          "VARCHAR_60_32" 
       ','
          "VARCHAR_60_33" 
       ','
          "VARCHAR_60_34" 
       ','
          "VARCHAR_60_35" 
       ','
          "VARCHAR_60_36" 
       ','
          "VARCHAR_60_37" 
       ','
          "VARCHAR_60_38" 
       ','
          "VARCHAR_60_39" 
       ','
          "VARCHAR_60_40" 
       ','
          "VGS_ID" 
       ','
          "VVG_VKM_VAR_GEGEVENS_DOS" 
       ','
          "VVG_VKM_VAR_GEGEVENS_PRG" 
       ','
          "VVG_VKT_ID" 
       ','
          "VVG_DOS_ID" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_VKM_VAR_GEGEVENS   end=EFIEOD; 
       format BEDRAG_01 best12. ;
       format BEDRAG_02 best12. ;
       format BEDRAG_03 best12. ;
       format BEDRAG_04 best12. ;
       format BEDRAG_05 best12. ;
       format BEDRAG_06 best12. ;
       format BEDRAG_07 best12. ;
       format BEDRAG_08 best12. ;
       format BEDRAG_09 best12. ;
       format BEDRAG_10 best12. ;
       format BEDRAG_11 best12. ;
       format BEDRAG_12 best12. ;
       format BEDRAG_13 best12. ;
       format BEDRAG_14 best12. ;
       format BEDRAG_15 best12. ;
       format BEDRAG_16 best12. ;
       format BEDRAG_17 best12. ;
       format BEDRAG_18 best12. ;
       format BEDRAG_19 best12. ;
       format BEDRAG_20 best12. ;
       format BEDRAG_21 best12. ;
       format BEDRAG_22 best12. ;
       format BEDRAG_23 best12. ;
       format BEDRAG_24 best12. ;
       format BEDRAG_25 best12. ;
       format BEDRAG_26 best12. ;
       format BEDRAG_27 best12. ;
       format BEDRAG_28 best12. ;
       format BEDRAG_29 best12. ;
       format BEDRAG_30 best12. ;
       format BEDRAG_31 best12. ;
       format BEDRAG_32 best12. ;
       format BEDRAG_33 best12. ;
       format BEDRAG_34 best12. ;
       format BEDRAG_35 best12. ;
       format BEDRAG_36 best12. ;
       format BEDRAG_37 best12. ;
       format BEDRAG_38 best12. ;
       format BEDRAG_39 best12. ;
       format BEDRAG_40 best12. ;
       format Creatie_dat B8601DT19. ;
       format Creatie_user  ;
       format DATUM_01 B8601DT19. ;
       format DATUM_02 B8601DT19. ;
       format DATUM_03 B8601DT19. ;
       format DATUM_04 B8601DT19. ;
       format DATUM_05 B8601DT19. ;
       format DATUM_06 B8601DT19. ;
       format DATUM_07 B8601DT19. ;
       format DATUM_08 B8601DT19. ;
       format DATUM_09 B8601DT19. ;
       format DATUM_10 B8601DT19. ;
       format DATUM_11 B8601DT19. ;
       format DATUM_12 B8601DT19. ;
       format DATUM_13 B8601DT19. ;
       format DATUM_14 B8601DT19. ;
       format DATUM_15 B8601DT19. ;
       format DATUM_16 B8601DT19. ;
       format DATUM_17 B8601DT19. ;
       format DATUM_18 B8601DT19. ;
       format DATUM_19 B8601DT19. ;
       format DATUM_20 B8601DT19. ;
       format DATUM_AANMAAK B8601DT19. ;
       format DROPDOWNLIST_01  ;
       format DROPDOWNLIST_02  ;
       format DROPDOWNLIST_03  ;
       format DROPDOWNLIST_04  ;
       format DROPDOWNLIST_05  ;
       format DROPDOWNLIST_06  ;
       format DROPDOWNLIST_07  ;
       format DROPDOWNLIST_08  ;
       format DROPDOWNLIST_09  ;
       format DROPDOWNLIST_10  ;
       format DROPDOWNLIST_11  ;
       format DROPDOWNLIST_12  ;
       format DROPDOWNLIST_13  ;
       format DROPDOWNLIST_14  ;
       format DROPDOWNLIST_15  ;
       format DROPDOWNLIST_16  ;
       format DROPDOWNLIST_17  ;
       format DROPDOWNLIST_18  ;
       format DROPDOWNLIST_19  ;
       format DROPDOWNLIST_20  ;
       format DROPDOWNLIST_21  ;
       format DROPDOWNLIST_22  ;
       format DROPDOWNLIST_23  ;
       format DROPDOWNLIST_24  ;
       format DROPDOWNLIST_25  ;
       format DROPDOWNLIST_26  ;
       format DROPDOWNLIST_27  ;
       format DROPDOWNLIST_28  ;
       format DROPDOWNLIST_29  ;
       format DROPDOWNLIST_30  ;
       format DROPDOWNLIST_31  ;
       format DROPDOWNLIST_32  ;
       format DROPDOWNLIST_33  ;
       format DROPDOWNLIST_34  ;
       format DROPDOWNLIST_35  ;
       format DROPDOWNLIST_36  ;
       format DROPDOWNLIST_37  ;
       format DROPDOWNLIST_38  ;
       format DROPDOWNLIST_39  ;
       format DROPDOWNLIST_40  ;
       format INT_01 best12. ;
       format INT_02 best12. ;
       format INT_03 best12. ;
       format INT_04 best12. ;
       format INT_05 best12. ;
       format INT_06 best12. ;
       format INT_07 best12. ;
       format INT_08 best12. ;
       format INT_09 best12. ;
       format INT_10 best12. ;
       format INT_11 best12. ;
       format INT_12 best12. ;
       format INT_13 best12. ;
       format INT_14 best12. ;
       format INT_15 best12. ;
       format INT_16 best12. ;
       format INT_17 best12. ;
       format INT_18 best12. ;
       format INT_19 best12. ;
       format INT_20 best12. ;
       format INT_21 best12. ;
       format INT_22 best12. ;
       format INT_23 best12. ;
       format INT_24 best12. ;
       format INT_25 best12. ;
       format INT_26 best12. ;
       format INT_27 best12. ;
       format INT_28 best12. ;
       format INT_29 best12. ;
       format INT_30 best12. ;
       format INT_31 best12. ;
       format INT_32 best12. ;
       format INT_33 best12. ;
       format INT_34 best12. ;
       format INT_35 best12. ;
       format INT_36 best12. ;
       format INT_37 best12. ;
       format INT_38 best12. ;
       format INT_39 best12. ;
       format INT_40 best12. ;
       format JA_NEE_01  ;
       format JA_NEE_02  ;
       format JA_NEE_03  ;
       format JA_NEE_04  ;
       format JA_NEE_05  ;
       format JA_NEE_06  ;
       format JA_NEE_07  ;
       format JA_NEE_08  ;
       format JA_NEE_09  ;
       format JA_NEE_10  ;
       format JA_NEE_11  ;
       format JA_NEE_12  ;
       format JA_NEE_13  ;
       format JA_NEE_14  ;
       format JA_NEE_15  ;
       format JA_NEE_16  ;
       format JA_NEE_17  ;
       format JA_NEE_18  ;
       format JA_NEE_19  ;
       format JA_NEE_20  ;
       format JA_NEE_21  ;
       format JA_NEE_22  ;
       format JA_NEE_23  ;
       format JA_NEE_24  ;
       format JA_NEE_25  ;
       format JA_NEE_26  ;
       format JA_NEE_27  ;
       format JA_NEE_28  ;
       format JA_NEE_29  ;
       format JA_NEE_30  ;
       format JA_NEE_NVT_01  ;
       format JA_NEE_NVT_02  ;
       format JA_NEE_NVT_03  ;
       format JA_NEE_NVT_04  ;
       format JA_NEE_NVT_05  ;
       format JA_NEE_NVT_06  ;
       format JA_NEE_NVT_07  ;
       format JA_NEE_NVT_08  ;
       format JA_NEE_NVT_09  ;
       format JA_NEE_NVT_10  ;
       format JA_NEE_NVT_11  ;
       format JA_NEE_NVT_12  ;
       format JA_NEE_NVT_13  ;
       format JA_NEE_NVT_14  ;
       format JA_NEE_NVT_15  ;
       format JA_NEE_NVT_16  ;
       format JA_NEE_NVT_17  ;
       format JA_NEE_NVT_18  ;
       format JA_NEE_NVT_19  ;
       format JA_NEE_NVT_20  ;
       format JA_NEE_ONB_01  ;
       format JA_NEE_ONB_02  ;
       format JA_NEE_ONB_03  ;
       format JA_NEE_ONB_04  ;
       format JA_NEE_ONB_05  ;
       format JA_NEE_ONB_06  ;
       format JA_NEE_ONB_07  ;
       format JA_NEE_ONB_08  ;
       format JA_NEE_ONB_09  ;
       format JA_NEE_ONB_10  ;
       format JA_NEE_ONB_11  ;
       format JA_NEE_ONB_12  ;
       format JA_NEE_ONB_13  ;
       format JA_NEE_ONB_14  ;
       format JA_NEE_ONB_15  ;
       format JA_NEE_ONB_16  ;
       format JA_NEE_ONB_17  ;
       format JA_NEE_ONB_18  ;
       format JA_NEE_ONB_19  ;
       format JA_NEE_ONB_20  ;
       format Mutatie_dat B8601DT19. ;
       format Mutatie_user  ;
       format NUMERIEK_01 best12. ;
       format NUMERIEK_02 best12. ;
       format NUMERIEK_03 best12. ;
       format NUMERIEK_04 best12. ;
       format NUMERIEK_05 best12. ;
       format NUMERIEK_06 best12. ;
       format NUMERIEK_07 best12. ;
       format NUMERIEK_08 best12. ;
       format NUMERIEK_09 best12. ;
       format NUMERIEK_10 best12. ;
       format NUMERIEK_11 best12. ;
       format NUMERIEK_12 best12. ;
       format NUMERIEK_13 best12. ;
       format NUMERIEK_14 best12. ;
       format NUMERIEK_15 best12. ;
       format NUMERIEK_16 best12. ;
       format NUMERIEK_17 best12. ;
       format NUMERIEK_18 best12. ;
       format NUMERIEK_19 best12. ;
       format NUMERIEK_20 best12. ;
       format NUMERIEK_21 best12. ;
       format NUMERIEK_22 best12. ;
       format NUMERIEK_23 best12. ;
       format NUMERIEK_24 best12. ;
       format NUMERIEK_25 best12. ;
       format NUMERIEK_26 best12. ;
       format NUMERIEK_27 best12. ;
       format NUMERIEK_28 best12. ;
       format NUMERIEK_29 best12. ;
       format NUMERIEK_30 best12. ;
       format NUMERIEK_31 best12. ;
       format NUMERIEK_32 best12. ;
       format NUMERIEK_33 best12. ;
       format NUMERIEK_34 best12. ;
       format NUMERIEK_35 best12. ;
       format NUMERIEK_36 best12. ;
       format NUMERIEK_37 best12. ;
       format NUMERIEK_38 best12. ;
       format NUMERIEK_39 best12. ;
       format NUMERIEK_40 best12. ;
       format OPTIONBUTTON_01  ;
       format OPTIONBUTTON_02  ;
       format OPTIONBUTTON_03  ;
       format OPTIONBUTTON_04  ;
       format OPTIONBUTTON_05  ;
       format OPTIONBUTTON_06  ;
       format OPTIONBUTTON_07  ;
       format OPTIONBUTTON_08  ;
       format OPTIONBUTTON_09  ;
       format OPTIONBUTTON_10  ;
       format OPTIONBUTTON_11  ;
       format OPTIONBUTTON_12  ;
       format OPTIONBUTTON_13  ;
       format OPTIONBUTTON_14  ;
       format OPTIONBUTTON_15  ;
       format OPTIONBUTTON_16  ;
       format OPTIONBUTTON_17  ;
       format OPTIONBUTTON_18  ;
       format OPTIONBUTTON_19  ;
       format OPTIONBUTTON_20  ;
       format TEKSTBLOK_01  ;
       format TEKSTBLOK_02  ;
       format TEKSTBLOK_03  ;
       format TEKSTBLOK_04  ;
       format TEKSTBLOK_05  ;
       format TEKSTBLOK_06  ;
       format TEKSTBLOK_07  ;
       format TEKSTBLOK_08  ;
       format TEKSTBLOK_09  ;
       format TEKSTBLOK_10  ;
       format VARCHAR_60_01  ;
       format VARCHAR_60_02  ;
       format VARCHAR_60_03  ;
       format VARCHAR_60_04  ;
       format VARCHAR_60_05  ;
       format VARCHAR_60_06  ;
       format VARCHAR_60_07  ;
       format VARCHAR_60_08  ;
       format VARCHAR_60_09  ;
       format VARCHAR_60_10  ;
       format VARCHAR_60_11  ;
       format VARCHAR_60_12  ;
       format VARCHAR_60_13  ;
       format VARCHAR_60_14  ;
       format VARCHAR_60_15  ;
       format VARCHAR_60_16  ;
       format VARCHAR_60_17  ;
       format VARCHAR_60_18  ;
       format VARCHAR_60_19  ;
       format VARCHAR_60_20  ;
       format VARCHAR_60_21  ;
       format VARCHAR_60_22  ;
       format VARCHAR_60_23  ;
       format VARCHAR_60_24  ;
       format VARCHAR_60_25  ;
       format VARCHAR_60_26  ;
       format VARCHAR_60_27  ;
       format VARCHAR_60_28  ;
       format VARCHAR_60_29  ;
       format VARCHAR_60_30  ;
       format VARCHAR_60_31  ;
       format VARCHAR_60_32  ;
       format VARCHAR_60_33  ;
       format VARCHAR_60_34  ;
       format VARCHAR_60_35  ;
       format VARCHAR_60_36  ;
       format VARCHAR_60_37  ;
       format VARCHAR_60_38  ;
       format VARCHAR_60_39  ;
       format VARCHAR_60_40  ;
       format VGS_ID best12. ;
       format VVG_VKM_VAR_GEGEVENS_DOS  ;
       format VVG_VKM_VAR_GEGEVENS_PRG  ;
       format VVG_VKT_ID best12. ;
       format VVG_DOS_ID best12. ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(BEDRAG_01)
         then put "," @;
         else put BEDRAG_01 @;
       if missing(BEDRAG_02)
         then put "," @;
         else put BEDRAG_02 @;
       if missing(BEDRAG_03)
         then put "," @;
         else put BEDRAG_03 @;
       if missing(BEDRAG_04)
         then put "," @;
         else put BEDRAG_04 @;
       if missing(BEDRAG_05)
         then put "," @;
         else put BEDRAG_05 @;
       if missing(BEDRAG_06)
         then put "," @;
         else put BEDRAG_06 @;
       if missing(BEDRAG_07)
         then put "," @;
         else put BEDRAG_07 @;
       if missing(BEDRAG_08)
         then put "," @;
         else put BEDRAG_08 @;
       if missing(BEDRAG_09)
         then put "," @;
         else put BEDRAG_09 @;
       if missing(BEDRAG_10)
         then put "," @;
         else put BEDRAG_10 @;
       if missing(BEDRAG_11)
         then put "," @;
         else put BEDRAG_11 @;
       if missing(BEDRAG_12)
         then put "," @;
         else put BEDRAG_12 @;
       if missing(BEDRAG_13)
         then put "," @;
         else put BEDRAG_13 @;
       if missing(BEDRAG_14)
         then put "," @;
         else put BEDRAG_14 @;
       if missing(BEDRAG_15)
         then put "," @;
         else put BEDRAG_15 @;
       if missing(BEDRAG_16)
         then put "," @;
         else put BEDRAG_16 @;
       if missing(BEDRAG_17)
         then put "," @;
         else put BEDRAG_17 @;
       if missing(BEDRAG_18)
         then put "," @;
         else put BEDRAG_18 @;
       if missing(BEDRAG_19)
         then put "," @;
         else put BEDRAG_19 @;
       if missing(BEDRAG_20)
         then put "," @;
         else put BEDRAG_20 @;
       if missing(BEDRAG_21)
         then put "," @;
         else put BEDRAG_21 @;
       if missing(BEDRAG_22)
         then put "," @;
         else put BEDRAG_22 @;
       if missing(BEDRAG_23)
         then put "," @;
         else put BEDRAG_23 @;
       if missing(BEDRAG_24)
         then put "," @;
         else put BEDRAG_24 @;
       if missing(BEDRAG_25)
         then put "," @;
         else put BEDRAG_25 @;
       if missing(BEDRAG_26)
         then put "," @;
         else put BEDRAG_26 @;
       if missing(BEDRAG_27)
         then put "," @;
         else put BEDRAG_27 @;
       if missing(BEDRAG_28)
         then put "," @;
         else put BEDRAG_28 @;
       if missing(BEDRAG_29)
         then put "," @;
         else put BEDRAG_29 @;
       if missing(BEDRAG_30)
         then put "," @;
         else put BEDRAG_30 @;
       if missing(BEDRAG_31)
         then put "," @;
         else put BEDRAG_31 @;
       if missing(BEDRAG_32)
         then put "," @;
         else put BEDRAG_32 @;
       if missing(BEDRAG_33)
         then put "," @;
         else put BEDRAG_33 @;
       if missing(BEDRAG_34)
         then put "," @;
         else put BEDRAG_34 @;
       if missing(BEDRAG_35)
         then put "," @;
         else put BEDRAG_35 @;
       if missing(BEDRAG_36)
         then put "," @;
         else put BEDRAG_36 @;
       if missing(BEDRAG_37)
         then put "," @;
         else put BEDRAG_37 @;
       if missing(BEDRAG_38)
         then put "," @;
         else put BEDRAG_38 @;
       if missing(BEDRAG_39)
         then put "," @;
         else put BEDRAG_39 @;
       if missing(BEDRAG_40)
         then put "," @;
         else put BEDRAG_40 @;
       if missing(Creatie_dat)
         then put "," @;
         else put Creatie_dat @;
       if missing(Creatie_user)
         then put "," @;
         else do;
                   attrLengte_4354760923739228973=length(Creatie_user);
                   aantalLF_4354760923739228973 = countc(Creatie_user,'0A'x);
                   maxPassend_4354760923739228973=30-1-aantalLF_4354760923739228973;
                   if attrLengte_4354760923739228973 > max(maxPassend_4354760923739228973,1000)
                     then passend_4354760923739228973 = substr(Creatie_user,1,maxPassend_4354760923739228973);
                     else passend_4354760923739228973 = Creatie_user;
                   passend_4354760923739228973 = tranwrd(passend_4354760923739228973,'9D'x,'D0'x);
                   put passend_4354760923739228973 ~ @;
              end;
       if missing(DATUM_01)
         then put "," @;
         else put DATUM_01 @;
       if missing(DATUM_02)
         then put "," @;
         else put DATUM_02 @;
       if missing(DATUM_03)
         then put "," @;
         else put DATUM_03 @;
       if missing(DATUM_04)
         then put "," @;
         else put DATUM_04 @;
       if missing(DATUM_05)
         then put "," @;
         else put DATUM_05 @;
       if missing(DATUM_06)
         then put "," @;
         else put DATUM_06 @;
       if missing(DATUM_07)
         then put "," @;
         else put DATUM_07 @;
       if missing(DATUM_08)
         then put "," @;
         else put DATUM_08 @;
       if missing(DATUM_09)
         then put "," @;
         else put DATUM_09 @;
       if missing(DATUM_10)
         then put "," @;
         else put DATUM_10 @;
       if missing(DATUM_11)
         then put "," @;
         else put DATUM_11 @;
       if missing(DATUM_12)
         then put "," @;
         else put DATUM_12 @;
       if missing(DATUM_13)
         then put "," @;
         else put DATUM_13 @;
       if missing(DATUM_14)
         then put "," @;
         else put DATUM_14 @;
       if missing(DATUM_15)
         then put "," @;
         else put DATUM_15 @;
       if missing(DATUM_16)
         then put "," @;
         else put DATUM_16 @;
       if missing(DATUM_17)
         then put "," @;
         else put DATUM_17 @;
       if missing(DATUM_18)
         then put "," @;
         else put DATUM_18 @;
       if missing(DATUM_19)
         then put "," @;
         else put DATUM_19 @;
       if missing(DATUM_20)
         then put "," @;
         else put DATUM_20 @;
       if missing(DATUM_AANMAAK)
         then put "," @;
         else put DATUM_AANMAAK @;
       if missing(DROPDOWNLIST_01)
         then put "," @;
         else do;
                   attrLengte_2333448560148118178=length(DROPDOWNLIST_01);
                   aantalLF_2333448560148118178 = countc(DROPDOWNLIST_01,'0A'x);
                   maxPassend_2333448560148118178=255-1-aantalLF_2333448560148118178;
                   if attrLengte_2333448560148118178 > max(maxPassend_2333448560148118178,1000)
                     then passend_2333448560148118178 = substr(DROPDOWNLIST_01,1,maxPassend_2333448560148118178);
                     else passend_2333448560148118178 = DROPDOWNLIST_01;
                   passend_2333448560148118178 = tranwrd(passend_2333448560148118178,'9D'x,'D0'x);
                   put passend_2333448560148118178 ~ @;
              end;
       if missing(DROPDOWNLIST_02)
         then put "," @;
         else do;
                   attrLengte_2333448560198451049=length(DROPDOWNLIST_02);
                   aantalLF_2333448560198451049 = countc(DROPDOWNLIST_02,'0A'x);
                   maxPassend_2333448560198451049=255-1-aantalLF_2333448560198451049;
                   if attrLengte_2333448560198451049 > max(maxPassend_2333448560198451049,1000)
                     then passend_2333448560198451049 = substr(DROPDOWNLIST_02,1,maxPassend_2333448560198451049);
                     else passend_2333448560198451049 = DROPDOWNLIST_02;
                   passend_2333448560198451049 = tranwrd(passend_2333448560198451049,'9D'x,'D0'x);
                   put passend_2333448560198451049 ~ @;
              end;
       if missing(DROPDOWNLIST_03)
         then put "," @;
         else do;
                   attrLengte_2333448560181673436=length(DROPDOWNLIST_03);
                   aantalLF_2333448560181673436 = countc(DROPDOWNLIST_03,'0A'x);
                   maxPassend_2333448560181673436=255-1-aantalLF_2333448560181673436;
                   if attrLengte_2333448560181673436 > max(maxPassend_2333448560181673436,1000)
                     then passend_2333448560181673436 = substr(DROPDOWNLIST_03,1,maxPassend_2333448560181673436);
                     else passend_2333448560181673436 = DROPDOWNLIST_03;
                   passend_2333448560181673436 = tranwrd(passend_2333448560181673436,'9D'x,'D0'x);
                   put passend_2333448560181673436 ~ @;
              end;
       if missing(DROPDOWNLIST_04)
         then put "," @;
         else do;
                   attrLengte_2333448560097785339=length(DROPDOWNLIST_04);
                   aantalLF_2333448560097785339 = countc(DROPDOWNLIST_04,'0A'x);
                   maxPassend_2333448560097785339=255-1-aantalLF_2333448560097785339;
                   if attrLengte_2333448560097785339 > max(maxPassend_2333448560097785339,1000)
                     then passend_2333448560097785339 = substr(DROPDOWNLIST_04,1,maxPassend_2333448560097785339);
                     else passend_2333448560097785339 = DROPDOWNLIST_04;
                   passend_2333448560097785339 = tranwrd(passend_2333448560097785339,'9D'x,'D0'x);
                   put passend_2333448560097785339 ~ @;
              end;
       if missing(DROPDOWNLIST_05)
         then put "," @;
         else do;
                   attrLengte_2333448560081007726=length(DROPDOWNLIST_05);
                   aantalLF_2333448560081007726 = countc(DROPDOWNLIST_05,'0A'x);
                   maxPassend_2333448560081007726=255-1-aantalLF_2333448560081007726;
                   if attrLengte_2333448560081007726 > max(maxPassend_2333448560081007726,1000)
                     then passend_2333448560081007726 = substr(DROPDOWNLIST_05,1,maxPassend_2333448560081007726);
                     else passend_2333448560081007726 = DROPDOWNLIST_05;
                   passend_2333448560081007726 = tranwrd(passend_2333448560081007726,'9D'x,'D0'x);
                   put passend_2333448560081007726 ~ @;
              end;
       if missing(DROPDOWNLIST_06)
         then put "," @;
         else do;
                   attrLengte_2333448560131340565=length(DROPDOWNLIST_06);
                   aantalLF_2333448560131340565 = countc(DROPDOWNLIST_06,'0A'x);
                   maxPassend_2333448560131340565=255-1-aantalLF_2333448560131340565;
                   if attrLengte_2333448560131340565 > max(maxPassend_2333448560131340565,1000)
                     then passend_2333448560131340565 = substr(DROPDOWNLIST_06,1,maxPassend_2333448560131340565);
                     else passend_2333448560131340565 = DROPDOWNLIST_06;
                   passend_2333448560131340565 = tranwrd(passend_2333448560131340565,'9D'x,'D0'x);
                   put passend_2333448560131340565 ~ @;
              end;
       if missing(DROPDOWNLIST_07)
         then put "," @;
         else do;
                   attrLengte_2333448560114562952=length(DROPDOWNLIST_07);
                   aantalLF_2333448560114562952 = countc(DROPDOWNLIST_07,'0A'x);
                   maxPassend_2333448560114562952=255-1-aantalLF_2333448560114562952;
                   if attrLengte_2333448560114562952 > max(maxPassend_2333448560114562952,1000)
                     then passend_2333448560114562952 = substr(DROPDOWNLIST_07,1,maxPassend_2333448560114562952);
                     else passend_2333448560114562952 = DROPDOWNLIST_07;
                   passend_2333448560114562952 = tranwrd(passend_2333448560114562952,'9D'x,'D0'x);
                   put passend_2333448560114562952 ~ @;
              end;
       if missing(DROPDOWNLIST_08)
         then put "," @;
         else do;
                   attrLengte_2333448560299116759=length(DROPDOWNLIST_08);
                   aantalLF_2333448560299116759 = countc(DROPDOWNLIST_08,'0A'x);
                   maxPassend_2333448560299116759=255-1-aantalLF_2333448560299116759;
                   if attrLengte_2333448560299116759 > max(maxPassend_2333448560299116759,1000)
                     then passend_2333448560299116759 = substr(DROPDOWNLIST_08,1,maxPassend_2333448560299116759);
                     else passend_2333448560299116759 = DROPDOWNLIST_08;
                   passend_2333448560299116759 = tranwrd(passend_2333448560299116759,'9D'x,'D0'x);
                   put passend_2333448560299116759 ~ @;
              end;
       if missing(DROPDOWNLIST_09)
         then put "," @;
         else do;
                   attrLengte_2333448560282339146=length(DROPDOWNLIST_09);
                   aantalLF_2333448560282339146 = countc(DROPDOWNLIST_09,'0A'x);
                   maxPassend_2333448560282339146=255-1-aantalLF_2333448560282339146;
                   if attrLengte_2333448560282339146 > max(maxPassend_2333448560282339146,1000)
                     then passend_2333448560282339146 = substr(DROPDOWNLIST_09,1,maxPassend_2333448560282339146);
                     else passend_2333448560282339146 = DROPDOWNLIST_09;
                   passend_2333448560282339146 = tranwrd(passend_2333448560282339146,'9D'x,'D0'x);
                   put passend_2333448560282339146 ~ @;
              end;
       if missing(DROPDOWNLIST_10)
         then put "," @;
         else do;
                   attrLengte_2333167070054935224=length(DROPDOWNLIST_10);
                   aantalLF_2333167070054935224 = countc(DROPDOWNLIST_10,'0A'x);
                   maxPassend_2333167070054935224=255-1-aantalLF_2333167070054935224;
                   if attrLengte_2333167070054935224 > max(maxPassend_2333167070054935224,1000)
                     then passend_2333167070054935224 = substr(DROPDOWNLIST_10,1,maxPassend_2333167070054935224);
                     else passend_2333167070054935224 = DROPDOWNLIST_10;
                   passend_2333167070054935224 = tranwrd(passend_2333167070054935224,'9D'x,'D0'x);
                   put passend_2333167070054935224 ~ @;
              end;
       if missing(DROPDOWNLIST_11)
         then put "," @;
         else do;
                   attrLengte_2333167070071712837=length(DROPDOWNLIST_11);
                   aantalLF_2333167070071712837 = countc(DROPDOWNLIST_11,'0A'x);
                   maxPassend_2333167070071712837=255-1-aantalLF_2333167070071712837;
                   if attrLengte_2333167070071712837 > max(maxPassend_2333167070071712837,1000)
                     then passend_2333167070071712837 = substr(DROPDOWNLIST_11,1,maxPassend_2333167070071712837);
                     else passend_2333167070071712837 = DROPDOWNLIST_11;
                   passend_2333167070071712837 = tranwrd(passend_2333167070071712837,'9D'x,'D0'x);
                   put passend_2333167070071712837 ~ @;
              end;
       if missing(DROPDOWNLIST_12)
         then put "," @;
         else do;
                   attrLengte_2333167070021379998=length(DROPDOWNLIST_12);
                   aantalLF_2333167070021379998 = countc(DROPDOWNLIST_12,'0A'x);
                   maxPassend_2333167070021379998=255-1-aantalLF_2333167070021379998;
                   if attrLengte_2333167070021379998 > max(maxPassend_2333167070021379998,1000)
                     then passend_2333167070021379998 = substr(DROPDOWNLIST_12,1,maxPassend_2333167070021379998);
                     else passend_2333167070021379998 = DROPDOWNLIST_12;
                   passend_2333167070021379998 = tranwrd(passend_2333167070021379998,'9D'x,'D0'x);
                   put passend_2333167070021379998 ~ @;
              end;
       if missing(DROPDOWNLIST_13)
         then put "," @;
         else do;
                   attrLengte_2333167070038157611=length(DROPDOWNLIST_13);
                   aantalLF_2333167070038157611 = countc(DROPDOWNLIST_13,'0A'x);
                   maxPassend_2333167070038157611=255-1-aantalLF_2333167070038157611;
                   if attrLengte_2333167070038157611 > max(maxPassend_2333167070038157611,1000)
                     then passend_2333167070038157611 = substr(DROPDOWNLIST_13,1,maxPassend_2333167070038157611);
                     else passend_2333167070038157611 = DROPDOWNLIST_13;
                   passend_2333167070038157611 = tranwrd(passend_2333167070038157611,'9D'x,'D0'x);
                   put passend_2333167070038157611 ~ @;
              end;
       if missing(DROPDOWNLIST_14)
         then put "," @;
         else do;
                   attrLengte_2333167070122045708=length(DROPDOWNLIST_14);
                   aantalLF_2333167070122045708 = countc(DROPDOWNLIST_14,'0A'x);
                   maxPassend_2333167070122045708=255-1-aantalLF_2333167070122045708;
                   if attrLengte_2333167070122045708 > max(maxPassend_2333167070122045708,1000)
                     then passend_2333167070122045708 = substr(DROPDOWNLIST_14,1,maxPassend_2333167070122045708);
                     else passend_2333167070122045708 = DROPDOWNLIST_14;
                   passend_2333167070122045708 = tranwrd(passend_2333167070122045708,'9D'x,'D0'x);
                   put passend_2333167070122045708 ~ @;
              end;
       if missing(DROPDOWNLIST_15)
         then put "," @;
         else do;
                   attrLengte_2333167070138823321=length(DROPDOWNLIST_15);
                   aantalLF_2333167070138823321 = countc(DROPDOWNLIST_15,'0A'x);
                   maxPassend_2333167070138823321=255-1-aantalLF_2333167070138823321;
                   if attrLengte_2333167070138823321 > max(maxPassend_2333167070138823321,1000)
                     then passend_2333167070138823321 = substr(DROPDOWNLIST_15,1,maxPassend_2333167070138823321);
                     else passend_2333167070138823321 = DROPDOWNLIST_15;
                   passend_2333167070138823321 = tranwrd(passend_2333167070138823321,'9D'x,'D0'x);
                   put passend_2333167070138823321 ~ @;
              end;
       if missing(DROPDOWNLIST_16)
         then put "," @;
         else do;
                   attrLengte_2333167070088490450=length(DROPDOWNLIST_16);
                   aantalLF_2333167070088490450 = countc(DROPDOWNLIST_16,'0A'x);
                   maxPassend_2333167070088490450=255-1-aantalLF_2333167070088490450;
                   if attrLengte_2333167070088490450 > max(maxPassend_2333167070088490450,1000)
                     then passend_2333167070088490450 = substr(DROPDOWNLIST_16,1,maxPassend_2333167070088490450);
                     else passend_2333167070088490450 = DROPDOWNLIST_16;
                   passend_2333167070088490450 = tranwrd(passend_2333167070088490450,'9D'x,'D0'x);
                   put passend_2333167070088490450 ~ @;
              end;
       if missing(DROPDOWNLIST_17)
         then put "," @;
         else do;
                   attrLengte_2333167070105268095=length(DROPDOWNLIST_17);
                   aantalLF_2333167070105268095 = countc(DROPDOWNLIST_17,'0A'x);
                   maxPassend_2333167070105268095=255-1-aantalLF_2333167070105268095;
                   if attrLengte_2333167070105268095 > max(maxPassend_2333167070105268095,1000)
                     then passend_2333167070105268095 = substr(DROPDOWNLIST_17,1,maxPassend_2333167070105268095);
                     else passend_2333167070105268095 = DROPDOWNLIST_17;
                   passend_2333167070105268095 = tranwrd(passend_2333167070105268095,'9D'x,'D0'x);
                   put passend_2333167070105268095 ~ @;
              end;
       if missing(DROPDOWNLIST_18)
         then put "," @;
         else do;
                   attrLengte_2333167070189156192=length(DROPDOWNLIST_18);
                   aantalLF_2333167070189156192 = countc(DROPDOWNLIST_18,'0A'x);
                   maxPassend_2333167070189156192=255-1-aantalLF_2333167070189156192;
                   if attrLengte_2333167070189156192 > max(maxPassend_2333167070189156192,1000)
                     then passend_2333167070189156192 = substr(DROPDOWNLIST_18,1,maxPassend_2333167070189156192);
                     else passend_2333167070189156192 = DROPDOWNLIST_18;
                   passend_2333167070189156192 = tranwrd(passend_2333167070189156192,'9D'x,'D0'x);
                   put passend_2333167070189156192 ~ @;
              end;
       if missing(DROPDOWNLIST_19)
         then put "," @;
         else do;
                   attrLengte_2333167070205933805=length(DROPDOWNLIST_19);
                   aantalLF_2333167070205933805 = countc(DROPDOWNLIST_19,'0A'x);
                   maxPassend_2333167070205933805=255-1-aantalLF_2333167070205933805;
                   if attrLengte_2333167070205933805 > max(maxPassend_2333167070205933805,1000)
                     then passend_2333167070205933805 = substr(DROPDOWNLIST_19,1,maxPassend_2333167070205933805);
                     else passend_2333167070205933805 = DROPDOWNLIST_19;
                   passend_2333167070205933805 = tranwrd(passend_2333167070205933805,'9D'x,'D0'x);
                   put passend_2333167070205933805 ~ @;
              end;
       if missing(DROPDOWNLIST_20)
         then put "," @;
         else do;
                   attrLengte_2334011536089746525=length(DROPDOWNLIST_20);
                   aantalLF_2334011536089746525 = countc(DROPDOWNLIST_20,'0A'x);
                   maxPassend_2334011536089746525=255-1-aantalLF_2334011536089746525;
                   if attrLengte_2334011536089746525 > max(maxPassend_2334011536089746525,1000)
                     then passend_2334011536089746525 = substr(DROPDOWNLIST_20,1,maxPassend_2334011536089746525);
                     else passend_2334011536089746525 = DROPDOWNLIST_20;
                   passend_2334011536089746525 = tranwrd(passend_2334011536089746525,'9D'x,'D0'x);
                   put passend_2334011536089746525 ~ @;
              end;
       if missing(DROPDOWNLIST_21)
         then put "," @;
         else do;
                   attrLengte_2334011536072968912=length(DROPDOWNLIST_21);
                   aantalLF_2334011536072968912 = countc(DROPDOWNLIST_21,'0A'x);
                   maxPassend_2334011536072968912=255-1-aantalLF_2334011536072968912;
                   if attrLengte_2334011536072968912 > max(maxPassend_2334011536072968912,1000)
                     then passend_2334011536072968912 = substr(DROPDOWNLIST_21,1,maxPassend_2334011536072968912);
                     else passend_2334011536072968912 = DROPDOWNLIST_21;
                   passend_2334011536072968912 = tranwrd(passend_2334011536072968912,'9D'x,'D0'x);
                   put passend_2334011536072968912 ~ @;
              end;
       if missing(DROPDOWNLIST_22)
         then put "," @;
         else do;
                   attrLengte_2334011536056191267=length(DROPDOWNLIST_22);
                   aantalLF_2334011536056191267 = countc(DROPDOWNLIST_22,'0A'x);
                   maxPassend_2334011536056191267=255-1-aantalLF_2334011536056191267;
                   if attrLengte_2334011536056191267 > max(maxPassend_2334011536056191267,1000)
                     then passend_2334011536056191267 = substr(DROPDOWNLIST_22,1,maxPassend_2334011536056191267);
                     else passend_2334011536056191267 = DROPDOWNLIST_22;
                   passend_2334011536056191267 = tranwrd(passend_2334011536056191267,'9D'x,'D0'x);
                   put passend_2334011536056191267 ~ @;
              end;
       if missing(DROPDOWNLIST_23)
         then put "," @;
         else do;
                   attrLengte_2334011536039413654=length(DROPDOWNLIST_23);
                   aantalLF_2334011536039413654 = countc(DROPDOWNLIST_23,'0A'x);
                   maxPassend_2334011536039413654=255-1-aantalLF_2334011536039413654;
                   if attrLengte_2334011536039413654 > max(maxPassend_2334011536039413654,1000)
                     then passend_2334011536039413654 = substr(DROPDOWNLIST_23,1,maxPassend_2334011536039413654);
                     else passend_2334011536039413654 = DROPDOWNLIST_23;
                   passend_2334011536039413654 = tranwrd(passend_2334011536039413654,'9D'x,'D0'x);
                   put passend_2334011536039413654 ~ @;
              end;
       if missing(DROPDOWNLIST_24)
         then put "," @;
         else do;
                   attrLengte_2334011536156856977=length(DROPDOWNLIST_24);
                   aantalLF_2334011536156856977 = countc(DROPDOWNLIST_24,'0A'x);
                   maxPassend_2334011536156856977=255-1-aantalLF_2334011536156856977;
                   if attrLengte_2334011536156856977 > max(maxPassend_2334011536156856977,1000)
                     then passend_2334011536156856977 = substr(DROPDOWNLIST_24,1,maxPassend_2334011536156856977);
                     else passend_2334011536156856977 = DROPDOWNLIST_24;
                   passend_2334011536156856977 = tranwrd(passend_2334011536156856977,'9D'x,'D0'x);
                   put passend_2334011536156856977 ~ @;
              end;
       if missing(DROPDOWNLIST_25)
         then put "," @;
         else do;
                   attrLengte_2334011536140079364=length(DROPDOWNLIST_25);
                   aantalLF_2334011536140079364 = countc(DROPDOWNLIST_25,'0A'x);
                   maxPassend_2334011536140079364=255-1-aantalLF_2334011536140079364;
                   if attrLengte_2334011536140079364 > max(maxPassend_2334011536140079364,1000)
                     then passend_2334011536140079364 = substr(DROPDOWNLIST_25,1,maxPassend_2334011536140079364);
                     else passend_2334011536140079364 = DROPDOWNLIST_25;
                   passend_2334011536140079364 = tranwrd(passend_2334011536140079364,'9D'x,'D0'x);
                   put passend_2334011536140079364 ~ @;
              end;
       if missing(DROPDOWNLIST_26)
         then put "," @;
         else do;
                   attrLengte_2334011536123301751=length(DROPDOWNLIST_26);
                   aantalLF_2334011536123301751 = countc(DROPDOWNLIST_26,'0A'x);
                   maxPassend_2334011536123301751=255-1-aantalLF_2334011536123301751;
                   if attrLengte_2334011536123301751 > max(maxPassend_2334011536123301751,1000)
                     then passend_2334011536123301751 = substr(DROPDOWNLIST_26,1,maxPassend_2334011536123301751);
                     else passend_2334011536123301751 = DROPDOWNLIST_26;
                   passend_2334011536123301751 = tranwrd(passend_2334011536123301751,'9D'x,'D0'x);
                   put passend_2334011536123301751 ~ @;
              end;
       if missing(DROPDOWNLIST_27)
         then put "," @;
         else do;
                   attrLengte_2334011536106524138=length(DROPDOWNLIST_27);
                   aantalLF_2334011536106524138 = countc(DROPDOWNLIST_27,'0A'x);
                   maxPassend_2334011536106524138=255-1-aantalLF_2334011536106524138;
                   if attrLengte_2334011536106524138 > max(maxPassend_2334011536106524138,1000)
                     then passend_2334011536106524138 = substr(DROPDOWNLIST_27,1,maxPassend_2334011536106524138);
                     else passend_2334011536106524138 = DROPDOWNLIST_27;
                   passend_2334011536106524138 = tranwrd(passend_2334011536106524138,'9D'x,'D0'x);
                   put passend_2334011536106524138 ~ @;
              end;
       if missing(DROPDOWNLIST_28)
         then put "," @;
         else do;
                   attrLengte_2334011535955525557=length(DROPDOWNLIST_28);
                   aantalLF_2334011535955525557 = countc(DROPDOWNLIST_28,'0A'x);
                   maxPassend_2334011535955525557=255-1-aantalLF_2334011535955525557;
                   if attrLengte_2334011535955525557 > max(maxPassend_2334011535955525557,1000)
                     then passend_2334011535955525557 = substr(DROPDOWNLIST_28,1,maxPassend_2334011535955525557);
                     else passend_2334011535955525557 = DROPDOWNLIST_28;
                   passend_2334011535955525557 = tranwrd(passend_2334011535955525557,'9D'x,'D0'x);
                   put passend_2334011535955525557 ~ @;
              end;
       if missing(DROPDOWNLIST_29)
         then put "," @;
         else do;
                   attrLengte_2334011535938747944=length(DROPDOWNLIST_29);
                   aantalLF_2334011535938747944 = countc(DROPDOWNLIST_29,'0A'x);
                   maxPassend_2334011535938747944=255-1-aantalLF_2334011535938747944;
                   if attrLengte_2334011535938747944 > max(maxPassend_2334011535938747944,1000)
                     then passend_2334011535938747944 = substr(DROPDOWNLIST_29,1,maxPassend_2334011535938747944);
                     else passend_2334011535938747944 = DROPDOWNLIST_29;
                   passend_2334011535938747944 = tranwrd(passend_2334011535938747944,'9D'x,'D0'x);
                   put passend_2334011535938747944 ~ @;
              end;
       if missing(DROPDOWNLIST_30)
         then put "," @;
         else do;
                   attrLengte_2333730048127321158=length(DROPDOWNLIST_30);
                   aantalLF_2333730048127321158 = countc(DROPDOWNLIST_30,'0A'x);
                   maxPassend_2333730048127321158=255-1-aantalLF_2333730048127321158;
                   if attrLengte_2333730048127321158 > max(maxPassend_2333730048127321158,1000)
                     then passend_2333730048127321158 = substr(DROPDOWNLIST_30,1,maxPassend_2333730048127321158);
                     else passend_2333730048127321158 = DROPDOWNLIST_30;
                   passend_2333730048127321158 = tranwrd(passend_2333730048127321158,'9D'x,'D0'x);
                   put passend_2333730048127321158 ~ @;
              end;
       if missing(DROPDOWNLIST_31)
         then put "," @;
         else do;
                   attrLengte_2333730048144098771=length(DROPDOWNLIST_31);
                   aantalLF_2333730048144098771 = countc(DROPDOWNLIST_31,'0A'x);
                   maxPassend_2333730048144098771=255-1-aantalLF_2333730048144098771;
                   if attrLengte_2333730048144098771 > max(maxPassend_2333730048144098771,1000)
                     then passend_2333730048144098771 = substr(DROPDOWNLIST_31,1,maxPassend_2333730048144098771);
                     else passend_2333730048144098771 = DROPDOWNLIST_31;
                   passend_2333730048144098771 = tranwrd(passend_2333730048144098771,'9D'x,'D0'x);
                   put passend_2333730048144098771 ~ @;
              end;
       if missing(DROPDOWNLIST_32)
         then put "," @;
         else do;
                   attrLengte_2333730048160876416=length(DROPDOWNLIST_32);
                   aantalLF_2333730048160876416 = countc(DROPDOWNLIST_32,'0A'x);
                   maxPassend_2333730048160876416=255-1-aantalLF_2333730048160876416;
                   if attrLengte_2333730048160876416 > max(maxPassend_2333730048160876416,1000)
                     then passend_2333730048160876416 = substr(DROPDOWNLIST_32,1,maxPassend_2333730048160876416);
                     else passend_2333730048160876416 = DROPDOWNLIST_32;
                   passend_2333730048160876416 = tranwrd(passend_2333730048160876416,'9D'x,'D0'x);
                   put passend_2333730048160876416 ~ @;
              end;
       if missing(DROPDOWNLIST_33)
         then put "," @;
         else do;
                   attrLengte_2333730048177654029=length(DROPDOWNLIST_33);
                   aantalLF_2333730048177654029 = countc(DROPDOWNLIST_33,'0A'x);
                   maxPassend_2333730048177654029=255-1-aantalLF_2333730048177654029;
                   if attrLengte_2333730048177654029 > max(maxPassend_2333730048177654029,1000)
                     then passend_2333730048177654029 = substr(DROPDOWNLIST_33,1,maxPassend_2333730048177654029);
                     else passend_2333730048177654029 = DROPDOWNLIST_33;
                   passend_2333730048177654029 = tranwrd(passend_2333730048177654029,'9D'x,'D0'x);
                   put passend_2333730048177654029 ~ @;
              end;
       if missing(DROPDOWNLIST_34)
         then put "," @;
         else do;
                   attrLengte_2333730048194431642=length(DROPDOWNLIST_34);
                   aantalLF_2333730048194431642 = countc(DROPDOWNLIST_34,'0A'x);
                   maxPassend_2333730048194431642=255-1-aantalLF_2333730048194431642;
                   if attrLengte_2333730048194431642 > max(maxPassend_2333730048194431642,1000)
                     then passend_2333730048194431642 = substr(DROPDOWNLIST_34,1,maxPassend_2333730048194431642);
                     else passend_2333730048194431642 = DROPDOWNLIST_34;
                   passend_2333730048194431642 = tranwrd(passend_2333730048194431642,'9D'x,'D0'x);
                   put passend_2333730048194431642 ~ @;
              end;
       if missing(DROPDOWNLIST_35)
         then put "," @;
         else do;
                   attrLengte_2333730048211209255=length(DROPDOWNLIST_35);
                   aantalLF_2333730048211209255 = countc(DROPDOWNLIST_35,'0A'x);
                   maxPassend_2333730048211209255=255-1-aantalLF_2333730048211209255;
                   if attrLengte_2333730048211209255 > max(maxPassend_2333730048211209255,1000)
                     then passend_2333730048211209255 = substr(DROPDOWNLIST_35,1,maxPassend_2333730048211209255);
                     else passend_2333730048211209255 = DROPDOWNLIST_35;
                   passend_2333730048211209255 = tranwrd(passend_2333730048211209255,'9D'x,'D0'x);
                   put passend_2333730048211209255 ~ @;
              end;
       if missing(DROPDOWNLIST_36)
         then put "," @;
         else do;
                   attrLengte_2333730048227986868=length(DROPDOWNLIST_36);
                   aantalLF_2333730048227986868 = countc(DROPDOWNLIST_36,'0A'x);
                   maxPassend_2333730048227986868=255-1-aantalLF_2333730048227986868;
                   if attrLengte_2333730048227986868 > max(maxPassend_2333730048227986868,1000)
                     then passend_2333730048227986868 = substr(DROPDOWNLIST_36,1,maxPassend_2333730048227986868);
                     else passend_2333730048227986868 = DROPDOWNLIST_36;
                   passend_2333730048227986868 = tranwrd(passend_2333730048227986868,'9D'x,'D0'x);
                   put passend_2333730048227986868 ~ @;
              end;
       if missing(DROPDOWNLIST_37)
         then put "," @;
         else do;
                   attrLengte_2333730048244764481=length(DROPDOWNLIST_37);
                   aantalLF_2333730048244764481 = countc(DROPDOWNLIST_37,'0A'x);
                   maxPassend_2333730048244764481=255-1-aantalLF_2333730048244764481;
                   if attrLengte_2333730048244764481 > max(maxPassend_2333730048244764481,1000)
                     then passend_2333730048244764481 = substr(DROPDOWNLIST_37,1,maxPassend_2333730048244764481);
                     else passend_2333730048244764481 = DROPDOWNLIST_37;
                   passend_2333730048244764481 = tranwrd(passend_2333730048244764481,'9D'x,'D0'x);
                   put passend_2333730048244764481 ~ @;
              end;
       if missing(DROPDOWNLIST_38)
         then put "," @;
         else do;
                   attrLengte_2333730047993100222=length(DROPDOWNLIST_38);
                   aantalLF_2333730047993100222 = countc(DROPDOWNLIST_38,'0A'x);
                   maxPassend_2333730047993100222=255-1-aantalLF_2333730047993100222;
                   if attrLengte_2333730047993100222 > max(maxPassend_2333730047993100222,1000)
                     then passend_2333730047993100222 = substr(DROPDOWNLIST_38,1,maxPassend_2333730047993100222);
                     else passend_2333730047993100222 = DROPDOWNLIST_38;
                   passend_2333730047993100222 = tranwrd(passend_2333730047993100222,'9D'x,'D0'x);
                   put passend_2333730047993100222 ~ @;
              end;
       if missing(DROPDOWNLIST_39)
         then put "," @;
         else do;
                   attrLengte_2333730048009877835=length(DROPDOWNLIST_39);
                   aantalLF_2333730048009877835 = countc(DROPDOWNLIST_39,'0A'x);
                   maxPassend_2333730048009877835=255-1-aantalLF_2333730048009877835;
                   if attrLengte_2333730048009877835 > max(maxPassend_2333730048009877835,1000)
                     then passend_2333730048009877835 = substr(DROPDOWNLIST_39,1,maxPassend_2333730048009877835);
                     else passend_2333730048009877835 = DROPDOWNLIST_39;
                   passend_2333730048009877835 = tranwrd(passend_2333730048009877835,'9D'x,'D0'x);
                   put passend_2333730048009877835 ~ @;
              end;
       if missing(DROPDOWNLIST_40)
         then put "," @;
         else do;
                   attrLengte_2334574513625248651=length(DROPDOWNLIST_40);
                   aantalLF_2334574513625248651 = countc(DROPDOWNLIST_40,'0A'x);
                   maxPassend_2334574513625248651=255-1-aantalLF_2334574513625248651;
                   if attrLengte_2334574513625248651 > max(maxPassend_2334574513625248651,1000)
                     then passend_2334574513625248651 = substr(DROPDOWNLIST_40,1,maxPassend_2334574513625248651);
                     else passend_2334574513625248651 = DROPDOWNLIST_40;
                   passend_2334574513625248651 = tranwrd(passend_2334574513625248651,'9D'x,'D0'x);
                   put passend_2334574513625248651 ~ @;
              end;
       if missing(INT_01)
         then put "," @;
         else put INT_01 @;
       if missing(INT_02)
         then put "," @;
         else put INT_02 @;
       if missing(INT_03)
         then put "," @;
         else put INT_03 @;
       if missing(INT_04)
         then put "," @;
         else put INT_04 @;
       if missing(INT_05)
         then put "," @;
         else put INT_05 @;
       if missing(INT_06)
         then put "," @;
         else put INT_06 @;
       if missing(INT_07)
         then put "," @;
         else put INT_07 @;
       if missing(INT_08)
         then put "," @;
         else put INT_08 @;
       if missing(INT_09)
         then put "," @;
         else put INT_09 @;
       if missing(INT_10)
         then put "," @;
         else put INT_10 @;
       if missing(INT_11)
         then put "," @;
         else put INT_11 @;
       if missing(INT_12)
         then put "," @;
         else put INT_12 @;
       if missing(INT_13)
         then put "," @;
         else put INT_13 @;
       if missing(INT_14)
         then put "," @;
         else put INT_14 @;
       if missing(INT_15)
         then put "," @;
         else put INT_15 @;
       if missing(INT_16)
         then put "," @;
         else put INT_16 @;
       if missing(INT_17)
         then put "," @;
         else put INT_17 @;
       if missing(INT_18)
         then put "," @;
         else put INT_18 @;
       if missing(INT_19)
         then put "," @;
         else put INT_19 @;
       if missing(INT_20)
         then put "," @;
         else put INT_20 @;
       if missing(INT_21)
         then put "," @;
         else put INT_21 @;
       if missing(INT_22)
         then put "," @;
         else put INT_22 @;
       if missing(INT_23)
         then put "," @;
         else put INT_23 @;
       if missing(INT_24)
         then put "," @;
         else put INT_24 @;
       if missing(INT_25)
         then put "," @;
         else put INT_25 @;
       if missing(INT_26)
         then put "," @;
         else put INT_26 @;
       if missing(INT_27)
         then put "," @;
         else put INT_27 @;
       if missing(INT_28)
         then put "," @;
         else put INT_28 @;
       if missing(INT_29)
         then put "," @;
         else put INT_29 @;
       if missing(INT_30)
         then put "," @;
         else put INT_30 @;
       if missing(INT_31)
         then put "," @;
         else put INT_31 @;
       if missing(INT_32)
         then put "," @;
         else put INT_32 @;
       if missing(INT_33)
         then put "," @;
         else put INT_33 @;
       if missing(INT_34)
         then put "," @;
         else put INT_34 @;
       if missing(INT_35)
         then put "," @;
         else put INT_35 @;
       if missing(INT_36)
         then put "," @;
         else put INT_36 @;
       if missing(INT_37)
         then put "," @;
         else put INT_37 @;
       if missing(INT_38)
         then put "," @;
         else put INT_38 @;
       if missing(INT_39)
         then put "," @;
         else put INT_39 @;
       if missing(INT_40)
         then put "," @;
         else put INT_40 @;
       if missing(JA_NEE_01)
         then put "," @;
         else do;
                   attrLengte_4198460558916153339=length(JA_NEE_01);
                   aantalLF_4198460558916153339 = countc(JA_NEE_01,'0A'x);
                   maxPassend_4198460558916153339=1-1-aantalLF_4198460558916153339;
                   if attrLengte_4198460558916153339 > max(maxPassend_4198460558916153339,1000)
                     then passend_4198460558916153339 = substr(JA_NEE_01,1,maxPassend_4198460558916153339);
                     else passend_4198460558916153339 = JA_NEE_01;
                   passend_4198460558916153339 = tranwrd(passend_4198460558916153339,'9D'x,'D0'x);
                   put passend_4198460558916153339 ~ @;
              end;
       if missing(JA_NEE_02)
         then put "," @;
         else do;
                   attrLengte_4198460558865820468=length(JA_NEE_02);
                   aantalLF_4198460558865820468 = countc(JA_NEE_02,'0A'x);
                   maxPassend_4198460558865820468=1-1-aantalLF_4198460558865820468;
                   if attrLengte_4198460558865820468 > max(maxPassend_4198460558865820468,1000)
                     then passend_4198460558865820468 = substr(JA_NEE_02,1,maxPassend_4198460558865820468);
                     else passend_4198460558865820468 = JA_NEE_02;
                   passend_4198460558865820468 = tranwrd(passend_4198460558865820468,'9D'x,'D0'x);
                   put passend_4198460558865820468 ~ @;
              end;
       if missing(JA_NEE_03)
         then put "," @;
         else do;
                   attrLengte_4198460558882598085=length(JA_NEE_03);
                   aantalLF_4198460558882598085 = countc(JA_NEE_03,'0A'x);
                   maxPassend_4198460558882598085=1-1-aantalLF_4198460558882598085;
                   if attrLengte_4198460558882598085 > max(maxPassend_4198460558882598085,1000)
                     then passend_4198460558882598085 = substr(JA_NEE_03,1,maxPassend_4198460558882598085);
                     else passend_4198460558882598085 = JA_NEE_03;
                   passend_4198460558882598085 = tranwrd(passend_4198460558882598085,'9D'x,'D0'x);
                   put passend_4198460558882598085 ~ @;
              end;
       if missing(JA_NEE_04)
         then put "," @;
         else do;
                   attrLengte_4198460558966486182=length(JA_NEE_04);
                   aantalLF_4198460558966486182 = countc(JA_NEE_04,'0A'x);
                   maxPassend_4198460558966486182=1-1-aantalLF_4198460558966486182;
                   if attrLengte_4198460558966486182 > max(maxPassend_4198460558966486182,1000)
                     then passend_4198460558966486182 = substr(JA_NEE_04,1,maxPassend_4198460558966486182);
                     else passend_4198460558966486182 = JA_NEE_04;
                   passend_4198460558966486182 = tranwrd(passend_4198460558966486182,'9D'x,'D0'x);
                   put passend_4198460558966486182 ~ @;
              end;
       if missing(JA_NEE_05)
         then put "," @;
         else do;
                   attrLengte_4198460558983263799=length(JA_NEE_05);
                   aantalLF_4198460558983263799 = countc(JA_NEE_05,'0A'x);
                   maxPassend_4198460558983263799=1-1-aantalLF_4198460558983263799;
                   if attrLengte_4198460558983263799 > max(maxPassend_4198460558983263799,1000)
                     then passend_4198460558983263799 = substr(JA_NEE_05,1,maxPassend_4198460558983263799);
                     else passend_4198460558983263799 = JA_NEE_05;
                   passend_4198460558983263799 = tranwrd(passend_4198460558983263799,'9D'x,'D0'x);
                   put passend_4198460558983263799 ~ @;
              end;
       if missing(JA_NEE_06)
         then put "," @;
         else do;
                   attrLengte_4198460558932930960=length(JA_NEE_06);
                   aantalLF_4198460558932930960 = countc(JA_NEE_06,'0A'x);
                   maxPassend_4198460558932930960=1-1-aantalLF_4198460558932930960;
                   if attrLengte_4198460558932930960 > max(maxPassend_4198460558932930960,1000)
                     then passend_4198460558932930960 = substr(JA_NEE_06,1,maxPassend_4198460558932930960);
                     else passend_4198460558932930960 = JA_NEE_06;
                   passend_4198460558932930960 = tranwrd(passend_4198460558932930960,'9D'x,'D0'x);
                   put passend_4198460558932930960 ~ @;
              end;
       if missing(JA_NEE_07)
         then put "," @;
         else do;
                   attrLengte_4198460558949708561=length(JA_NEE_07);
                   aantalLF_4198460558949708561 = countc(JA_NEE_07,'0A'x);
                   maxPassend_4198460558949708561=1-1-aantalLF_4198460558949708561;
                   if attrLengte_4198460558949708561 > max(maxPassend_4198460558949708561,1000)
                     then passend_4198460558949708561 = substr(JA_NEE_07,1,maxPassend_4198460558949708561);
                     else passend_4198460558949708561 = JA_NEE_07;
                   passend_4198460558949708561 = tranwrd(passend_4198460558949708561,'9D'x,'D0'x);
                   put passend_4198460558949708561 ~ @;
              end;
       if missing(JA_NEE_08)
         then put "," @;
         else do;
                   attrLengte_4198460558765154754=length(JA_NEE_08);
                   aantalLF_4198460558765154754 = countc(JA_NEE_08,'0A'x);
                   maxPassend_4198460558765154754=1-1-aantalLF_4198460558765154754;
                   if attrLengte_4198460558765154754 > max(maxPassend_4198460558765154754,1000)
                     then passend_4198460558765154754 = substr(JA_NEE_08,1,maxPassend_4198460558765154754);
                     else passend_4198460558765154754 = JA_NEE_08;
                   passend_4198460558765154754 = tranwrd(passend_4198460558765154754,'9D'x,'D0'x);
                   put passend_4198460558765154754 ~ @;
              end;
       if missing(JA_NEE_09)
         then put "," @;
         else do;
                   attrLengte_4198460558781932371=length(JA_NEE_09);
                   aantalLF_4198460558781932371 = countc(JA_NEE_09,'0A'x);
                   maxPassend_4198460558781932371=1-1-aantalLF_4198460558781932371;
                   if attrLengte_4198460558781932371 > max(maxPassend_4198460558781932371,1000)
                     then passend_4198460558781932371 = substr(JA_NEE_09,1,maxPassend_4198460558781932371);
                     else passend_4198460558781932371 = JA_NEE_09;
                   passend_4198460558781932371 = tranwrd(passend_4198460558781932371,'9D'x,'D0'x);
                   put passend_4198460558781932371 ~ @;
              end;
       if missing(JA_NEE_10)
         then put "," @;
         else do;
                   attrLengte_4198742046861801057=length(JA_NEE_10);
                   aantalLF_4198742046861801057 = countc(JA_NEE_10,'0A'x);
                   maxPassend_4198742046861801057=1-1-aantalLF_4198742046861801057;
                   if attrLengte_4198742046861801057 > max(maxPassend_4198742046861801057,1000)
                     then passend_4198742046861801057 = substr(JA_NEE_10,1,maxPassend_4198742046861801057);
                     else passend_4198742046861801057 = JA_NEE_10;
                   passend_4198742046861801057 = tranwrd(passend_4198742046861801057,'9D'x,'D0'x);
                   put passend_4198742046861801057 ~ @;
              end;
       if missing(JA_NEE_11)
         then put "," @;
         else do;
                   attrLengte_4198742046845023456=length(JA_NEE_11);
                   aantalLF_4198742046845023456 = countc(JA_NEE_11,'0A'x);
                   maxPassend_4198742046845023456=1-1-aantalLF_4198742046845023456;
                   if attrLengte_4198742046845023456 > max(maxPassend_4198742046845023456,1000)
                     then passend_4198742046845023456 = substr(JA_NEE_11,1,maxPassend_4198742046845023456);
                     else passend_4198742046845023456 = JA_NEE_11;
                   passend_4198742046845023456 = tranwrd(passend_4198742046845023456,'9D'x,'D0'x);
                   put passend_4198742046845023456 ~ @;
              end;
       if missing(JA_NEE_12)
         then put "," @;
         else do;
                   attrLengte_4198742046895356295=length(JA_NEE_12);
                   aantalLF_4198742046895356295 = countc(JA_NEE_12,'0A'x);
                   maxPassend_4198742046895356295=1-1-aantalLF_4198742046895356295;
                   if attrLengte_4198742046895356295 > max(maxPassend_4198742046895356295,1000)
                     then passend_4198742046895356295 = substr(JA_NEE_12,1,maxPassend_4198742046895356295);
                     else passend_4198742046895356295 = JA_NEE_12;
                   passend_4198742046895356295 = tranwrd(passend_4198742046895356295,'9D'x,'D0'x);
                   put passend_4198742046895356295 ~ @;
              end;
       if missing(JA_NEE_13)
         then put "," @;
         else do;
                   attrLengte_4198742046878578678=length(JA_NEE_13);
                   aantalLF_4198742046878578678 = countc(JA_NEE_13,'0A'x);
                   maxPassend_4198742046878578678=1-1-aantalLF_4198742046878578678;
                   if attrLengte_4198742046878578678 > max(maxPassend_4198742046878578678,1000)
                     then passend_4198742046878578678 = substr(JA_NEE_13,1,maxPassend_4198742046878578678);
                     else passend_4198742046878578678 = JA_NEE_13;
                   passend_4198742046878578678 = tranwrd(passend_4198742046878578678,'9D'x,'D0'x);
                   put passend_4198742046878578678 ~ @;
              end;
       if missing(JA_NEE_14)
         then put "," @;
         else do;
                   attrLengte_4198742046794690581=length(JA_NEE_14);
                   aantalLF_4198742046794690581 = countc(JA_NEE_14,'0A'x);
                   maxPassend_4198742046794690581=1-1-aantalLF_4198742046794690581;
                   if attrLengte_4198742046794690581 > max(maxPassend_4198742046794690581,1000)
                     then passend_4198742046794690581 = substr(JA_NEE_14,1,maxPassend_4198742046794690581);
                     else passend_4198742046794690581 = JA_NEE_14;
                   passend_4198742046794690581 = tranwrd(passend_4198742046794690581,'9D'x,'D0'x);
                   put passend_4198742046794690581 ~ @;
              end;
       if missing(JA_NEE_15)
         then put "," @;
         else do;
                   attrLengte_4198742046777912964=length(JA_NEE_15);
                   aantalLF_4198742046777912964 = countc(JA_NEE_15,'0A'x);
                   maxPassend_4198742046777912964=1-1-aantalLF_4198742046777912964;
                   if attrLengte_4198742046777912964 > max(maxPassend_4198742046777912964,1000)
                     then passend_4198742046777912964 = substr(JA_NEE_15,1,maxPassend_4198742046777912964);
                     else passend_4198742046777912964 = JA_NEE_15;
                   passend_4198742046777912964 = tranwrd(passend_4198742046777912964,'9D'x,'D0'x);
                   put passend_4198742046777912964 ~ @;
              end;
       if missing(JA_NEE_16)
         then put "," @;
         else do;
                   attrLengte_4198742046828245835=length(JA_NEE_16);
                   aantalLF_4198742046828245835 = countc(JA_NEE_16,'0A'x);
                   maxPassend_4198742046828245835=1-1-aantalLF_4198742046828245835;
                   if attrLengte_4198742046828245835 > max(maxPassend_4198742046828245835,1000)
                     then passend_4198742046828245835 = substr(JA_NEE_16,1,maxPassend_4198742046828245835);
                     else passend_4198742046828245835 = JA_NEE_16;
                   passend_4198742046828245835 = tranwrd(passend_4198742046828245835,'9D'x,'D0'x);
                   put passend_4198742046828245835 ~ @;
              end;
       if missing(JA_NEE_17)
         then put "," @;
         else do;
                   attrLengte_4198742046811468218=length(JA_NEE_17);
                   aantalLF_4198742046811468218 = countc(JA_NEE_17,'0A'x);
                   maxPassend_4198742046811468218=1-1-aantalLF_4198742046811468218;
                   if attrLengte_4198742046811468218 > max(maxPassend_4198742046811468218,1000)
                     then passend_4198742046811468218 = substr(JA_NEE_17,1,maxPassend_4198742046811468218);
                     else passend_4198742046811468218 = JA_NEE_17;
                   passend_4198742046811468218 = tranwrd(passend_4198742046811468218,'9D'x,'D0'x);
                   put passend_4198742046811468218 ~ @;
              end;
       if missing(JA_NEE_18)
         then put "," @;
         else do;
                   attrLengte_4198742046727580121=length(JA_NEE_18);
                   aantalLF_4198742046727580121 = countc(JA_NEE_18,'0A'x);
                   maxPassend_4198742046727580121=1-1-aantalLF_4198742046727580121;
                   if attrLengte_4198742046727580121 > max(maxPassend_4198742046727580121,1000)
                     then passend_4198742046727580121 = substr(JA_NEE_18,1,maxPassend_4198742046727580121);
                     else passend_4198742046727580121 = JA_NEE_18;
                   passend_4198742046727580121 = tranwrd(passend_4198742046727580121,'9D'x,'D0'x);
                   put passend_4198742046727580121 ~ @;
              end;
       if missing(JA_NEE_19)
         then put "," @;
         else do;
                   attrLengte_4198742046710802488=length(JA_NEE_19);
                   aantalLF_4198742046710802488 = countc(JA_NEE_19,'0A'x);
                   maxPassend_4198742046710802488=1-1-aantalLF_4198742046710802488;
                   if attrLengte_4198742046710802488 > max(maxPassend_4198742046710802488,1000)
                     then passend_4198742046710802488 = substr(JA_NEE_19,1,maxPassend_4198742046710802488);
                     else passend_4198742046710802488 = JA_NEE_19;
                   passend_4198742046710802488 = tranwrd(passend_4198742046710802488,'9D'x,'D0'x);
                   put passend_4198742046710802488 ~ @;
              end;
       if missing(JA_NEE_20)
         then put "," @;
         else do;
                   attrLengte_4199023534287342620=length(JA_NEE_20);
                   aantalLF_4199023534287342620 = countc(JA_NEE_20,'0A'x);
                   maxPassend_4199023534287342620=1-1-aantalLF_4199023534287342620;
                   if attrLengte_4199023534287342620 > max(maxPassend_4199023534287342620,1000)
                     then passend_4199023534287342620 = substr(JA_NEE_20,1,maxPassend_4199023534287342620);
                     else passend_4199023534287342620 = JA_NEE_20;
                   passend_4199023534287342620 = tranwrd(passend_4199023534287342620,'9D'x,'D0'x);
                   put passend_4199023534287342620 ~ @;
              end;
       if missing(JA_NEE_21)
         then put "," @;
         else do;
                   attrLengte_4199023534304120237=length(JA_NEE_21);
                   aantalLF_4199023534304120237 = countc(JA_NEE_21,'0A'x);
                   maxPassend_4199023534304120237=1-1-aantalLF_4199023534304120237;
                   if attrLengte_4199023534304120237 > max(maxPassend_4199023534304120237,1000)
                     then passend_4199023534304120237 = substr(JA_NEE_21,1,maxPassend_4199023534304120237);
                     else passend_4199023534304120237 = JA_NEE_21;
                   passend_4199023534304120237 = tranwrd(passend_4199023534304120237,'9D'x,'D0'x);
                   put passend_4199023534304120237 ~ @;
              end;
       if missing(JA_NEE_22)
         then put "," @;
         else do;
                   attrLengte_4199023534320897842=length(JA_NEE_22);
                   aantalLF_4199023534320897842 = countc(JA_NEE_22,'0A'x);
                   maxPassend_4199023534320897842=1-1-aantalLF_4199023534320897842;
                   if attrLengte_4199023534320897842 > max(maxPassend_4199023534320897842,1000)
                     then passend_4199023534320897842 = substr(JA_NEE_22,1,maxPassend_4199023534320897842);
                     else passend_4199023534320897842 = JA_NEE_22;
                   passend_4199023534320897842 = tranwrd(passend_4199023534320897842,'9D'x,'D0'x);
                   put passend_4199023534320897842 ~ @;
              end;
       if missing(JA_NEE_23)
         then put "," @;
         else do;
                   attrLengte_4199023534337675459=length(JA_NEE_23);
                   aantalLF_4199023534337675459 = countc(JA_NEE_23,'0A'x);
                   maxPassend_4199023534337675459=1-1-aantalLF_4199023534337675459;
                   if attrLengte_4199023534337675459 > max(maxPassend_4199023534337675459,1000)
                     then passend_4199023534337675459 = substr(JA_NEE_23,1,maxPassend_4199023534337675459);
                     else passend_4199023534337675459 = JA_NEE_23;
                   passend_4199023534337675459 = tranwrd(passend_4199023534337675459,'9D'x,'D0'x);
                   put passend_4199023534337675459 ~ @;
              end;
       if missing(JA_NEE_24)
         then put "," @;
         else do;
                   attrLengte_4199023534354453080=length(JA_NEE_24);
                   aantalLF_4199023534354453080 = countc(JA_NEE_24,'0A'x);
                   maxPassend_4199023534354453080=1-1-aantalLF_4199023534354453080;
                   if attrLengte_4199023534354453080 > max(maxPassend_4199023534354453080,1000)
                     then passend_4199023534354453080 = substr(JA_NEE_24,1,maxPassend_4199023534354453080);
                     else passend_4199023534354453080 = JA_NEE_24;
                   passend_4199023534354453080 = tranwrd(passend_4199023534354453080,'9D'x,'D0'x);
                   put passend_4199023534354453080 ~ @;
              end;
       if missing(JA_NEE_25)
         then put "," @;
         else do;
                   attrLengte_4199023534371230713=length(JA_NEE_25);
                   aantalLF_4199023534371230713 = countc(JA_NEE_25,'0A'x);
                   maxPassend_4199023534371230713=1-1-aantalLF_4199023534371230713;
                   if attrLengte_4199023534371230713 > max(maxPassend_4199023534371230713,1000)
                     then passend_4199023534371230713 = substr(JA_NEE_25,1,maxPassend_4199023534371230713);
                     else passend_4199023534371230713 = JA_NEE_25;
                   passend_4199023534371230713 = tranwrd(passend_4199023534371230713,'9D'x,'D0'x);
                   put passend_4199023534371230713 ~ @;
              end;
       if missing(JA_NEE_26)
         then put "," @;
         else do;
                   attrLengte_4199023534388008334=length(JA_NEE_26);
                   aantalLF_4199023534388008334 = countc(JA_NEE_26,'0A'x);
                   maxPassend_4199023534388008334=1-1-aantalLF_4199023534388008334;
                   if attrLengte_4199023534388008334 > max(maxPassend_4199023534388008334,1000)
                     then passend_4199023534388008334 = substr(JA_NEE_26,1,maxPassend_4199023534388008334);
                     else passend_4199023534388008334 = JA_NEE_26;
                   passend_4199023534388008334 = tranwrd(passend_4199023534388008334,'9D'x,'D0'x);
                   put passend_4199023534388008334 ~ @;
              end;
       if missing(JA_NEE_27)
         then put "," @;
         else do;
                   attrLengte_4199023534404785951=length(JA_NEE_27);
                   aantalLF_4199023534404785951 = countc(JA_NEE_27,'0A'x);
                   maxPassend_4199023534404785951=1-1-aantalLF_4199023534404785951;
                   if attrLengte_4199023534404785951 > max(maxPassend_4199023534404785951,1000)
                     then passend_4199023534404785951 = substr(JA_NEE_27,1,maxPassend_4199023534404785951);
                     else passend_4199023534404785951 = JA_NEE_27;
                   passend_4199023534404785951 = tranwrd(passend_4199023534404785951,'9D'x,'D0'x);
                   put passend_4199023534404785951 ~ @;
              end;
       if missing(JA_NEE_28)
         then put "," @;
         else do;
                   attrLengte_4199023534421563556=length(JA_NEE_28);
                   aantalLF_4199023534421563556 = countc(JA_NEE_28,'0A'x);
                   maxPassend_4199023534421563556=1-1-aantalLF_4199023534421563556;
                   if attrLengte_4199023534421563556 > max(maxPassend_4199023534421563556,1000)
                     then passend_4199023534421563556 = substr(JA_NEE_28,1,maxPassend_4199023534421563556);
                     else passend_4199023534421563556 = JA_NEE_28;
                   passend_4199023534421563556 = tranwrd(passend_4199023534421563556,'9D'x,'D0'x);
                   put passend_4199023534421563556 ~ @;
              end;
       if missing(JA_NEE_29)
         then put "," @;
         else do;
                   attrLengte_4199023534438341173=length(JA_NEE_29);
                   aantalLF_4199023534438341173 = countc(JA_NEE_29,'0A'x);
                   maxPassend_4199023534438341173=1-1-aantalLF_4199023534438341173;
                   if attrLengte_4199023534438341173 > max(maxPassend_4199023534438341173,1000)
                     then passend_4199023534438341173 = substr(JA_NEE_29,1,maxPassend_4199023534438341173);
                     else passend_4199023534438341173 = JA_NEE_29;
                   passend_4199023534438341173 = tranwrd(passend_4199023534438341173,'9D'x,'D0'x);
                   put passend_4199023534438341173 ~ @;
              end;
       if missing(JA_NEE_30)
         then put "," @;
         else do;
                   attrLengte_4199305024397303187=length(JA_NEE_30);
                   aantalLF_4199305024397303187 = countc(JA_NEE_30,'0A'x);
                   maxPassend_4199305024397303187=1-1-aantalLF_4199305024397303187;
                   if attrLengte_4199305024397303187 > max(maxPassend_4199305024397303187,1000)
                     then passend_4199305024397303187 = substr(JA_NEE_30,1,maxPassend_4199305024397303187);
                     else passend_4199305024397303187 = JA_NEE_30;
                   passend_4199305024397303187 = tranwrd(passend_4199305024397303187,'9D'x,'D0'x);
                   put passend_4199305024397303187 ~ @;
              end;
       if missing(JA_NEE_NVT_01)
         then put "," @;
         else do;
                   attrLengte_7667791472180487256=length(JA_NEE_NVT_01);
                   aantalLF_7667791472180487256 = countc(JA_NEE_NVT_01,'0A'x);
                   maxPassend_7667791472180487256=1-1-aantalLF_7667791472180487256;
                   if attrLengte_7667791472180487256 > max(maxPassend_7667791472180487256,1000)
                     then passend_7667791472180487256 = substr(JA_NEE_NVT_01,1,maxPassend_7667791472180487256);
                     else passend_7667791472180487256 = JA_NEE_NVT_01;
                   passend_7667791472180487256 = tranwrd(passend_7667791472180487256,'9D'x,'D0'x);
                   put passend_7667791472180487256 ~ @;
              end;
       if missing(JA_NEE_NVT_02)
         then put "," @;
         else do;
                   attrLengte_7667791472230820127=length(JA_NEE_NVT_02);
                   aantalLF_7667791472230820127 = countc(JA_NEE_NVT_02,'0A'x);
                   maxPassend_7667791472230820127=1-1-aantalLF_7667791472230820127;
                   if attrLengte_7667791472230820127 > max(maxPassend_7667791472230820127,1000)
                     then passend_7667791472230820127 = substr(JA_NEE_NVT_02,1,maxPassend_7667791472230820127);
                     else passend_7667791472230820127 = JA_NEE_NVT_02;
                   passend_7667791472230820127 = tranwrd(passend_7667791472230820127,'9D'x,'D0'x);
                   put passend_7667791472230820127 ~ @;
              end;
       if missing(JA_NEE_NVT_03)
         then put "," @;
         else do;
                   attrLengte_7667791472214042510=length(JA_NEE_NVT_03);
                   aantalLF_7667791472214042510 = countc(JA_NEE_NVT_03,'0A'x);
                   maxPassend_7667791472214042510=1-1-aantalLF_7667791472214042510;
                   if attrLengte_7667791472214042510 > max(maxPassend_7667791472214042510,1000)
                     then passend_7667791472214042510 = substr(JA_NEE_NVT_03,1,maxPassend_7667791472214042510);
                     else passend_7667791472214042510 = JA_NEE_NVT_03;
                   passend_7667791472214042510 = tranwrd(passend_7667791472214042510,'9D'x,'D0'x);
                   put passend_7667791472214042510 ~ @;
              end;
       if missing(JA_NEE_NVT_04)
         then put "," @;
         else do;
                   attrLengte_7667791472264375349=length(JA_NEE_NVT_04);
                   aantalLF_7667791472264375349 = countc(JA_NEE_NVT_04,'0A'x);
                   maxPassend_7667791472264375349=1-1-aantalLF_7667791472264375349;
                   if attrLengte_7667791472264375349 > max(maxPassend_7667791472264375349,1000)
                     then passend_7667791472264375349 = substr(JA_NEE_NVT_04,1,maxPassend_7667791472264375349);
                     else passend_7667791472264375349 = JA_NEE_NVT_04;
                   passend_7667791472264375349 = tranwrd(passend_7667791472264375349,'9D'x,'D0'x);
                   put passend_7667791472264375349 ~ @;
              end;
       if missing(JA_NEE_NVT_05)
         then put "," @;
         else do;
                   attrLengte_7667791472247597740=length(JA_NEE_NVT_05);
                   aantalLF_7667791472247597740 = countc(JA_NEE_NVT_05,'0A'x);
                   maxPassend_7667791472247597740=1-1-aantalLF_7667791472247597740;
                   if attrLengte_7667791472247597740 > max(maxPassend_7667791472247597740,1000)
                     then passend_7667791472247597740 = substr(JA_NEE_NVT_05,1,maxPassend_7667791472247597740);
                     else passend_7667791472247597740 = JA_NEE_NVT_05;
                   passend_7667791472247597740 = tranwrd(passend_7667791472247597740,'9D'x,'D0'x);
                   put passend_7667791472247597740 ~ @;
              end;
       if missing(JA_NEE_NVT_06)
         then put "," @;
         else do;
                   attrLengte_7667791472297930579=length(JA_NEE_NVT_06);
                   aantalLF_7667791472297930579 = countc(JA_NEE_NVT_06,'0A'x);
                   maxPassend_7667791472297930579=1-1-aantalLF_7667791472297930579;
                   if attrLengte_7667791472297930579 > max(maxPassend_7667791472297930579,1000)
                     then passend_7667791472297930579 = substr(JA_NEE_NVT_06,1,maxPassend_7667791472297930579);
                     else passend_7667791472297930579 = JA_NEE_NVT_06;
                   passend_7667791472297930579 = tranwrd(passend_7667791472297930579,'9D'x,'D0'x);
                   put passend_7667791472297930579 ~ @;
              end;
       if missing(JA_NEE_NVT_07)
         then put "," @;
         else do;
                   attrLengte_7667791472281152962=length(JA_NEE_NVT_07);
                   aantalLF_7667791472281152962 = countc(JA_NEE_NVT_07,'0A'x);
                   maxPassend_7667791472281152962=1-1-aantalLF_7667791472281152962;
                   if attrLengte_7667791472281152962 > max(maxPassend_7667791472281152962,1000)
                     then passend_7667791472281152962 = substr(JA_NEE_NVT_07,1,maxPassend_7667791472281152962);
                     else passend_7667791472281152962 = JA_NEE_NVT_07;
                   passend_7667791472281152962 = tranwrd(passend_7667791472281152962,'9D'x,'D0'x);
                   put passend_7667791472281152962 ~ @;
              end;
       if missing(JA_NEE_NVT_08)
         then put "," @;
         else do;
                   attrLengte_7667791472063043929=length(JA_NEE_NVT_08);
                   aantalLF_7667791472063043929 = countc(JA_NEE_NVT_08,'0A'x);
                   maxPassend_7667791472063043929=1-1-aantalLF_7667791472063043929;
                   if attrLengte_7667791472063043929 > max(maxPassend_7667791472063043929,1000)
                     then passend_7667791472063043929 = substr(JA_NEE_NVT_08,1,maxPassend_7667791472063043929);
                     else passend_7667791472063043929 = JA_NEE_NVT_08;
                   passend_7667791472063043929 = tranwrd(passend_7667791472063043929,'9D'x,'D0'x);
                   put passend_7667791472063043929 ~ @;
              end;
       if missing(JA_NEE_NVT_09)
         then put "," @;
         else do;
                   attrLengte_7667791472046266320=length(JA_NEE_NVT_09);
                   aantalLF_7667791472046266320 = countc(JA_NEE_NVT_09,'0A'x);
                   maxPassend_7667791472046266320=1-1-aantalLF_7667791472046266320;
                   if attrLengte_7667791472046266320 > max(maxPassend_7667791472046266320,1000)
                     then passend_7667791472046266320 = substr(JA_NEE_NVT_09,1,maxPassend_7667791472046266320);
                     else passend_7667791472046266320 = JA_NEE_NVT_09;
                   passend_7667791472046266320 = tranwrd(passend_7667791472046266320,'9D'x,'D0'x);
                   put passend_7667791472046266320 ~ @;
              end;
       if missing(JA_NEE_NVT_10)
         then put "," @;
         else do;
                   attrLengte_7667509984234839530=length(JA_NEE_NVT_10);
                   aantalLF_7667509984234839530 = countc(JA_NEE_NVT_10,'0A'x);
                   maxPassend_7667509984234839530=1-1-aantalLF_7667509984234839530;
                   if attrLengte_7667509984234839530 > max(maxPassend_7667509984234839530,1000)
                     then passend_7667509984234839530 = substr(JA_NEE_NVT_10,1,maxPassend_7667509984234839530);
                     else passend_7667509984234839530 = JA_NEE_NVT_10;
                   passend_7667509984234839530 = tranwrd(passend_7667509984234839530,'9D'x,'D0'x);
                   put passend_7667509984234839530 ~ @;
              end;
       if missing(JA_NEE_NVT_11)
         then put "," @;
         else do;
                   attrLengte_7667509984251617147=length(JA_NEE_NVT_11);
                   aantalLF_7667509984251617147 = countc(JA_NEE_NVT_11,'0A'x);
                   maxPassend_7667509984251617147=1-1-aantalLF_7667509984251617147;
                   if attrLengte_7667509984251617147 > max(maxPassend_7667509984251617147,1000)
                     then passend_7667509984251617147 = substr(JA_NEE_NVT_11,1,maxPassend_7667509984251617147);
                     else passend_7667509984251617147 = JA_NEE_NVT_11;
                   passend_7667509984251617147 = tranwrd(passend_7667509984251617147,'9D'x,'D0'x);
                   put passend_7667509984251617147 ~ @;
              end;
       if missing(JA_NEE_NVT_12)
         then put "," @;
         else do;
                   attrLengte_7667509984201284276=length(JA_NEE_NVT_12);
                   aantalLF_7667509984201284276 = countc(JA_NEE_NVT_12,'0A'x);
                   maxPassend_7667509984201284276=1-1-aantalLF_7667509984201284276;
                   if attrLengte_7667509984201284276 > max(maxPassend_7667509984201284276,1000)
                     then passend_7667509984201284276 = substr(JA_NEE_NVT_12,1,maxPassend_7667509984201284276);
                     else passend_7667509984201284276 = JA_NEE_NVT_12;
                   passend_7667509984201284276 = tranwrd(passend_7667509984201284276,'9D'x,'D0'x);
                   put passend_7667509984201284276 ~ @;
              end;
       if missing(JA_NEE_NVT_13)
         then put "," @;
         else do;
                   attrLengte_7667509984218061917=length(JA_NEE_NVT_13);
                   aantalLF_7667509984218061917 = countc(JA_NEE_NVT_13,'0A'x);
                   maxPassend_7667509984218061917=1-1-aantalLF_7667509984218061917;
                   if attrLengte_7667509984218061917 > max(maxPassend_7667509984218061917,1000)
                     then passend_7667509984218061917 = substr(JA_NEE_NVT_13,1,maxPassend_7667509984218061917);
                     else passend_7667509984218061917 = JA_NEE_NVT_13;
                   passend_7667509984218061917 = tranwrd(passend_7667509984218061917,'9D'x,'D0'x);
                   put passend_7667509984218061917 ~ @;
              end;
       if missing(JA_NEE_NVT_14)
         then put "," @;
         else do;
                   attrLengte_7667509984167729046=length(JA_NEE_NVT_14);
                   aantalLF_7667509984167729046 = countc(JA_NEE_NVT_14,'0A'x);
                   maxPassend_7667509984167729046=1-1-aantalLF_7667509984167729046;
                   if attrLengte_7667509984167729046 > max(maxPassend_7667509984167729046,1000)
                     then passend_7667509984167729046 = substr(JA_NEE_NVT_14,1,maxPassend_7667509984167729046);
                     else passend_7667509984167729046 = JA_NEE_NVT_14;
                   passend_7667509984167729046 = tranwrd(passend_7667509984167729046,'9D'x,'D0'x);
                   put passend_7667509984167729046 ~ @;
              end;
       if missing(JA_NEE_NVT_15)
         then put "," @;
         else do;
                   attrLengte_7667509984184506663=length(JA_NEE_NVT_15);
                   aantalLF_7667509984184506663 = countc(JA_NEE_NVT_15,'0A'x);
                   maxPassend_7667509984184506663=1-1-aantalLF_7667509984184506663;
                   if attrLengte_7667509984184506663 > max(maxPassend_7667509984184506663,1000)
                     then passend_7667509984184506663 = substr(JA_NEE_NVT_15,1,maxPassend_7667509984184506663);
                     else passend_7667509984184506663 = JA_NEE_NVT_15;
                   passend_7667509984184506663 = tranwrd(passend_7667509984184506663,'9D'x,'D0'x);
                   put passend_7667509984184506663 ~ @;
              end;
       if missing(JA_NEE_NVT_16)
         then put "," @;
         else do;
                   attrLengte_7667509984134173824=length(JA_NEE_NVT_16);
                   aantalLF_7667509984134173824 = countc(JA_NEE_NVT_16,'0A'x);
                   maxPassend_7667509984134173824=1-1-aantalLF_7667509984134173824;
                   if attrLengte_7667509984134173824 > max(maxPassend_7667509984134173824,1000)
                     then passend_7667509984134173824 = substr(JA_NEE_NVT_16,1,maxPassend_7667509984134173824);
                     else passend_7667509984134173824 = JA_NEE_NVT_16;
                   passend_7667509984134173824 = tranwrd(passend_7667509984134173824,'9D'x,'D0'x);
                   put passend_7667509984134173824 ~ @;
              end;
       if missing(JA_NEE_NVT_17)
         then put "," @;
         else do;
                   attrLengte_7667509984150951433=length(JA_NEE_NVT_17);
                   aantalLF_7667509984150951433 = countc(JA_NEE_NVT_17,'0A'x);
                   maxPassend_7667509984150951433=1-1-aantalLF_7667509984150951433;
                   if attrLengte_7667509984150951433 > max(maxPassend_7667509984150951433,1000)
                     then passend_7667509984150951433 = substr(JA_NEE_NVT_17,1,maxPassend_7667509984150951433);
                     else passend_7667509984150951433 = JA_NEE_NVT_17;
                   passend_7667509984150951433 = tranwrd(passend_7667509984150951433,'9D'x,'D0'x);
                   put passend_7667509984150951433 ~ @;
              end;
       if missing(JA_NEE_NVT_18)
         then put "," @;
         else do;
                   attrLengte_7667509984369060466=length(JA_NEE_NVT_18);
                   aantalLF_7667509984369060466 = countc(JA_NEE_NVT_18,'0A'x);
                   maxPassend_7667509984369060466=1-1-aantalLF_7667509984369060466;
                   if attrLengte_7667509984369060466 > max(maxPassend_7667509984369060466,1000)
                     then passend_7667509984369060466 = substr(JA_NEE_NVT_18,1,maxPassend_7667509984369060466);
                     else passend_7667509984369060466 = JA_NEE_NVT_18;
                   passend_7667509984369060466 = tranwrd(passend_7667509984369060466,'9D'x,'D0'x);
                   put passend_7667509984369060466 ~ @;
              end;
       if missing(JA_NEE_NVT_19)
         then put "," @;
         else do;
                   attrLengte_7667509984385838083=length(JA_NEE_NVT_19);
                   aantalLF_7667509984385838083 = countc(JA_NEE_NVT_19,'0A'x);
                   maxPassend_7667509984385838083=1-1-aantalLF_7667509984385838083;
                   if attrLengte_7667509984385838083 > max(maxPassend_7667509984385838083,1000)
                     then passend_7667509984385838083 = substr(JA_NEE_NVT_19,1,maxPassend_7667509984385838083);
                     else passend_7667509984385838083 = JA_NEE_NVT_19;
                   passend_7667509984385838083 = tranwrd(passend_7667509984385838083,'9D'x,'D0'x);
                   put passend_7667509984385838083 ~ @;
              end;
       if missing(JA_NEE_NVT_20)
         then put "," @;
         else do;
                   attrLengte_7668354450269650803=length(JA_NEE_NVT_20);
                   aantalLF_7668354450269650803 = countc(JA_NEE_NVT_20,'0A'x);
                   maxPassend_7668354450269650803=1-1-aantalLF_7668354450269650803;
                   if attrLengte_7668354450269650803 > max(maxPassend_7668354450269650803,1000)
                     then passend_7668354450269650803 = substr(JA_NEE_NVT_20,1,maxPassend_7668354450269650803);
                     else passend_7668354450269650803 = JA_NEE_NVT_20;
                   passend_7668354450269650803 = tranwrd(passend_7668354450269650803,'9D'x,'D0'x);
                   put passend_7668354450269650803 ~ @;
              end;
       if missing(JA_NEE_ONB_01)
         then put "," @;
         else do;
                   attrLengte_320424162687033679=length(JA_NEE_ONB_01);
                   aantalLF_320424162687033679 = countc(JA_NEE_ONB_01,'0A'x);
                   maxPassend_320424162687033679=1-1-aantalLF_320424162687033679;
                   if attrLengte_320424162687033679 > max(maxPassend_320424162687033679,1000)
                     then passend_320424162687033679 = substr(JA_NEE_ONB_01,1,maxPassend_320424162687033679);
                     else passend_320424162687033679 = JA_NEE_ONB_01;
                   passend_320424162687033679 = tranwrd(passend_320424162687033679,'9D'x,'D0'x);
                   put passend_320424162687033679 ~ @;
              end;
       if missing(JA_NEE_ONB_02)
         then put "," @;
         else do;
                   attrLengte_320424162670256034=length(JA_NEE_ONB_02);
                   aantalLF_320424162670256034 = countc(JA_NEE_ONB_02,'0A'x);
                   maxPassend_320424162670256034=1-1-aantalLF_320424162670256034;
                   if attrLengte_320424162670256034 > max(maxPassend_320424162670256034,1000)
                     then passend_320424162670256034 = substr(JA_NEE_ONB_02,1,maxPassend_320424162670256034);
                     else passend_320424162670256034 = JA_NEE_ONB_02;
                   passend_320424162670256034 = tranwrd(passend_320424162670256034,'9D'x,'D0'x);
                   put passend_320424162670256034 ~ @;
              end;
       if missing(JA_NEE_ONB_03)
         then put "," @;
         else do;
                   attrLengte_320424162653478417=length(JA_NEE_ONB_03);
                   aantalLF_320424162653478417 = countc(JA_NEE_ONB_03,'0A'x);
                   maxPassend_320424162653478417=1-1-aantalLF_320424162653478417;
                   if attrLengte_320424162653478417 > max(maxPassend_320424162653478417,1000)
                     then passend_320424162653478417 = substr(JA_NEE_ONB_03,1,maxPassend_320424162653478417);
                     else passend_320424162653478417 = JA_NEE_ONB_03;
                   passend_320424162653478417 = tranwrd(passend_320424162653478417,'9D'x,'D0'x);
                   put passend_320424162653478417 ~ @;
              end;
       if missing(JA_NEE_ONB_04)
         then put "," @;
         else do;
                   attrLengte_320424162636700804=length(JA_NEE_ONB_04);
                   aantalLF_320424162636700804 = countc(JA_NEE_ONB_04,'0A'x);
                   maxPassend_320424162636700804=1-1-aantalLF_320424162636700804;
                   if attrLengte_320424162636700804 > max(maxPassend_320424162636700804,1000)
                     then passend_320424162636700804 = substr(JA_NEE_ONB_04,1,maxPassend_320424162636700804);
                     else passend_320424162636700804 = JA_NEE_ONB_04;
                   passend_320424162636700804 = tranwrd(passend_320424162636700804,'9D'x,'D0'x);
                   put passend_320424162636700804 ~ @;
              end;
       if missing(JA_NEE_ONB_05)
         then put "," @;
         else do;
                   attrLengte_320424162619923195=length(JA_NEE_ONB_05);
                   aantalLF_320424162619923195 = countc(JA_NEE_ONB_05,'0A'x);
                   maxPassend_320424162619923195=1-1-aantalLF_320424162619923195;
                   if attrLengte_320424162619923195 > max(maxPassend_320424162619923195,1000)
                     then passend_320424162619923195 = substr(JA_NEE_ONB_05,1,maxPassend_320424162619923195);
                     else passend_320424162619923195 = JA_NEE_ONB_05;
                   passend_320424162619923195 = tranwrd(passend_320424162619923195,'9D'x,'D0'x);
                   put passend_320424162619923195 ~ @;
              end;
       if missing(JA_NEE_ONB_06)
         then put "," @;
         else do;
                   attrLengte_320424162603145582=length(JA_NEE_ONB_06);
                   aantalLF_320424162603145582 = countc(JA_NEE_ONB_06,'0A'x);
                   maxPassend_320424162603145582=1-1-aantalLF_320424162603145582;
                   if attrLengte_320424162603145582 > max(maxPassend_320424162603145582,1000)
                     then passend_320424162603145582 = substr(JA_NEE_ONB_06,1,maxPassend_320424162603145582);
                     else passend_320424162603145582 = JA_NEE_ONB_06;
                   passend_320424162603145582 = tranwrd(passend_320424162603145582,'9D'x,'D0'x);
                   put passend_320424162603145582 ~ @;
              end;
       if missing(JA_NEE_ONB_07)
         then put "," @;
         else do;
                   attrLengte_320424162586367965=length(JA_NEE_ONB_07);
                   aantalLF_320424162586367965 = countc(JA_NEE_ONB_07,'0A'x);
                   maxPassend_320424162586367965=1-1-aantalLF_320424162586367965;
                   if attrLengte_320424162586367965 > max(maxPassend_320424162586367965,1000)
                     then passend_320424162586367965 = substr(JA_NEE_ONB_07,1,maxPassend_320424162586367965);
                     else passend_320424162586367965 = JA_NEE_ONB_07;
                   passend_320424162586367965 = tranwrd(passend_320424162586367965,'9D'x,'D0'x);
                   put passend_320424162586367965 ~ @;
              end;
       if missing(JA_NEE_ONB_08)
         then put "," @;
         else do;
                   attrLengte_320424162838032224=length(JA_NEE_ONB_08);
                   aantalLF_320424162838032224 = countc(JA_NEE_ONB_08,'0A'x);
                   maxPassend_320424162838032224=1-1-aantalLF_320424162838032224;
                   if attrLengte_320424162838032224 > max(maxPassend_320424162838032224,1000)
                     then passend_320424162838032224 = substr(JA_NEE_ONB_08,1,maxPassend_320424162838032224);
                     else passend_320424162838032224 = JA_NEE_ONB_08;
                   passend_320424162838032224 = tranwrd(passend_320424162838032224,'9D'x,'D0'x);
                   put passend_320424162838032224 ~ @;
              end;
       if missing(JA_NEE_ONB_09)
         then put "," @;
         else do;
                   attrLengte_320424162821254615=length(JA_NEE_ONB_09);
                   aantalLF_320424162821254615 = countc(JA_NEE_ONB_09,'0A'x);
                   maxPassend_320424162821254615=1-1-aantalLF_320424162821254615;
                   if attrLengte_320424162821254615 > max(maxPassend_320424162821254615,1000)
                     then passend_320424162821254615 = substr(JA_NEE_ONB_09,1,maxPassend_320424162821254615);
                     else passend_320424162821254615 = JA_NEE_ONB_09;
                   passend_320424162821254615 = tranwrd(passend_320424162821254615,'9D'x,'D0'x);
                   put passend_320424162821254615 ~ @;
              end;
       if missing(JA_NEE_ONB_10)
         then put "," @;
         else do;
                   attrLengte_320142672593850689=length(JA_NEE_ONB_10);
                   aantalLF_320142672593850689 = countc(JA_NEE_ONB_10,'0A'x);
                   maxPassend_320142672593850689=1-1-aantalLF_320142672593850689;
                   if attrLengte_320142672593850689 > max(maxPassend_320142672593850689,1000)
                     then passend_320142672593850689 = substr(JA_NEE_ONB_10,1,maxPassend_320142672593850689);
                     else passend_320142672593850689 = JA_NEE_ONB_10;
                   passend_320142672593850689 = tranwrd(passend_320142672593850689,'9D'x,'D0'x);
                   put passend_320142672593850689 ~ @;
              end;
       if missing(JA_NEE_ONB_11)
         then put "," @;
         else do;
                   attrLengte_320142672610628306=length(JA_NEE_ONB_11);
                   aantalLF_320142672610628306 = countc(JA_NEE_ONB_11,'0A'x);
                   maxPassend_320142672610628306=1-1-aantalLF_320142672610628306;
                   if attrLengte_320142672610628306 > max(maxPassend_320142672610628306,1000)
                     then passend_320142672610628306 = substr(JA_NEE_ONB_11,1,maxPassend_320142672610628306);
                     else passend_320142672610628306 = JA_NEE_ONB_11;
                   passend_320142672610628306 = tranwrd(passend_320142672610628306,'9D'x,'D0'x);
                   put passend_320142672610628306 ~ @;
              end;
       if missing(JA_NEE_ONB_12)
         then put "," @;
         else do;
                   attrLengte_320142672627405951=length(JA_NEE_ONB_12);
                   aantalLF_320142672627405951 = countc(JA_NEE_ONB_12,'0A'x);
                   maxPassend_320142672627405951=1-1-aantalLF_320142672627405951;
                   if attrLengte_320142672627405951 > max(maxPassend_320142672627405951,1000)
                     then passend_320142672627405951 = substr(JA_NEE_ONB_12,1,maxPassend_320142672627405951);
                     else passend_320142672627405951 = JA_NEE_ONB_12;
                   passend_320142672627405951 = tranwrd(passend_320142672627405951,'9D'x,'D0'x);
                   put passend_320142672627405951 ~ @;
              end;
       if missing(JA_NEE_ONB_13)
         then put "," @;
         else do;
                   attrLengte_320142672644183560=length(JA_NEE_ONB_13);
                   aantalLF_320142672644183560 = countc(JA_NEE_ONB_13,'0A'x);
                   maxPassend_320142672644183560=1-1-aantalLF_320142672644183560;
                   if attrLengte_320142672644183560 > max(maxPassend_320142672644183560,1000)
                     then passend_320142672644183560 = substr(JA_NEE_ONB_13,1,maxPassend_320142672644183560);
                     else passend_320142672644183560 = JA_NEE_ONB_13;
                   passend_320142672644183560 = tranwrd(passend_320142672644183560,'9D'x,'D0'x);
                   put passend_320142672644183560 ~ @;
              end;
       if missing(JA_NEE_ONB_14)
         then put "," @;
         else do;
                   attrLengte_320142672526740237=length(JA_NEE_ONB_14);
                   aantalLF_320142672526740237 = countc(JA_NEE_ONB_14,'0A'x);
                   maxPassend_320142672526740237=1-1-aantalLF_320142672526740237;
                   if attrLengte_320142672526740237 > max(maxPassend_320142672526740237,1000)
                     then passend_320142672526740237 = substr(JA_NEE_ONB_14,1,maxPassend_320142672526740237);
                     else passend_320142672526740237 = JA_NEE_ONB_14;
                   passend_320142672526740237 = tranwrd(passend_320142672526740237,'9D'x,'D0'x);
                   put passend_320142672526740237 ~ @;
              end;
       if missing(JA_NEE_ONB_15)
         then put "," @;
         else do;
                   attrLengte_320142672543517854=length(JA_NEE_ONB_15);
                   aantalLF_320142672543517854 = countc(JA_NEE_ONB_15,'0A'x);
                   maxPassend_320142672543517854=1-1-aantalLF_320142672543517854;
                   if attrLengte_320142672543517854 > max(maxPassend_320142672543517854,1000)
                     then passend_320142672543517854 = substr(JA_NEE_ONB_15,1,maxPassend_320142672543517854);
                     else passend_320142672543517854 = JA_NEE_ONB_15;
                   passend_320142672543517854 = tranwrd(passend_320142672543517854,'9D'x,'D0'x);
                   put passend_320142672543517854 ~ @;
              end;
       if missing(JA_NEE_ONB_16)
         then put "," @;
         else do;
                   attrLengte_320142672560295467=length(JA_NEE_ONB_16);
                   aantalLF_320142672560295467 = countc(JA_NEE_ONB_16,'0A'x);
                   maxPassend_320142672560295467=1-1-aantalLF_320142672560295467;
                   if attrLengte_320142672560295467 > max(maxPassend_320142672560295467,1000)
                     then passend_320142672560295467 = substr(JA_NEE_ONB_16,1,maxPassend_320142672560295467);
                     else passend_320142672560295467 = JA_NEE_ONB_16;
                   passend_320142672560295467 = tranwrd(passend_320142672560295467,'9D'x,'D0'x);
                   put passend_320142672560295467 ~ @;
              end;
       if missing(JA_NEE_ONB_17)
         then put "," @;
         else do;
                   attrLengte_320142672577073076=length(JA_NEE_ONB_17);
                   aantalLF_320142672577073076 = countc(JA_NEE_ONB_17,'0A'x);
                   maxPassend_320142672577073076=1-1-aantalLF_320142672577073076;
                   if attrLengte_320142672577073076 > max(maxPassend_320142672577073076,1000)
                     then passend_320142672577073076 = substr(JA_NEE_ONB_17,1,maxPassend_320142672577073076);
                     else passend_320142672577073076 = JA_NEE_ONB_17;
                   passend_320142672577073076 = tranwrd(passend_320142672577073076,'9D'x,'D0'x);
                   put passend_320142672577073076 ~ @;
              end;
       if missing(JA_NEE_ONB_18)
         then put "," @;
         else do;
                   attrLengte_320142672728071657=length(JA_NEE_ONB_18);
                   aantalLF_320142672728071657 = countc(JA_NEE_ONB_18,'0A'x);
                   maxPassend_320142672728071657=1-1-aantalLF_320142672728071657;
                   if attrLengte_320142672728071657 > max(maxPassend_320142672728071657,1000)
                     then passend_320142672728071657 = substr(JA_NEE_ONB_18,1,maxPassend_320142672728071657);
                     else passend_320142672728071657 = JA_NEE_ONB_18;
                   passend_320142672728071657 = tranwrd(passend_320142672728071657,'9D'x,'D0'x);
                   put passend_320142672728071657 ~ @;
              end;
       if missing(JA_NEE_ONB_19)
         then put "," @;
         else do;
                   attrLengte_320142672744849274=length(JA_NEE_ONB_19);
                   aantalLF_320142672744849274 = countc(JA_NEE_ONB_19,'0A'x);
                   maxPassend_320142672744849274=1-1-aantalLF_320142672744849274;
                   if attrLengte_320142672744849274 > max(maxPassend_320142672744849274,1000)
                     then passend_320142672744849274 = substr(JA_NEE_ONB_19,1,maxPassend_320142672744849274);
                     else passend_320142672744849274 = JA_NEE_ONB_19;
                   passend_320142672744849274 = tranwrd(passend_320142672744849274,'9D'x,'D0'x);
                   put passend_320142672744849274 ~ @;
              end;
       if missing(JA_NEE_ONB_20)
         then put "," @;
         else do;
                   attrLengte_320987138628661994=length(JA_NEE_ONB_20);
                   aantalLF_320987138628661994 = countc(JA_NEE_ONB_20,'0A'x);
                   maxPassend_320987138628661994=1-1-aantalLF_320987138628661994;
                   if attrLengte_320987138628661994 > max(maxPassend_320987138628661994,1000)
                     then passend_320987138628661994 = substr(JA_NEE_ONB_20,1,maxPassend_320987138628661994);
                     else passend_320987138628661994 = JA_NEE_ONB_20;
                   passend_320987138628661994 = tranwrd(passend_320987138628661994,'9D'x,'D0'x);
                   put passend_320987138628661994 ~ @;
              end;
       if missing(Mutatie_dat)
         then put "," @;
         else put Mutatie_dat @;
       if missing(Mutatie_user)
         then put "," @;
         else do;
                   attrLengte_7832584208908286581=length(Mutatie_user);
                   aantalLF_7832584208908286581 = countc(Mutatie_user,'0A'x);
                   maxPassend_7832584208908286581=30-1-aantalLF_7832584208908286581;
                   if attrLengte_7832584208908286581 > max(maxPassend_7832584208908286581,1000)
                     then passend_7832584208908286581 = substr(Mutatie_user,1,maxPassend_7832584208908286581);
                     else passend_7832584208908286581 = Mutatie_user;
                   passend_7832584208908286581 = tranwrd(passend_7832584208908286581,'9D'x,'D0'x);
                   put passend_7832584208908286581 ~ @;
              end;
       if missing(NUMERIEK_01)
         then put "," @;
         else put NUMERIEK_01 @;
       if missing(NUMERIEK_02)
         then put "," @;
         else put NUMERIEK_02 @;
       if missing(NUMERIEK_03)
         then put "," @;
         else put NUMERIEK_03 @;
       if missing(NUMERIEK_04)
         then put "," @;
         else put NUMERIEK_04 @;
       if missing(NUMERIEK_05)
         then put "," @;
         else put NUMERIEK_05 @;
       if missing(NUMERIEK_06)
         then put "," @;
         else put NUMERIEK_06 @;
       if missing(NUMERIEK_07)
         then put "," @;
         else put NUMERIEK_07 @;
       if missing(NUMERIEK_08)
         then put "," @;
         else put NUMERIEK_08 @;
       if missing(NUMERIEK_09)
         then put "," @;
         else put NUMERIEK_09 @;
       if missing(NUMERIEK_10)
         then put "," @;
         else put NUMERIEK_10 @;
       if missing(NUMERIEK_11)
         then put "," @;
         else put NUMERIEK_11 @;
       if missing(NUMERIEK_12)
         then put "," @;
         else put NUMERIEK_12 @;
       if missing(NUMERIEK_13)
         then put "," @;
         else put NUMERIEK_13 @;
       if missing(NUMERIEK_14)
         then put "," @;
         else put NUMERIEK_14 @;
       if missing(NUMERIEK_15)
         then put "," @;
         else put NUMERIEK_15 @;
       if missing(NUMERIEK_16)
         then put "," @;
         else put NUMERIEK_16 @;
       if missing(NUMERIEK_17)
         then put "," @;
         else put NUMERIEK_17 @;
       if missing(NUMERIEK_18)
         then put "," @;
         else put NUMERIEK_18 @;
       if missing(NUMERIEK_19)
         then put "," @;
         else put NUMERIEK_19 @;
       if missing(NUMERIEK_20)
         then put "," @;
         else put NUMERIEK_20 @;
       if missing(NUMERIEK_21)
         then put "," @;
         else put NUMERIEK_21 @;
       if missing(NUMERIEK_22)
         then put "," @;
         else put NUMERIEK_22 @;
       if missing(NUMERIEK_23)
         then put "," @;
         else put NUMERIEK_23 @;
       if missing(NUMERIEK_24)
         then put "," @;
         else put NUMERIEK_24 @;
       if missing(NUMERIEK_25)
         then put "," @;
         else put NUMERIEK_25 @;
       if missing(NUMERIEK_26)
         then put "," @;
         else put NUMERIEK_26 @;
       if missing(NUMERIEK_27)
         then put "," @;
         else put NUMERIEK_27 @;
       if missing(NUMERIEK_28)
         then put "," @;
         else put NUMERIEK_28 @;
       if missing(NUMERIEK_29)
         then put "," @;
         else put NUMERIEK_29 @;
       if missing(NUMERIEK_30)
         then put "," @;
         else put NUMERIEK_30 @;
       if missing(NUMERIEK_31)
         then put "," @;
         else put NUMERIEK_31 @;
       if missing(NUMERIEK_32)
         then put "," @;
         else put NUMERIEK_32 @;
       if missing(NUMERIEK_33)
         then put "," @;
         else put NUMERIEK_33 @;
       if missing(NUMERIEK_34)
         then put "," @;
         else put NUMERIEK_34 @;
       if missing(NUMERIEK_35)
         then put "," @;
         else put NUMERIEK_35 @;
       if missing(NUMERIEK_36)
         then put "," @;
         else put NUMERIEK_36 @;
       if missing(NUMERIEK_37)
         then put "," @;
         else put NUMERIEK_37 @;
       if missing(NUMERIEK_38)
         then put "," @;
         else put NUMERIEK_38 @;
       if missing(NUMERIEK_39)
         then put "," @;
         else put NUMERIEK_39 @;
       if missing(NUMERIEK_40)
         then put "," @;
         else put NUMERIEK_40 @;
       if missing(OPTIONBUTTON_01)
         then put "," @;
         else do;
                   attrLengte_2317130619227152338=length(OPTIONBUTTON_01);
                   aantalLF_2317130619227152338 = countc(OPTIONBUTTON_01,'0A'x);
                   maxPassend_2317130619227152338=255-1-aantalLF_2317130619227152338;
                   if attrLengte_2317130619227152338 > max(maxPassend_2317130619227152338,1000)
                     then passend_2317130619227152338 = substr(OPTIONBUTTON_01,1,maxPassend_2317130619227152338);
                     else passend_2317130619227152338 = OPTIONBUTTON_01;
                   passend_2317130619227152338 = tranwrd(passend_2317130619227152338,'9D'x,'D0'x);
                   put passend_2317130619227152338 ~ @;
              end;
       if missing(OPTIONBUTTON_02)
         then put "," @;
         else do;
                   attrLengte_2317130619176819499=length(OPTIONBUTTON_02);
                   aantalLF_2317130619176819499 = countc(OPTIONBUTTON_02,'0A'x);
                   maxPassend_2317130619176819499=255-1-aantalLF_2317130619176819499;
                   if attrLengte_2317130619176819499 > max(maxPassend_2317130619176819499,1000)
                     then passend_2317130619176819499 = substr(OPTIONBUTTON_02,1,maxPassend_2317130619176819499);
                     else passend_2317130619176819499 = OPTIONBUTTON_02;
                   passend_2317130619176819499 = tranwrd(passend_2317130619176819499,'9D'x,'D0'x);
                   put passend_2317130619176819499 ~ @;
              end;
       if missing(OPTIONBUTTON_03)
         then put "," @;
         else do;
                   attrLengte_2317130619193597112=length(OPTIONBUTTON_03);
                   aantalLF_2317130619193597112 = countc(OPTIONBUTTON_03,'0A'x);
                   maxPassend_2317130619193597112=255-1-aantalLF_2317130619193597112;
                   if attrLengte_2317130619193597112 > max(maxPassend_2317130619193597112,1000)
                     then passend_2317130619193597112 = substr(OPTIONBUTTON_03,1,maxPassend_2317130619193597112);
                     else passend_2317130619193597112 = OPTIONBUTTON_03;
                   passend_2317130619193597112 = tranwrd(passend_2317130619193597112,'9D'x,'D0'x);
                   put passend_2317130619193597112 ~ @;
              end;
       if missing(OPTIONBUTTON_04)
         then put "," @;
         else do;
                   attrLengte_2317130619143264241=length(OPTIONBUTTON_04);
                   aantalLF_2317130619143264241 = countc(OPTIONBUTTON_04,'0A'x);
                   maxPassend_2317130619143264241=255-1-aantalLF_2317130619143264241;
                   if attrLengte_2317130619143264241 > max(maxPassend_2317130619143264241,1000)
                     then passend_2317130619143264241 = substr(OPTIONBUTTON_04,1,maxPassend_2317130619143264241);
                     else passend_2317130619143264241 = OPTIONBUTTON_04;
                   passend_2317130619143264241 = tranwrd(passend_2317130619143264241,'9D'x,'D0'x);
                   put passend_2317130619143264241 ~ @;
              end;
       if missing(OPTIONBUTTON_05)
         then put "," @;
         else do;
                   attrLengte_2317130619160041886=length(OPTIONBUTTON_05);
                   aantalLF_2317130619160041886 = countc(OPTIONBUTTON_05,'0A'x);
                   maxPassend_2317130619160041886=255-1-aantalLF_2317130619160041886;
                   if attrLengte_2317130619160041886 > max(maxPassend_2317130619160041886,1000)
                     then passend_2317130619160041886 = substr(OPTIONBUTTON_05,1,maxPassend_2317130619160041886);
                     else passend_2317130619160041886 = OPTIONBUTTON_05;
                   passend_2317130619160041886 = tranwrd(passend_2317130619160041886,'9D'x,'D0'x);
                   put passend_2317130619160041886 ~ @;
              end;
       if missing(OPTIONBUTTON_06)
         then put "," @;
         else do;
                   attrLengte_2317130619109709015=length(OPTIONBUTTON_06);
                   aantalLF_2317130619109709015 = countc(OPTIONBUTTON_06,'0A'x);
                   maxPassend_2317130619109709015=255-1-aantalLF_2317130619109709015;
                   if attrLengte_2317130619109709015 > max(maxPassend_2317130619109709015,1000)
                     then passend_2317130619109709015 = substr(OPTIONBUTTON_06,1,maxPassend_2317130619109709015);
                     else passend_2317130619109709015 = OPTIONBUTTON_06;
                   passend_2317130619109709015 = tranwrd(passend_2317130619109709015,'9D'x,'D0'x);
                   put passend_2317130619109709015 ~ @;
              end;
       if missing(OPTIONBUTTON_07)
         then put "," @;
         else do;
                   attrLengte_2317130619126486628=length(OPTIONBUTTON_07);
                   aantalLF_2317130619126486628 = countc(OPTIONBUTTON_07,'0A'x);
                   maxPassend_2317130619126486628=255-1-aantalLF_2317130619126486628;
                   if attrLengte_2317130619126486628 > max(maxPassend_2317130619126486628,1000)
                     then passend_2317130619126486628 = substr(OPTIONBUTTON_07,1,maxPassend_2317130619126486628);
                     else passend_2317130619126486628 = OPTIONBUTTON_07;
                   passend_2317130619126486628 = tranwrd(passend_2317130619126486628,'9D'x,'D0'x);
                   put passend_2317130619126486628 ~ @;
              end;
       if missing(OPTIONBUTTON_08)
         then put "," @;
         else do;
                   attrLengte_2317130619076153789=length(OPTIONBUTTON_08);
                   aantalLF_2317130619076153789 = countc(OPTIONBUTTON_08,'0A'x);
                   maxPassend_2317130619076153789=255-1-aantalLF_2317130619076153789;
                   if attrLengte_2317130619076153789 > max(maxPassend_2317130619076153789,1000)
                     then passend_2317130619076153789 = substr(OPTIONBUTTON_08,1,maxPassend_2317130619076153789);
                     else passend_2317130619076153789 = OPTIONBUTTON_08;
                   passend_2317130619076153789 = tranwrd(passend_2317130619076153789,'9D'x,'D0'x);
                   put passend_2317130619076153789 ~ @;
              end;
       if missing(OPTIONBUTTON_09)
         then put "," @;
         else do;
                   attrLengte_2317130619092931402=length(OPTIONBUTTON_09);
                   aantalLF_2317130619092931402 = countc(OPTIONBUTTON_09,'0A'x);
                   maxPassend_2317130619092931402=255-1-aantalLF_2317130619092931402;
                   if attrLengte_2317130619092931402 > max(maxPassend_2317130619092931402,1000)
                     then passend_2317130619092931402 = substr(OPTIONBUTTON_09,1,maxPassend_2317130619092931402);
                     else passend_2317130619092931402 = OPTIONBUTTON_09;
                   passend_2317130619092931402 = tranwrd(passend_2317130619092931402,'9D'x,'D0'x);
                   put passend_2317130619092931402 ~ @;
              end;
       if missing(OPTIONBUTTON_10)
         then put "," @;
         else do;
                   attrLengte_2317412108783451516=length(OPTIONBUTTON_10);
                   aantalLF_2317412108783451516 = countc(OPTIONBUTTON_10,'0A'x);
                   maxPassend_2317412108783451516=255-1-aantalLF_2317412108783451516;
                   if attrLengte_2317412108783451516 > max(maxPassend_2317412108783451516,1000)
                     then passend_2317412108783451516 = substr(OPTIONBUTTON_10,1,maxPassend_2317412108783451516);
                     else passend_2317412108783451516 = OPTIONBUTTON_10;
                   passend_2317412108783451516 = tranwrd(passend_2317412108783451516,'9D'x,'D0'x);
                   put passend_2317412108783451516 ~ @;
              end;
       if missing(OPTIONBUTTON_11)
         then put "," @;
         else do;
                   attrLengte_2317412108766673903=length(OPTIONBUTTON_11);
                   aantalLF_2317412108766673903 = countc(OPTIONBUTTON_11,'0A'x);
                   maxPassend_2317412108766673903=255-1-aantalLF_2317412108766673903;
                   if attrLengte_2317412108766673903 > max(maxPassend_2317412108766673903,1000)
                     then passend_2317412108766673903 = substr(OPTIONBUTTON_11,1,maxPassend_2317412108766673903);
                     else passend_2317412108766673903 = OPTIONBUTTON_11;
                   passend_2317412108766673903 = tranwrd(passend_2317412108766673903,'9D'x,'D0'x);
                   put passend_2317412108766673903 ~ @;
              end;
       if missing(OPTIONBUTTON_12)
         then put "," @;
         else do;
                   attrLengte_2317412108817006742=length(OPTIONBUTTON_12);
                   aantalLF_2317412108817006742 = countc(OPTIONBUTTON_12,'0A'x);
                   maxPassend_2317412108817006742=255-1-aantalLF_2317412108817006742;
                   if attrLengte_2317412108817006742 > max(maxPassend_2317412108817006742,1000)
                     then passend_2317412108817006742 = substr(OPTIONBUTTON_12,1,maxPassend_2317412108817006742);
                     else passend_2317412108817006742 = OPTIONBUTTON_12;
                   passend_2317412108817006742 = tranwrd(passend_2317412108817006742,'9D'x,'D0'x);
                   put passend_2317412108817006742 ~ @;
              end;
       if missing(OPTIONBUTTON_13)
         then put "," @;
         else do;
                   attrLengte_2317412108800229129=length(OPTIONBUTTON_13);
                   aantalLF_2317412108800229129 = countc(OPTIONBUTTON_13,'0A'x);
                   maxPassend_2317412108800229129=255-1-aantalLF_2317412108800229129;
                   if attrLengte_2317412108800229129 > max(maxPassend_2317412108800229129,1000)
                     then passend_2317412108800229129 = substr(OPTIONBUTTON_13,1,maxPassend_2317412108800229129);
                     else passend_2317412108800229129 = OPTIONBUTTON_13;
                   passend_2317412108800229129 = tranwrd(passend_2317412108800229129,'9D'x,'D0'x);
                   put passend_2317412108800229129 ~ @;
              end;
       if missing(OPTIONBUTTON_14)
         then put "," @;
         else do;
                   attrLengte_2317412108850561968=length(OPTIONBUTTON_14);
                   aantalLF_2317412108850561968 = countc(OPTIONBUTTON_14,'0A'x);
                   maxPassend_2317412108850561968=255-1-aantalLF_2317412108850561968;
                   if attrLengte_2317412108850561968 > max(maxPassend_2317412108850561968,1000)
                     then passend_2317412108850561968 = substr(OPTIONBUTTON_14,1,maxPassend_2317412108850561968);
                     else passend_2317412108850561968 = OPTIONBUTTON_14;
                   passend_2317412108850561968 = tranwrd(passend_2317412108850561968,'9D'x,'D0'x);
                   put passend_2317412108850561968 ~ @;
              end;
       if missing(OPTIONBUTTON_15)
         then put "," @;
         else do;
                   attrLengte_2317412108833784355=length(OPTIONBUTTON_15);
                   aantalLF_2317412108833784355 = countc(OPTIONBUTTON_15,'0A'x);
                   maxPassend_2317412108833784355=255-1-aantalLF_2317412108833784355;
                   if attrLengte_2317412108833784355 > max(maxPassend_2317412108833784355,1000)
                     then passend_2317412108833784355 = substr(OPTIONBUTTON_15,1,maxPassend_2317412108833784355);
                     else passend_2317412108833784355 = OPTIONBUTTON_15;
                   passend_2317412108833784355 = tranwrd(passend_2317412108833784355,'9D'x,'D0'x);
                   put passend_2317412108833784355 ~ @;
              end;
       if missing(OPTIONBUTTON_16)
         then put "," @;
         else do;
                   attrLengte_2317412108884117226=length(OPTIONBUTTON_16);
                   aantalLF_2317412108884117226 = countc(OPTIONBUTTON_16,'0A'x);
                   maxPassend_2317412108884117226=255-1-aantalLF_2317412108884117226;
                   if attrLengte_2317412108884117226 > max(maxPassend_2317412108884117226,1000)
                     then passend_2317412108884117226 = substr(OPTIONBUTTON_16,1,maxPassend_2317412108884117226);
                     else passend_2317412108884117226 = OPTIONBUTTON_16;
                   passend_2317412108884117226 = tranwrd(passend_2317412108884117226,'9D'x,'D0'x);
                   put passend_2317412108884117226 ~ @;
              end;
       if missing(OPTIONBUTTON_17)
         then put "," @;
         else do;
                   attrLengte_2317412108867339613=length(OPTIONBUTTON_17);
                   aantalLF_2317412108867339613 = countc(OPTIONBUTTON_17,'0A'x);
                   maxPassend_2317412108867339613=255-1-aantalLF_2317412108867339613;
                   if attrLengte_2317412108867339613 > max(maxPassend_2317412108867339613,1000)
                     then passend_2317412108867339613 = substr(OPTIONBUTTON_17,1,maxPassend_2317412108867339613);
                     else passend_2317412108867339613 = OPTIONBUTTON_17;
                   passend_2317412108867339613 = tranwrd(passend_2317412108867339613,'9D'x,'D0'x);
                   put passend_2317412108867339613 ~ @;
              end;
       if missing(OPTIONBUTTON_18)
         then put "," @;
         else do;
                   attrLengte_2317412108917672452=length(OPTIONBUTTON_18);
                   aantalLF_2317412108917672452 = countc(OPTIONBUTTON_18,'0A'x);
                   maxPassend_2317412108917672452=255-1-aantalLF_2317412108917672452;
                   if attrLengte_2317412108917672452 > max(maxPassend_2317412108917672452,1000)
                     then passend_2317412108917672452 = substr(OPTIONBUTTON_18,1,maxPassend_2317412108917672452);
                     else passend_2317412108917672452 = OPTIONBUTTON_18;
                   passend_2317412108917672452 = tranwrd(passend_2317412108917672452,'9D'x,'D0'x);
                   put passend_2317412108917672452 ~ @;
              end;
       if missing(OPTIONBUTTON_19)
         then put "," @;
         else do;
                   attrLengte_2317412108900894839=length(OPTIONBUTTON_19);
                   aantalLF_2317412108900894839 = countc(OPTIONBUTTON_19,'0A'x);
                   maxPassend_2317412108900894839=255-1-aantalLF_2317412108900894839;
                   if attrLengte_2317412108900894839 > max(maxPassend_2317412108900894839,1000)
                     then passend_2317412108900894839 = substr(OPTIONBUTTON_19,1,maxPassend_2317412108900894839);
                     else passend_2317412108900894839 = OPTIONBUTTON_19;
                   passend_2317412108900894839 = tranwrd(passend_2317412108900894839,'9D'x,'D0'x);
                   put passend_2317412108900894839 ~ @;
              end;
       if missing(OPTIONBUTTON_20)
         then put "," @;
         else do;
                   attrLengte_2316567643285524023=length(OPTIONBUTTON_20);
                   aantalLF_2316567643285524023 = countc(OPTIONBUTTON_20,'0A'x);
                   maxPassend_2316567643285524023=255-1-aantalLF_2316567643285524023;
                   if attrLengte_2316567643285524023 > max(maxPassend_2316567643285524023,1000)
                     then passend_2316567643285524023 = substr(OPTIONBUTTON_20,1,maxPassend_2316567643285524023);
                     else passend_2316567643285524023 = OPTIONBUTTON_20;
                   passend_2316567643285524023 = tranwrd(passend_2316567643285524023,'9D'x,'D0'x);
                   put passend_2316567643285524023 ~ @;
              end;
       if missing(TEKSTBLOK_01)
         then put "," @;
         else do;
                   attrLengte_3028293016467408665=length(TEKSTBLOK_01);
                   aantalLF_3028293016467408665 = countc(TEKSTBLOK_01,'0A'x);
                   maxPassend_3028293016467408665=2048-1-aantalLF_3028293016467408665;
                   if attrLengte_3028293016467408665 > max(maxPassend_3028293016467408665,1000)
                     then passend_3028293016467408665 = substr(TEKSTBLOK_01,1,maxPassend_3028293016467408665);
                     else passend_3028293016467408665 = TEKSTBLOK_01;
                   passend_3028293016467408665 = tranwrd(passend_3028293016467408665,'9D'x,'D0'x);
                   put passend_3028293016467408665 ~ @;
              end;
       if missing(TEKSTBLOK_02)
         then put "," @;
         else do;
                   attrLengte_3028293016450631054=length(TEKSTBLOK_02);
                   aantalLF_3028293016450631054 = countc(TEKSTBLOK_02,'0A'x);
                   maxPassend_3028293016450631054=2048-1-aantalLF_3028293016450631054;
                   if attrLengte_3028293016450631054 > max(maxPassend_3028293016450631054,1000)
                     then passend_3028293016450631054 = substr(TEKSTBLOK_02,1,maxPassend_3028293016450631054);
                     else passend_3028293016450631054 = TEKSTBLOK_02;
                   passend_3028293016450631054 = tranwrd(passend_3028293016450631054,'9D'x,'D0'x);
                   put passend_3028293016450631054 ~ @;
              end;
       if missing(TEKSTBLOK_03)
         then put "," @;
         else do;
                   attrLengte_3028293016433853411=length(TEKSTBLOK_03);
                   aantalLF_3028293016433853411 = countc(TEKSTBLOK_03,'0A'x);
                   maxPassend_3028293016433853411=2048-1-aantalLF_3028293016433853411;
                   if attrLengte_3028293016433853411 > max(maxPassend_3028293016433853411,1000)
                     then passend_3028293016433853411 = substr(TEKSTBLOK_03,1,maxPassend_3028293016433853411);
                     else passend_3028293016433853411 = TEKSTBLOK_03;
                   passend_3028293016433853411 = tranwrd(passend_3028293016433853411,'9D'x,'D0'x);
                   put passend_3028293016433853411 ~ @;
              end;
       if missing(TEKSTBLOK_04)
         then put "," @;
         else do;
                   attrLengte_3028293016417075800=length(TEKSTBLOK_04);
                   aantalLF_3028293016417075800 = countc(TEKSTBLOK_04,'0A'x);
                   maxPassend_3028293016417075800=2048-1-aantalLF_3028293016417075800;
                   if attrLengte_3028293016417075800 > max(maxPassend_3028293016417075800,1000)
                     then passend_3028293016417075800 = substr(TEKSTBLOK_04,1,maxPassend_3028293016417075800);
                     else passend_3028293016417075800 = TEKSTBLOK_04;
                   passend_3028293016417075800 = tranwrd(passend_3028293016417075800,'9D'x,'D0'x);
                   put passend_3028293016417075800 ~ @;
              end;
       if missing(TEKSTBLOK_05)
         then put "," @;
         else do;
                   attrLengte_3028293016400298181=length(TEKSTBLOK_05);
                   aantalLF_3028293016400298181 = countc(TEKSTBLOK_05,'0A'x);
                   maxPassend_3028293016400298181=2048-1-aantalLF_3028293016400298181;
                   if attrLengte_3028293016400298181 > max(maxPassend_3028293016400298181,1000)
                     then passend_3028293016400298181 = substr(TEKSTBLOK_05,1,maxPassend_3028293016400298181);
                     else passend_3028293016400298181 = TEKSTBLOK_05;
                   passend_3028293016400298181 = tranwrd(passend_3028293016400298181,'9D'x,'D0'x);
                   put passend_3028293016400298181 ~ @;
              end;
       if missing(TEKSTBLOK_06)
         then put "," @;
         else do;
                   attrLengte_3028293016383520570=length(TEKSTBLOK_06);
                   aantalLF_3028293016383520570 = countc(TEKSTBLOK_06,'0A'x);
                   maxPassend_3028293016383520570=2048-1-aantalLF_3028293016383520570;
                   if attrLengte_3028293016383520570 > max(maxPassend_3028293016383520570,1000)
                     then passend_3028293016383520570 = substr(TEKSTBLOK_06,1,maxPassend_3028293016383520570);
                     else passend_3028293016383520570 = TEKSTBLOK_06;
                   passend_3028293016383520570 = tranwrd(passend_3028293016383520570,'9D'x,'D0'x);
                   put passend_3028293016383520570 ~ @;
              end;
       if missing(TEKSTBLOK_07)
         then put "," @;
         else do;
                   attrLengte_3028293016366742959=length(TEKSTBLOK_07);
                   aantalLF_3028293016366742959 = countc(TEKSTBLOK_07,'0A'x);
                   maxPassend_3028293016366742959=2048-1-aantalLF_3028293016366742959;
                   if attrLengte_3028293016366742959 > max(maxPassend_3028293016366742959,1000)
                     then passend_3028293016366742959 = substr(TEKSTBLOK_07,1,maxPassend_3028293016366742959);
                     else passend_3028293016366742959 = TEKSTBLOK_07;
                   passend_3028293016366742959 = tranwrd(passend_3028293016366742959,'9D'x,'D0'x);
                   put passend_3028293016366742959 ~ @;
              end;
       if missing(TEKSTBLOK_08)
         then put "," @;
         else do;
                   attrLengte_3028293016618407220=length(TEKSTBLOK_08);
                   aantalLF_3028293016618407220 = countc(TEKSTBLOK_08,'0A'x);
                   maxPassend_3028293016618407220=2048-1-aantalLF_3028293016618407220;
                   if attrLengte_3028293016618407220 > max(maxPassend_3028293016618407220,1000)
                     then passend_3028293016618407220 = substr(TEKSTBLOK_08,1,maxPassend_3028293016618407220);
                     else passend_3028293016618407220 = TEKSTBLOK_08;
                   passend_3028293016618407220 = tranwrd(passend_3028293016618407220,'9D'x,'D0'x);
                   put passend_3028293016618407220 ~ @;
              end;
       if missing(TEKSTBLOK_09)
         then put "," @;
         else do;
                   attrLengte_3028293016601629601=length(TEKSTBLOK_09);
                   aantalLF_3028293016601629601 = countc(TEKSTBLOK_09,'0A'x);
                   maxPassend_3028293016601629601=2048-1-aantalLF_3028293016601629601;
                   if attrLengte_3028293016601629601 > max(maxPassend_3028293016601629601,1000)
                     then passend_3028293016601629601 = substr(TEKSTBLOK_09,1,maxPassend_3028293016601629601);
                     else passend_3028293016601629601 = TEKSTBLOK_09;
                   passend_3028293016601629601 = tranwrd(passend_3028293016601629601,'9D'x,'D0'x);
                   put passend_3028293016601629601 ~ @;
              end;
       if missing(TEKSTBLOK_10)
         then put "," @;
         else do;
                   attrLengte_3028011526374225683=length(TEKSTBLOK_10);
                   aantalLF_3028011526374225683 = countc(TEKSTBLOK_10,'0A'x);
                   maxPassend_3028011526374225683=2048-1-aantalLF_3028011526374225683;
                   if attrLengte_3028011526374225683 > max(maxPassend_3028011526374225683,1000)
                     then passend_3028011526374225683 = substr(TEKSTBLOK_10,1,maxPassend_3028011526374225683);
                     else passend_3028011526374225683 = TEKSTBLOK_10;
                   passend_3028011526374225683 = tranwrd(passend_3028011526374225683,'9D'x,'D0'x);
                   put passend_3028011526374225683 ~ @;
              end;
       if missing(VARCHAR_60_01)
         then put "," @;
         else do;
                   attrLengte_2777269963343329415=length(VARCHAR_60_01);
                   aantalLF_2777269963343329415 = countc(VARCHAR_60_01,'0A'x);
                   maxPassend_2777269963343329415=255-1-aantalLF_2777269963343329415;
                   if attrLengte_2777269963343329415 > max(maxPassend_2777269963343329415,1000)
                     then passend_2777269963343329415 = substr(VARCHAR_60_01,1,maxPassend_2777269963343329415);
                     else passend_2777269963343329415 = VARCHAR_60_01;
                   passend_2777269963343329415 = tranwrd(passend_2777269963343329415,'9D'x,'D0'x);
                   put passend_2777269963343329415 ~ @;
              end;
       if missing(VARCHAR_60_02)
         then put "," @;
         else do;
                   attrLengte_2777269963326551802=length(VARCHAR_60_02);
                   aantalLF_2777269963326551802 = countc(VARCHAR_60_02,'0A'x);
                   maxPassend_2777269963326551802=255-1-aantalLF_2777269963326551802;
                   if attrLengte_2777269963326551802 > max(maxPassend_2777269963326551802,1000)
                     then passend_2777269963326551802 = substr(VARCHAR_60_02,1,maxPassend_2777269963326551802);
                     else passend_2777269963326551802 = VARCHAR_60_02;
                   passend_2777269963326551802 = tranwrd(passend_2777269963326551802,'9D'x,'D0'x);
                   put passend_2777269963326551802 ~ @;
              end;
       if missing(VARCHAR_60_03)
         then put "," @;
         else do;
                   attrLengte_2777269963309774185=length(VARCHAR_60_03);
                   aantalLF_2777269963309774185 = countc(VARCHAR_60_03,'0A'x);
                   maxPassend_2777269963309774185=255-1-aantalLF_2777269963309774185;
                   if attrLengte_2777269963309774185 > max(maxPassend_2777269963309774185,1000)
                     then passend_2777269963309774185 = substr(VARCHAR_60_03,1,maxPassend_2777269963309774185);
                     else passend_2777269963309774185 = VARCHAR_60_03;
                   passend_2777269963309774185 = tranwrd(passend_2777269963309774185,'9D'x,'D0'x);
                   put passend_2777269963309774185 ~ @;
              end;
       if missing(VARCHAR_60_04)
         then put "," @;
         else do;
                   attrLengte_2777269963292996572=length(VARCHAR_60_04);
                   aantalLF_2777269963292996572 = countc(VARCHAR_60_04,'0A'x);
                   maxPassend_2777269963292996572=255-1-aantalLF_2777269963292996572;
                   if attrLengte_2777269963292996572 > max(maxPassend_2777269963292996572,1000)
                     then passend_2777269963292996572 = substr(VARCHAR_60_04,1,maxPassend_2777269963292996572);
                     else passend_2777269963292996572 = VARCHAR_60_04;
                   passend_2777269963292996572 = tranwrd(passend_2777269963292996572,'9D'x,'D0'x);
                   put passend_2777269963292996572 ~ @;
              end;
       if missing(VARCHAR_60_05)
         then put "," @;
         else do;
                   attrLengte_2777269963276218931=length(VARCHAR_60_05);
                   aantalLF_2777269963276218931 = countc(VARCHAR_60_05,'0A'x);
                   maxPassend_2777269963276218931=255-1-aantalLF_2777269963276218931;
                   if attrLengte_2777269963276218931 > max(maxPassend_2777269963276218931,1000)
                     then passend_2777269963276218931 = substr(VARCHAR_60_05,1,maxPassend_2777269963276218931);
                     else passend_2777269963276218931 = VARCHAR_60_05;
                   passend_2777269963276218931 = tranwrd(passend_2777269963276218931,'9D'x,'D0'x);
                   put passend_2777269963276218931 ~ @;
              end;
       if missing(VARCHAR_60_06)
         then put "," @;
         else do;
                   attrLengte_2777269963259441318=length(VARCHAR_60_06);
                   aantalLF_2777269963259441318 = countc(VARCHAR_60_06,'0A'x);
                   maxPassend_2777269963259441318=255-1-aantalLF_2777269963259441318;
                   if attrLengte_2777269963259441318 > max(maxPassend_2777269963259441318,1000)
                     then passend_2777269963259441318 = substr(VARCHAR_60_06,1,maxPassend_2777269963259441318);
                     else passend_2777269963259441318 = VARCHAR_60_06;
                   passend_2777269963259441318 = tranwrd(passend_2777269963259441318,'9D'x,'D0'x);
                   put passend_2777269963259441318 ~ @;
              end;
       if missing(VARCHAR_60_07)
         then put "," @;
         else do;
                   attrLengte_2777269963242663701=length(VARCHAR_60_07);
                   aantalLF_2777269963242663701 = countc(VARCHAR_60_07,'0A'x);
                   maxPassend_2777269963242663701=255-1-aantalLF_2777269963242663701;
                   if attrLengte_2777269963242663701 > max(maxPassend_2777269963242663701,1000)
                     then passend_2777269963242663701 = substr(VARCHAR_60_07,1,maxPassend_2777269963242663701);
                     else passend_2777269963242663701 = VARCHAR_60_07;
                   passend_2777269963242663701 = tranwrd(passend_2777269963242663701,'9D'x,'D0'x);
                   put passend_2777269963242663701 ~ @;
              end;
       if missing(VARCHAR_60_08)
         then put "," @;
         else do;
                   attrLengte_2777269963225886088=length(VARCHAR_60_08);
                   aantalLF_2777269963225886088 = countc(VARCHAR_60_08,'0A'x);
                   maxPassend_2777269963225886088=255-1-aantalLF_2777269963225886088;
                   if attrLengte_2777269963225886088 > max(maxPassend_2777269963225886088,1000)
                     then passend_2777269963225886088 = substr(VARCHAR_60_08,1,maxPassend_2777269963225886088);
                     else passend_2777269963225886088 = VARCHAR_60_08;
                   passend_2777269963225886088 = tranwrd(passend_2777269963225886088,'9D'x,'D0'x);
                   put passend_2777269963225886088 ~ @;
              end;
       if missing(VARCHAR_60_09)
         then put "," @;
         else do;
                   attrLengte_2777269963209108479=length(VARCHAR_60_09);
                   aantalLF_2777269963209108479 = countc(VARCHAR_60_09,'0A'x);
                   maxPassend_2777269963209108479=255-1-aantalLF_2777269963209108479;
                   if attrLengte_2777269963209108479 > max(maxPassend_2777269963209108479,1000)
                     then passend_2777269963209108479 = substr(VARCHAR_60_09,1,maxPassend_2777269963209108479);
                     else passend_2777269963209108479 = VARCHAR_60_09;
                   passend_2777269963209108479 = tranwrd(passend_2777269963209108479,'9D'x,'D0'x);
                   put passend_2777269963209108479 ~ @;
              end;
       if missing(VARCHAR_60_10)
         then put "," @;
         else do;
                   attrLengte_2776988475397681689=length(VARCHAR_60_10);
                   aantalLF_2776988475397681689 = countc(VARCHAR_60_10,'0A'x);
                   maxPassend_2776988475397681689=255-1-aantalLF_2776988475397681689;
                   if attrLengte_2776988475397681689 > max(maxPassend_2776988475397681689,1000)
                     then passend_2776988475397681689 = substr(VARCHAR_60_10,1,maxPassend_2776988475397681689);
                     else passend_2776988475397681689 = VARCHAR_60_10;
                   passend_2776988475397681689 = tranwrd(passend_2776988475397681689,'9D'x,'D0'x);
                   put passend_2776988475397681689 ~ @;
              end;
       if missing(VARCHAR_60_11)
         then put "," @;
         else do;
                   attrLengte_2776988475414459306=length(VARCHAR_60_11);
                   aantalLF_2776988475414459306 = countc(VARCHAR_60_11,'0A'x);
                   maxPassend_2776988475414459306=255-1-aantalLF_2776988475414459306;
                   if attrLengte_2776988475414459306 > max(maxPassend_2776988475414459306,1000)
                     then passend_2776988475414459306 = substr(VARCHAR_60_11,1,maxPassend_2776988475414459306);
                     else passend_2776988475414459306 = VARCHAR_60_11;
                   passend_2776988475414459306 = tranwrd(passend_2776988475414459306,'9D'x,'D0'x);
                   put passend_2776988475414459306 ~ @;
              end;
       if missing(VARCHAR_60_12)
         then put "," @;
         else do;
                   attrLengte_2776988475431236919=length(VARCHAR_60_12);
                   aantalLF_2776988475431236919 = countc(VARCHAR_60_12,'0A'x);
                   maxPassend_2776988475431236919=255-1-aantalLF_2776988475431236919;
                   if attrLengte_2776988475431236919 > max(maxPassend_2776988475431236919,1000)
                     then passend_2776988475431236919 = substr(VARCHAR_60_12,1,maxPassend_2776988475431236919);
                     else passend_2776988475431236919 = VARCHAR_60_12;
                   passend_2776988475431236919 = tranwrd(passend_2776988475431236919,'9D'x,'D0'x);
                   put passend_2776988475431236919 ~ @;
              end;
       if missing(VARCHAR_60_13)
         then put "," @;
         else do;
                   attrLengte_2776988475448014528=length(VARCHAR_60_13);
                   aantalLF_2776988475448014528 = countc(VARCHAR_60_13,'0A'x);
                   maxPassend_2776988475448014528=255-1-aantalLF_2776988475448014528;
                   if attrLengte_2776988475448014528 > max(maxPassend_2776988475448014528,1000)
                     then passend_2776988475448014528 = substr(VARCHAR_60_13,1,maxPassend_2776988475448014528);
                     else passend_2776988475448014528 = VARCHAR_60_13;
                   passend_2776988475448014528 = tranwrd(passend_2776988475448014528,'9D'x,'D0'x);
                   put passend_2776988475448014528 ~ @;
              end;
       if missing(VARCHAR_60_14)
         then put "," @;
         else do;
                   attrLengte_2776988475330571205=length(VARCHAR_60_14);
                   aantalLF_2776988475330571205 = countc(VARCHAR_60_14,'0A'x);
                   maxPassend_2776988475330571205=255-1-aantalLF_2776988475330571205;
                   if attrLengte_2776988475330571205 > max(maxPassend_2776988475330571205,1000)
                     then passend_2776988475330571205 = substr(VARCHAR_60_14,1,maxPassend_2776988475330571205);
                     else passend_2776988475330571205 = VARCHAR_60_14;
                   passend_2776988475330571205 = tranwrd(passend_2776988475330571205,'9D'x,'D0'x);
                   put passend_2776988475330571205 ~ @;
              end;
       if missing(VARCHAR_60_15)
         then put "," @;
         else do;
                   attrLengte_2776988475347348822=length(VARCHAR_60_15);
                   aantalLF_2776988475347348822 = countc(VARCHAR_60_15,'0A'x);
                   maxPassend_2776988475347348822=255-1-aantalLF_2776988475347348822;
                   if attrLengte_2776988475347348822 > max(maxPassend_2776988475347348822,1000)
                     then passend_2776988475347348822 = substr(VARCHAR_60_15,1,maxPassend_2776988475347348822);
                     else passend_2776988475347348822 = VARCHAR_60_15;
                   passend_2776988475347348822 = tranwrd(passend_2776988475347348822,'9D'x,'D0'x);
                   put passend_2776988475347348822 ~ @;
              end;
       if missing(VARCHAR_60_16)
         then put "," @;
         else do;
                   attrLengte_2776988475364126435=length(VARCHAR_60_16);
                   aantalLF_2776988475364126435 = countc(VARCHAR_60_16,'0A'x);
                   maxPassend_2776988475364126435=255-1-aantalLF_2776988475364126435;
                   if attrLengte_2776988475364126435 > max(maxPassend_2776988475364126435,1000)
                     then passend_2776988475364126435 = substr(VARCHAR_60_16,1,maxPassend_2776988475364126435);
                     else passend_2776988475364126435 = VARCHAR_60_16;
                   passend_2776988475364126435 = tranwrd(passend_2776988475364126435,'9D'x,'D0'x);
                   put passend_2776988475364126435 ~ @;
              end;
       if missing(VARCHAR_60_17)
         then put "," @;
         else do;
                   attrLengte_2776988475380904076=length(VARCHAR_60_17);
                   aantalLF_2776988475380904076 = countc(VARCHAR_60_17,'0A'x);
                   maxPassend_2776988475380904076=255-1-aantalLF_2776988475380904076;
                   if attrLengte_2776988475380904076 > max(maxPassend_2776988475380904076,1000)
                     then passend_2776988475380904076 = substr(VARCHAR_60_17,1,maxPassend_2776988475380904076);
                     else passend_2776988475380904076 = VARCHAR_60_17;
                   passend_2776988475380904076 = tranwrd(passend_2776988475380904076,'9D'x,'D0'x);
                   put passend_2776988475380904076 ~ @;
              end;
       if missing(VARCHAR_60_18)
         then put "," @;
         else do;
                   attrLengte_2776988475263460721=length(VARCHAR_60_18);
                   aantalLF_2776988475263460721 = countc(VARCHAR_60_18,'0A'x);
                   maxPassend_2776988475263460721=255-1-aantalLF_2776988475263460721;
                   if attrLengte_2776988475263460721 > max(maxPassend_2776988475263460721,1000)
                     then passend_2776988475263460721 = substr(VARCHAR_60_18,1,maxPassend_2776988475263460721);
                     else passend_2776988475263460721 = VARCHAR_60_18;
                   passend_2776988475263460721 = tranwrd(passend_2776988475263460721,'9D'x,'D0'x);
                   put passend_2776988475263460721 ~ @;
              end;
       if missing(VARCHAR_60_19)
         then put "," @;
         else do;
                   attrLengte_2776988475280238338=length(VARCHAR_60_19);
                   aantalLF_2776988475280238338 = countc(VARCHAR_60_19,'0A'x);
                   maxPassend_2776988475280238338=255-1-aantalLF_2776988475280238338;
                   if attrLengte_2776988475280238338 > max(maxPassend_2776988475280238338,1000)
                     then passend_2776988475280238338 = substr(VARCHAR_60_19,1,maxPassend_2776988475280238338);
                     else passend_2776988475280238338 = VARCHAR_60_19;
                   passend_2776988475280238338 = tranwrd(passend_2776988475280238338,'9D'x,'D0'x);
                   put passend_2776988475280238338 ~ @;
              end;
       if missing(VARCHAR_60_20)
         then put "," @;
         else do;
                   attrLengte_2777832940895609154=length(VARCHAR_60_20);
                   aantalLF_2777832940895609154 = countc(VARCHAR_60_20,'0A'x);
                   maxPassend_2777832940895609154=255-1-aantalLF_2777832940895609154;
                   if attrLengte_2777832940895609154 > max(maxPassend_2777832940895609154,1000)
                     then passend_2777832940895609154 = substr(VARCHAR_60_20,1,maxPassend_2777832940895609154);
                     else passend_2777832940895609154 = VARCHAR_60_20;
                   passend_2777832940895609154 = tranwrd(passend_2777832940895609154,'9D'x,'D0'x);
                   put passend_2777832940895609154 ~ @;
              end;
       if missing(VARCHAR_60_21)
         then put "," @;
         else do;
                   attrLengte_2777832940878831537=length(VARCHAR_60_21);
                   aantalLF_2777832940878831537 = countc(VARCHAR_60_21,'0A'x);
                   maxPassend_2777832940878831537=255-1-aantalLF_2777832940878831537;
                   if attrLengte_2777832940878831537 > max(maxPassend_2777832940878831537,1000)
                     then passend_2777832940878831537 = substr(VARCHAR_60_21,1,maxPassend_2777832940878831537);
                     else passend_2777832940878831537 = VARCHAR_60_21;
                   passend_2777832940878831537 = tranwrd(passend_2777832940878831537,'9D'x,'D0'x);
                   put passend_2777832940878831537 ~ @;
              end;
       if missing(VARCHAR_60_22)
         then put "," @;
         else do;
                   attrLengte_2777832940929164408=length(VARCHAR_60_22);
                   aantalLF_2777832940929164408 = countc(VARCHAR_60_22,'0A'x);
                   maxPassend_2777832940929164408=255-1-aantalLF_2777832940929164408;
                   if attrLengte_2777832940929164408 > max(maxPassend_2777832940929164408,1000)
                     then passend_2777832940929164408 = substr(VARCHAR_60_22,1,maxPassend_2777832940929164408);
                     else passend_2777832940929164408 = VARCHAR_60_22;
                   passend_2777832940929164408 = tranwrd(passend_2777832940929164408,'9D'x,'D0'x);
                   put passend_2777832940929164408 ~ @;
              end;
       if missing(VARCHAR_60_23)
         then put "," @;
         else do;
                   attrLengte_2777832940912386799=length(VARCHAR_60_23);
                   aantalLF_2777832940912386799 = countc(VARCHAR_60_23,'0A'x);
                   maxPassend_2777832940912386799=255-1-aantalLF_2777832940912386799;
                   if attrLengte_2777832940912386799 > max(maxPassend_2777832940912386799,1000)
                     then passend_2777832940912386799 = substr(VARCHAR_60_23,1,maxPassend_2777832940912386799);
                     else passend_2777832940912386799 = VARCHAR_60_23;
                   passend_2777832940912386799 = tranwrd(passend_2777832940912386799,'9D'x,'D0'x);
                   put passend_2777832940912386799 ~ @;
              end;
       if missing(VARCHAR_60_24)
         then put "," @;
         else do;
                   attrLengte_2777832940828498702=length(VARCHAR_60_24);
                   aantalLF_2777832940828498702 = countc(VARCHAR_60_24,'0A'x);
                   maxPassend_2777832940828498702=255-1-aantalLF_2777832940828498702;
                   if attrLengte_2777832940828498702 > max(maxPassend_2777832940828498702,1000)
                     then passend_2777832940828498702 = substr(VARCHAR_60_24,1,maxPassend_2777832940828498702);
                     else passend_2777832940828498702 = VARCHAR_60_24;
                   passend_2777832940828498702 = tranwrd(passend_2777832940828498702,'9D'x,'D0'x);
                   put passend_2777832940828498702 ~ @;
              end;
       if missing(VARCHAR_60_25)
         then put "," @;
         else do;
                   attrLengte_2777832940811721085=length(VARCHAR_60_25);
                   aantalLF_2777832940811721085 = countc(VARCHAR_60_25,'0A'x);
                   maxPassend_2777832940811721085=255-1-aantalLF_2777832940811721085;
                   if attrLengte_2777832940811721085 > max(maxPassend_2777832940811721085,1000)
                     then passend_2777832940811721085 = substr(VARCHAR_60_25,1,maxPassend_2777832940811721085);
                     else passend_2777832940811721085 = VARCHAR_60_25;
                   passend_2777832940811721085 = tranwrd(passend_2777832940811721085,'9D'x,'D0'x);
                   put passend_2777832940811721085 ~ @;
              end;
       if missing(VARCHAR_60_26)
         then put "," @;
         else do;
                   attrLengte_2777832940862053924=length(VARCHAR_60_26);
                   aantalLF_2777832940862053924 = countc(VARCHAR_60_26,'0A'x);
                   maxPassend_2777832940862053924=255-1-aantalLF_2777832940862053924;
                   if attrLengte_2777832940862053924 > max(maxPassend_2777832940862053924,1000)
                     then passend_2777832940862053924 = substr(VARCHAR_60_26,1,maxPassend_2777832940862053924);
                     else passend_2777832940862053924 = VARCHAR_60_26;
                   passend_2777832940862053924 = tranwrd(passend_2777832940862053924,'9D'x,'D0'x);
                   put passend_2777832940862053924 ~ @;
              end;
       if missing(VARCHAR_60_27)
         then put "," @;
         else do;
                   attrLengte_2777832940845276315=length(VARCHAR_60_27);
                   aantalLF_2777832940845276315 = countc(VARCHAR_60_27,'0A'x);
                   maxPassend_2777832940845276315=255-1-aantalLF_2777832940845276315;
                   if attrLengte_2777832940845276315 > max(maxPassend_2777832940845276315,1000)
                     then passend_2777832940845276315 = substr(VARCHAR_60_27,1,maxPassend_2777832940845276315);
                     else passend_2777832940845276315 = VARCHAR_60_27;
                   passend_2777832940845276315 = tranwrd(passend_2777832940845276315,'9D'x,'D0'x);
                   put passend_2777832940845276315 ~ @;
              end;
       if missing(VARCHAR_60_28)
         then put "," @;
         else do;
                   attrLengte_2777832941029830122=length(VARCHAR_60_28);
                   aantalLF_2777832941029830122 = countc(VARCHAR_60_28,'0A'x);
                   maxPassend_2777832941029830122=255-1-aantalLF_2777832941029830122;
                   if attrLengte_2777832941029830122 > max(maxPassend_2777832941029830122,1000)
                     then passend_2777832941029830122 = substr(VARCHAR_60_28,1,maxPassend_2777832941029830122);
                     else passend_2777832941029830122 = VARCHAR_60_28;
                   passend_2777832941029830122 = tranwrd(passend_2777832941029830122,'9D'x,'D0'x);
                   put passend_2777832941029830122 ~ @;
              end;
       if missing(VARCHAR_60_29)
         then put "," @;
         else do;
                   attrLengte_2777832941013052505=length(VARCHAR_60_29);
                   aantalLF_2777832941013052505 = countc(VARCHAR_60_29,'0A'x);
                   maxPassend_2777832941013052505=255-1-aantalLF_2777832941013052505;
                   if attrLengte_2777832941013052505 > max(maxPassend_2777832941013052505,1000)
                     then passend_2777832941013052505 = substr(VARCHAR_60_29,1,maxPassend_2777832941013052505);
                     else passend_2777832941013052505 = VARCHAR_60_29;
                   passend_2777832941013052505 = tranwrd(passend_2777832941013052505,'9D'x,'D0'x);
                   put passend_2777832941013052505 ~ @;
              end;
       if missing(VARCHAR_60_30)
         then put "," @;
         else do;
                   attrLengte_2777551452933183819=length(VARCHAR_60_30);
                   aantalLF_2777551452933183819 = countc(VARCHAR_60_30,'0A'x);
                   maxPassend_2777551452933183819=255-1-aantalLF_2777551452933183819;
                   if attrLengte_2777551452933183819 > max(maxPassend_2777551452933183819,1000)
                     then passend_2777551452933183819 = substr(VARCHAR_60_30,1,maxPassend_2777551452933183819);
                     else passend_2777551452933183819 = VARCHAR_60_30;
                   passend_2777551452933183819 = tranwrd(passend_2777551452933183819,'9D'x,'D0'x);
                   put passend_2777551452933183819 ~ @;
              end;
       if missing(VARCHAR_60_31)
         then put "," @;
         else do;
                   attrLengte_2777551452949961428=length(VARCHAR_60_31);
                   aantalLF_2777551452949961428 = countc(VARCHAR_60_31,'0A'x);
                   maxPassend_2777551452949961428=255-1-aantalLF_2777551452949961428;
                   if attrLengte_2777551452949961428 > max(maxPassend_2777551452949961428,1000)
                     then passend_2777551452949961428 = substr(VARCHAR_60_31,1,maxPassend_2777551452949961428);
                     else passend_2777551452949961428 = VARCHAR_60_31;
                   passend_2777551452949961428 = tranwrd(passend_2777551452949961428,'9D'x,'D0'x);
                   put passend_2777551452949961428 ~ @;
              end;
       if missing(VARCHAR_60_32)
         then put "," @;
         else do;
                   attrLengte_2777551452899628589=length(VARCHAR_60_32);
                   aantalLF_2777551452899628589 = countc(VARCHAR_60_32,'0A'x);
                   maxPassend_2777551452899628589=255-1-aantalLF_2777551452899628589;
                   if attrLengte_2777551452899628589 > max(maxPassend_2777551452899628589,1000)
                     then passend_2777551452899628589 = substr(VARCHAR_60_32,1,maxPassend_2777551452899628589);
                     else passend_2777551452899628589 = VARCHAR_60_32;
                   passend_2777551452899628589 = tranwrd(passend_2777551452899628589,'9D'x,'D0'x);
                   put passend_2777551452899628589 ~ @;
              end;
       if missing(VARCHAR_60_33)
         then put "," @;
         else do;
                   attrLengte_2777551452916406206=length(VARCHAR_60_33);
                   aantalLF_2777551452916406206 = countc(VARCHAR_60_33,'0A'x);
                   maxPassend_2777551452916406206=255-1-aantalLF_2777551452916406206;
                   if attrLengte_2777551452916406206 > max(maxPassend_2777551452916406206,1000)
                     then passend_2777551452916406206 = substr(VARCHAR_60_33,1,maxPassend_2777551452916406206);
                     else passend_2777551452916406206 = VARCHAR_60_33;
                   passend_2777551452916406206 = tranwrd(passend_2777551452916406206,'9D'x,'D0'x);
                   put passend_2777551452916406206 ~ @;
              end;
       if missing(VARCHAR_60_34)
         then put "," @;
         else do;
                   attrLengte_2777551453000294303=length(VARCHAR_60_34);
                   aantalLF_2777551453000294303 = countc(VARCHAR_60_34,'0A'x);
                   maxPassend_2777551453000294303=255-1-aantalLF_2777551453000294303;
                   if attrLengte_2777551453000294303 > max(maxPassend_2777551453000294303,1000)
                     then passend_2777551453000294303 = substr(VARCHAR_60_34,1,maxPassend_2777551453000294303);
                     else passend_2777551453000294303 = VARCHAR_60_34;
                   passend_2777551453000294303 = tranwrd(passend_2777551453000294303,'9D'x,'D0'x);
                   put passend_2777551453000294303 ~ @;
              end;
       if missing(VARCHAR_60_35)
         then put "," @;
         else do;
                   attrLengte_2777551453017071912=length(VARCHAR_60_35);
                   aantalLF_2777551453017071912 = countc(VARCHAR_60_35,'0A'x);
                   maxPassend_2777551453017071912=255-1-aantalLF_2777551453017071912;
                   if attrLengte_2777551453017071912 > max(maxPassend_2777551453017071912,1000)
                     then passend_2777551453017071912 = substr(VARCHAR_60_35,1,maxPassend_2777551453017071912);
                     else passend_2777551453017071912 = VARCHAR_60_35;
                   passend_2777551453017071912 = tranwrd(passend_2777551453017071912,'9D'x,'D0'x);
                   put passend_2777551453017071912 ~ @;
              end;
       if missing(VARCHAR_60_36)
         then put "," @;
         else do;
                   attrLengte_2777551452966739041=length(VARCHAR_60_36);
                   aantalLF_2777551452966739041 = countc(VARCHAR_60_36,'0A'x);
                   maxPassend_2777551452966739041=255-1-aantalLF_2777551452966739041;
                   if attrLengte_2777551452966739041 > max(maxPassend_2777551452966739041,1000)
                     then passend_2777551452966739041 = substr(VARCHAR_60_36,1,maxPassend_2777551452966739041);
                     else passend_2777551452966739041 = VARCHAR_60_36;
                   passend_2777551452966739041 = tranwrd(passend_2777551452966739041,'9D'x,'D0'x);
                   put passend_2777551452966739041 ~ @;
              end;
       if missing(VARCHAR_60_37)
         then put "," @;
         else do;
                   attrLengte_2777551452983516658=length(VARCHAR_60_37);
                   aantalLF_2777551452983516658 = countc(VARCHAR_60_37,'0A'x);
                   maxPassend_2777551452983516658=255-1-aantalLF_2777551452983516658;
                   if attrLengte_2777551452983516658 > max(maxPassend_2777551452983516658,1000)
                     then passend_2777551452983516658 = substr(VARCHAR_60_37,1,maxPassend_2777551452983516658);
                     else passend_2777551452983516658 = VARCHAR_60_37;
                   passend_2777551452983516658 = tranwrd(passend_2777551452983516658,'9D'x,'D0'x);
                   put passend_2777551452983516658 ~ @;
              end;
       if missing(VARCHAR_60_38)
         then put "," @;
         else do;
                   attrLengte_2777551453067404755=length(VARCHAR_60_38);
                   aantalLF_2777551453067404755 = countc(VARCHAR_60_38,'0A'x);
                   maxPassend_2777551453067404755=255-1-aantalLF_2777551453067404755;
                   if attrLengte_2777551453067404755 > max(maxPassend_2777551453067404755,1000)
                     then passend_2777551453067404755 = substr(VARCHAR_60_38,1,maxPassend_2777551453067404755);
                     else passend_2777551453067404755 = VARCHAR_60_38;
                   passend_2777551453067404755 = tranwrd(passend_2777551453067404755,'9D'x,'D0'x);
                   put passend_2777551453067404755 ~ @;
              end;
       if missing(VARCHAR_60_39)
         then put "," @;
         else do;
                   attrLengte_2777551453084182396=length(VARCHAR_60_39);
                   aantalLF_2777551453084182396 = countc(VARCHAR_60_39,'0A'x);
                   maxPassend_2777551453084182396=255-1-aantalLF_2777551453084182396;
                   if attrLengte_2777551453084182396 > max(maxPassend_2777551453084182396,1000)
                     then passend_2777551453084182396 = substr(VARCHAR_60_39,1,maxPassend_2777551453084182396);
                     else passend_2777551453084182396 = VARCHAR_60_39;
                   passend_2777551453084182396 = tranwrd(passend_2777551453084182396,'9D'x,'D0'x);
                   put passend_2777551453084182396 ~ @;
              end;
       if missing(VARCHAR_60_40)
         then put "," @;
         else do;
                   attrLengte_2776144009362870388=length(VARCHAR_60_40);
                   aantalLF_2776144009362870388 = countc(VARCHAR_60_40,'0A'x);
                   maxPassend_2776144009362870388=255-1-aantalLF_2776144009362870388;
                   if attrLengte_2776144009362870388 > max(maxPassend_2776144009362870388,1000)
                     then passend_2776144009362870388 = substr(VARCHAR_60_40,1,maxPassend_2776144009362870388);
                     else passend_2776144009362870388 = VARCHAR_60_40;
                   passend_2776144009362870388 = tranwrd(passend_2776144009362870388,'9D'x,'D0'x);
                   put passend_2776144009362870388 ~ @;
              end;
       if missing(VGS_ID)
         then put "," @;
         else put VGS_ID @;
       if missing(VVG_VKM_VAR_GEGEVENS_DOS)
         then put "," @;
         else do;
                   attrLengte_4356781747989407008=length(VVG_VKM_VAR_GEGEVENS_DOS);
                   aantalLF_4356781747989407008 = countc(VVG_VKM_VAR_GEGEVENS_DOS,'0A'x);
                   maxPassend_4356781747989407008=1-1-aantalLF_4356781747989407008;
                   if attrLengte_4356781747989407008 > max(maxPassend_4356781747989407008,1000)
                     then passend_4356781747989407008 = substr(VVG_VKM_VAR_GEGEVENS_DOS,1,maxPassend_4356781747989407008);
                     else passend_4356781747989407008 = VVG_VKM_VAR_GEGEVENS_DOS;
                   passend_4356781747989407008 = tranwrd(passend_4356781747989407008,'9D'x,'D0'x);
                   put passend_4356781747989407008 ~ @;
              end;
       if missing(VVG_VKM_VAR_GEGEVENS_PRG)
         then put "," @;
         else do;
                   attrLengte_8482460586457766179=length(VVG_VKM_VAR_GEGEVENS_PRG);
                   aantalLF_8482460586457766179 = countc(VVG_VKM_VAR_GEGEVENS_PRG,'0A'x);
                   maxPassend_8482460586457766179=1-1-aantalLF_8482460586457766179;
                   if attrLengte_8482460586457766179 > max(maxPassend_8482460586457766179,1000)
                     then passend_8482460586457766179 = substr(VVG_VKM_VAR_GEGEVENS_PRG,1,maxPassend_8482460586457766179);
                     else passend_8482460586457766179 = VVG_VKM_VAR_GEGEVENS_PRG;
                   passend_8482460586457766179 = tranwrd(passend_8482460586457766179,'9D'x,'D0'x);
                   put passend_8482460586457766179 ~ @;
              end;
       if missing(VVG_VKT_ID)
         then put "," @;
         else put VVG_VKT_ID @;
       if missing(VVG_DOS_ID)
         then put "," @;
         else put VVG_DOS_ID @;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

PROC SQL;
   CREATE TABLE MIGRATIE.BAS_VKM_VAR_KAART AS
   SELECT t1.Vkt_id,
          t1.Kaart_naam,
          t1.Datum_start FORMAT=B8601DT19. AS Datum_start,
          t1.Datum_einde FORMAT=B8601DT19. AS Datum_einde,
          t1.Omschrijving,
          t1.Vkm_var_kaart_dos,
          t1.Vkm_var_kaart_prg,
          t1.Prg_id,
          t1.Reg_id,
          t1.Reg_id_regpar,
          t1.Reg_Nr,
          t1.Vkm_var_kaart_dos_prg,
          t1.Vkm_var_kaart_dos_reg,
          t1.Vkm_var_kaart_dos_regpar,
          t1.Geblokkeerd,
          t1.Copy_jn
     FROM DATAQASG.VKM_VAR_KAART_TCMG t1;
QUIT;

data MIGRATIE.BAS_VKM_VAR_KAART;
  set MIGRATIE.BAS_VKM_VAR_KAART;
  techId=_n_;
run;


data _null_; 
    %let _EFIERR_ = 0; /* set the ERROR detection macro variable */ 
    %let _EFIREC_ = 0; /* clear export record count macro variable */ 
    file "\\LNV.INTERN\GRP\TCMG\002 Onderdelen\34-kluismap MIRA Migratie bestanden\SAS\Output\PRD\RuweData\BAS_VKM_VAR_KAART.csv" delimiter=',' DSD DROPOVER lrecl=32767; 
    if _n_ = 1 then        /* write column names or labels */ 
     do; 
       put 
          "Vkt_id" 
       ','
          "Kaart_naam" 
       ','
          "Datum_start" 
       ','
          "Datum_einde" 
       ','
          "Omschrijving" 
       ','
          "Vkm_var_kaart_dos" 
       ','
          "Vkm_var_kaart_prg" 
       ','
          "Prg_id" 
       ','
          "Reg_id" 
       ','
          "Reg_id_regpar" 
       ','
          "Reg_Nr" 
       ','
          "Vkm_var_kaart_dos_prg" 
       ','
          "Vkm_var_kaart_dos_reg" 
       ','
          "Vkm_var_kaart_dos_regpar" 
       ','
          "Geblokkeerd" 
       ','
          "Copy_jn" 
       ','
          "techId" 
       ; 
     end; 
   set  MIGRATIE.BAS_VKM_VAR_KAART   end=EFIEOD; 
       format Vkt_id best12. ;
       format Kaart_naam  ;
       format Datum_start B8601DT19. ;
       format Datum_einde B8601DT19. ;
       format Omschrijving  ;
       format Vkm_var_kaart_dos  ;
       format Vkm_var_kaart_prg  ;
       format Prg_id best12. ;
       format Reg_id best12. ;
       format Reg_id_regpar best12. ;
       format Reg_Nr best12. ;
       format Vkm_var_kaart_dos_prg  ;
       format Vkm_var_kaart_dos_reg  ;
       format Vkm_var_kaart_dos_regpar  ;
       format Geblokkeerd  ;
       format Copy_jn  ;
       format techId best12. ; 
     do; 
       EFIOUT + 1; 
       if missing(Vkt_id)
         then put "," @;
         else put Vkt_id @;
       if missing(Kaart_naam)
         then put "," @;
         else do;
                   attrLengte_3164922725850686505=length(Kaart_naam);
                   aantalLF_3164922725850686505 = countc(Kaart_naam,'0A'x);
                   maxPassend_3164922725850686505=30-1-aantalLF_3164922725850686505;
                   if attrLengte_3164922725850686505 > max(maxPassend_3164922725850686505,1000)
                     then passend_3164922725850686505 = substr(Kaart_naam,1,maxPassend_3164922725850686505);
                     else passend_3164922725850686505 = Kaart_naam;
                   passend_3164922725850686505 = tranwrd(passend_3164922725850686505,'9D'x,'D0'x);
                   put passend_3164922725850686505 ~ @;
              end;
       if missing(Datum_start)
         then put "," @;
         else put Datum_start @;
       if missing(Datum_einde)
         then put "," @;
         else put Datum_einde @;
       if missing(Omschrijving)
         then put "," @;
         else do;
                   attrLengte_2792940614022500175=length(Omschrijving);
                   aantalLF_2792940614022500175 = countc(Omschrijving,'0A'x);
                   maxPassend_2792940614022500175=2000-1-aantalLF_2792940614022500175;
                   if attrLengte_2792940614022500175 > max(maxPassend_2792940614022500175,1000)
                     then passend_2792940614022500175 = substr(Omschrijving,1,maxPassend_2792940614022500175);
                     else passend_2792940614022500175 = Omschrijving;
                   passend_2792940614022500175 = tranwrd(passend_2792940614022500175,'9D'x,'D0'x);
                   put passend_2792940614022500175 ~ @;
              end;
       if missing(Vkm_var_kaart_dos)
         then put "," @;
         else do;
                   attrLengte_381542781898920778=length(Vkm_var_kaart_dos);
                   aantalLF_381542781898920778 = countc(Vkm_var_kaart_dos,'0A'x);
                   maxPassend_381542781898920778=1-1-aantalLF_381542781898920778;
                   if attrLengte_381542781898920778 > max(maxPassend_381542781898920778,1000)
                     then passend_381542781898920778 = substr(Vkm_var_kaart_dos,1,maxPassend_381542781898920778);
                     else passend_381542781898920778 = Vkm_var_kaart_dos;
                   passend_381542781898920778 = tranwrd(passend_381542781898920778,'9D'x,'D0'x);
                   put passend_381542781898920778 ~ @;
              end;
       if missing(Vkm_var_kaart_prg)
         then put "," @;
         else do;
                   attrLengte_7193119486904882669=length(Vkm_var_kaart_prg);
                   aantalLF_7193119486904882669 = countc(Vkm_var_kaart_prg,'0A'x);
                   maxPassend_7193119486904882669=1-1-aantalLF_7193119486904882669;
                   if attrLengte_7193119486904882669 > max(maxPassend_7193119486904882669,1000)
                     then passend_7193119486904882669 = substr(Vkm_var_kaart_prg,1,maxPassend_7193119486904882669);
                     else passend_7193119486904882669 = Vkm_var_kaart_prg;
                   passend_7193119486904882669 = tranwrd(passend_7193119486904882669,'9D'x,'D0'x);
                   put passend_7193119486904882669 ~ @;
              end;
       if missing(Prg_id)
         then put "," @;
         else put Prg_id @;
       if missing(Reg_id)
         then put "," @;
         else put Reg_id @;
       if missing(Reg_id_regpar)
         then put "," @;
         else put Reg_id_regpar @;
       if missing(Reg_Nr)
         then put "," @;
         else put Reg_Nr @;
       if missing(Vkm_var_kaart_dos_prg)
         then put "," @;
         else do;
                   attrLengte_3584536051482242786=length(Vkm_var_kaart_dos_prg);
                   aantalLF_3584536051482242786 = countc(Vkm_var_kaart_dos_prg,'0A'x);
                   maxPassend_3584536051482242786=1-1-aantalLF_3584536051482242786;
                   if attrLengte_3584536051482242786 > max(maxPassend_3584536051482242786,1000)
                     then passend_3584536051482242786 = substr(Vkm_var_kaart_dos_prg,1,maxPassend_3584536051482242786);
                     else passend_3584536051482242786 = Vkm_var_kaart_dos_prg;
                   passend_3584536051482242786 = tranwrd(passend_3584536051482242786,'9D'x,'D0'x);
                   put passend_3584536051482242786 ~ @;
              end;
       if missing(Vkm_var_kaart_dos_reg)
         then put "," @;
         else do;
                   attrLengte_2927839731313237353=length(Vkm_var_kaart_dos_reg);
                   aantalLF_2927839731313237353 = countc(Vkm_var_kaart_dos_reg,'0A'x);
                   maxPassend_2927839731313237353=1-1-aantalLF_2927839731313237353;
                   if attrLengte_2927839731313237353 > max(maxPassend_2927839731313237353,1000)
                     then passend_2927839731313237353 = substr(Vkm_var_kaart_dos_reg,1,maxPassend_2927839731313237353);
                     else passend_2927839731313237353 = Vkm_var_kaart_dos_reg;
                   passend_2927839731313237353 = tranwrd(passend_2927839731313237353,'9D'x,'D0'x);
                   put passend_2927839731313237353 ~ @;
              end;
       if missing(Vkm_var_kaart_dos_regpar)
         then put "," @;
         else do;
                   attrLengte_5423184669609009757=length(Vkm_var_kaart_dos_regpar);
                   aantalLF_5423184669609009757 = countc(Vkm_var_kaart_dos_regpar,'0A'x);
                   maxPassend_5423184669609009757=1-1-aantalLF_5423184669609009757;
                   if attrLengte_5423184669609009757 > max(maxPassend_5423184669609009757,1000)
                     then passend_5423184669609009757 = substr(Vkm_var_kaart_dos_regpar,1,maxPassend_5423184669609009757);
                     else passend_5423184669609009757 = Vkm_var_kaart_dos_regpar;
                   passend_5423184669609009757 = tranwrd(passend_5423184669609009757,'9D'x,'D0'x);
                   put passend_5423184669609009757 ~ @;
              end;
       if missing(Geblokkeerd)
         then put "," @;
         else do;
                   attrLengte_5364441580193008346=length(Geblokkeerd);
                   aantalLF_5364441580193008346 = countc(Geblokkeerd,'0A'x);
                   maxPassend_5364441580193008346=1-1-aantalLF_5364441580193008346;
                   if attrLengte_5364441580193008346 > max(maxPassend_5364441580193008346,1000)
                     then passend_5364441580193008346 = substr(Geblokkeerd,1,maxPassend_5364441580193008346);
                     else passend_5364441580193008346 = Geblokkeerd;
                   passend_5364441580193008346 = tranwrd(passend_5364441580193008346,'9D'x,'D0'x);
                   put passend_5364441580193008346 ~ @;
              end;
       if missing(Copy_jn)
         then put "," @;
         else do;
                   attrLengte_8530042717172599085=length(Copy_jn);
                   aantalLF_8530042717172599085 = countc(Copy_jn,'0A'x);
                   maxPassend_8530042717172599085=1-1-aantalLF_8530042717172599085;
                   if attrLengte_8530042717172599085 > max(maxPassend_8530042717172599085,1000)
                     then passend_8530042717172599085 = substr(Copy_jn,1,maxPassend_8530042717172599085);
                     else passend_8530042717172599085 = Copy_jn;
                   passend_8530042717172599085 = tranwrd(passend_8530042717172599085,'9D'x,'D0'x);
                   put passend_8530042717172599085 ~ @;
              end;
       put techId best12. ; 
       ; 
     end; 
    if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */ 
    if EFIEOD then call symputx('_EFIREC_',EFIOUT); 
    run; 

